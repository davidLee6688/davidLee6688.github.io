<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>HTML标签整理</title>
    <url>/2020/05/12/2020-2020-05-12-HTML%E6%A0%87%E7%AD%BE%E6%95%B4%E7%90%86/</url>
    <content><![CDATA[<p><img src="/img/HTML%E6%A0%87%E7%AD%BE%E6%95%B4%E7%90%86.png" alt="HTML标签整理.png"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML5知识点总结</title>
    <url>/2020/05/12/2020-2020-05-12-HTML5%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<p><img src="/img/HTML5%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93.png" alt="HTML5知识点总结.png"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>Cytoscape.js教程</title>
    <url>/2020/05/16/2020-2020-05-16-cytoscape-js%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="一-Cytoscape-js简介与安装"><a href="#一-Cytoscape-js简介与安装" class="headerlink" title="一. Cytoscape.js简介与安装"></a>一. Cytoscape.js简介与安装</h1><h2 id="1-1-Cytoscape-js是什么？"><a href="#1-1-Cytoscape-js是什么？" class="headerlink" title="1.1 Cytoscape.js是什么？"></a>1.1 Cytoscape.js是什么？</h2><p>cytoscape.js是一个做网页可视化的常用工具 。cytoscape.js包含图论模型和可选的渲染器，用于显示交互式图形。该库旨在使程序员和科学家尽可能轻松地在他们的应用程序中使用图形理论，无论是用于Node.js应用程序中的服务器端分析还是用于丰富的用户界面。 </p>
<h2 id="1-2-Cytoscape-js安装及HelloWorld"><a href="#1-2-Cytoscape-js安装及HelloWorld" class="headerlink" title="1.2 Cytoscape.js安装及HelloWorld"></a>1.2 Cytoscape.js安装及HelloWorld</h2><h3 id="1-2-1-使用包管理工具进行安装"><a href="#1-2-1-使用包管理工具进行安装" class="headerlink" title="1.2.1 使用包管理工具进行安装"></a>1.2.1 使用包管理工具进行安装</h3><ul>
<li>npm : <code>npm install cytoscape</code></li>
<li>bower : <code>bower install cytoscape</code></li>
<li>jspm : <code>jspm install npm:cytoscape</code></li>
</ul>
<h3 id="1-2-2-使用Script标签直接引入"><a href="#1-2-2-使用Script标签直接引入" class="headerlink" title="1.2.2 使用Script标签直接引入"></a>1.2.2 使用Script标签直接引入</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;cytoscape.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>

<h3 id="1-2-3-HelloWorld"><a href="#1-2-3-HelloWorld" class="headerlink" title="1.2.3 HelloWorld"></a>1.2.3 HelloWorld</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> cy = cytoscape(&#123;</span><br><span class="line">  container: <span class="built_in">document</span>.getElementById(<span class="string">'cy'</span>) <span class="comment">// container to render in</span></span><br><span class="line">&#125;);</span><br><span class="line">也可以给container传递jQuery实例</span><br><span class="line"><span class="keyword">var</span> cy = cytoscape(&#123;</span><br><span class="line">  container: $(<span class="string">'#cy'</span>)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h3 id="1-2-4-常用参数"><a href="#1-2-4-常用参数" class="headerlink" title="1.2.4 常用参数"></a>1.2.4 常用参数</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="comment">// very commonly used options</span></span><br><span class="line">  container: <span class="literal">undefined</span>,</span><br><span class="line">  elements: [ <span class="comment">/* ... */</span> ],</span><br><span class="line">  style: [ <span class="comment">/* ... */</span> ],</span><br><span class="line">  layout: &#123; <span class="attr">name</span>: <span class="string">'grid'</span> <span class="comment">/* , ... */</span> &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// initial viewport state:</span></span><br><span class="line">  zoom: <span class="number">1</span>,</span><br><span class="line">  pan: &#123; <span class="attr">x</span>: <span class="number">0</span>, <span class="attr">y</span>: <span class="number">0</span> &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// interaction options:</span></span><br><span class="line">  minZoom: <span class="number">1e-50</span>,</span><br><span class="line">  maxZoom: <span class="number">1e50</span>,</span><br><span class="line">  zoomingEnabled: <span class="literal">true</span>,</span><br><span class="line">  userZoomingEnabled: <span class="literal">true</span>,</span><br><span class="line">  panningEnabled: <span class="literal">true</span>,</span><br><span class="line">  userPanningEnabled: <span class="literal">true</span>,</span><br><span class="line">  boxSelectionEnabled: <span class="literal">true</span>,</span><br><span class="line">  selectionType: <span class="string">'single'</span>,</span><br><span class="line">  touchTapThreshold: <span class="number">8</span>,</span><br><span class="line">  desktopTapThreshold: <span class="number">4</span>,</span><br><span class="line">  autolock: <span class="literal">false</span>,</span><br><span class="line">  autoungrabify: <span class="literal">false</span>,</span><br><span class="line">  autounselectify: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// rendering options:</span></span><br><span class="line">  headless: <span class="literal">false</span>,</span><br><span class="line">  styleEnabled: <span class="literal">true</span>,</span><br><span class="line">  hideEdgesOnViewport: <span class="literal">false</span>,</span><br><span class="line">  textureOnViewport: <span class="literal">false</span>,</span><br><span class="line">  motionBlur: <span class="literal">false</span>,</span><br><span class="line">  motionBlurOpacity: <span class="number">0.2</span>,</span><br><span class="line">  wheelSensitivity: <span class="number">1</span>,</span><br><span class="line">  pixelRatio: <span class="string">'auto'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="二-图形操作"><a href="#二-图形操作" class="headerlink" title="二. 图形操作"></a>二. 图形操作</h1><h2 id="1-添加元素"><a href="#1-添加元素" class="headerlink" title="1. 添加元素"></a>1. 添加元素</h2><p><code>cy.add()</code></p>
<h3 id="1-1-添加单个节点"><a href="#1-1-添加单个节点" class="headerlink" title="1.1 添加单个节点"></a>1.1 添加单个节点</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">cy.add(&#123;</span><br><span class="line">    group: <span class="string">'nodes'</span>,</span><br><span class="line">    data: &#123; <span class="attr">weight</span>: <span class="number">75</span> &#125;,</span><br><span class="line">    position: &#123; <span class="attr">x</span>: <span class="number">200</span>, <span class="attr">y</span>: <span class="number">200</span> &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h3 id="1-2-添加节点和边"><a href="#1-2-添加节点和边" class="headerlink" title="1.2 添加节点和边"></a>1.2 添加节点和边</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> eles = cy.add([</span><br><span class="line">  &#123; <span class="attr">group</span>: <span class="string">'nodes'</span>, <span class="attr">data</span>: &#123; <span class="attr">id</span>: <span class="string">'n0'</span> &#125;, <span class="attr">position</span>: &#123; <span class="attr">x</span>: <span class="number">100</span>, <span class="attr">y</span>: <span class="number">100</span> &#125; &#125;,</span><br><span class="line">  &#123; <span class="attr">group</span>: <span class="string">'nodes'</span>, <span class="attr">data</span>: &#123; <span class="attr">id</span>: <span class="string">'n1'</span> &#125;, <span class="attr">position</span>: &#123; <span class="attr">x</span>: <span class="number">200</span>, <span class="attr">y</span>: <span class="number">200</span> &#125; &#125;,</span><br><span class="line">  &#123; <span class="attr">group</span>: <span class="string">'edges'</span>, <span class="attr">data</span>: &#123; <span class="attr">id</span>: <span class="string">'e0'</span>, <span class="attr">source</span>: <span class="string">'n0'</span>, <span class="attr">target</span>: <span class="string">'n1'</span> &#125; &#125;</span><br><span class="line">]);</span><br></pre></td></tr></table></figure>

<h2 id="2-删除元素"><a href="#2-删除元素" class="headerlink" title="2. 删除元素"></a>2. 删除元素</h2><p><code>cy.remove()</code></p>
<h3 id="2-1-移除单个元素"><a href="#2-1-移除单个元素" class="headerlink" title="2.1 移除单个元素"></a>2.1 移除单个元素</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> j = cy.$(<span class="string">'#j'</span>);</span><br><span class="line">cy.remove( j );</span><br></pre></td></tr></table></figure>

<h3 id="2-2-移除集合中的元素"><a href="#2-2-移除集合中的元素" class="headerlink" title="2.2 移除集合中的元素"></a>2.2 移除集合中的元素</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> collection = cy.elements(<span class="string">'node[weight &gt; 50]'</span>);</span><br><span class="line">cy.remove( collection );</span><br></pre></td></tr></table></figure>

<h3 id="2-3-使用选择器来进行元素删除"><a href="#2-3-使用选择器来进行元素删除" class="headerlink" title="2.3 使用选择器来进行元素删除"></a>2.3 使用选择器来进行元素删除</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> collection = cy.elements(<span class="string">'node[weight &gt; 50]'</span>);</span><br><span class="line">cy.remove( collection );</span><br></pre></td></tr></table></figure>

<h2 id="3-使用集合"><a href="#3-使用集合" class="headerlink" title="3. 使用集合"></a>3. 使用集合</h2><p><code>cy.collection()</code> — 获取一个空集合</p>
<p>例如使用集合保存被点击过的节点</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> collection = cy.collection();</span><br><span class="line">cy.nodes().on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> clickedNode = e.target;</span><br><span class="line"></span><br><span class="line">  collection = collection.union(clickedNode);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h2 id="4-使用getElementById-来根据id获取指定元素"><a href="#4-使用getElementById-来根据id获取指定元素" class="headerlink" title="4. 使用getElementById()来根据id获取指定元素"></a>4. 使用getElementById()来根据id获取指定元素</h2><p><code>cy.getElementById( id )</code>  参数为元素的id值</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">cy.getElementById(<span class="string">'j'</span>);</span><br><span class="line">或者使用下列方式</span><br><span class="line">cy.getElementById(<span class="string">'j'</span>);</span><br></pre></td></tr></table></figure>

<h2 id="5-元素匹配"><a href="#5-元素匹配" class="headerlink" title="5. 元素匹配"></a>5. 元素匹配</h2><h3 id="5-1-cy-selector"><a href="#5-1-cy-selector" class="headerlink" title="5.1 cy.$( selector )"></a>5.1 cy.$( selector )</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">cy.$(<span class="string">"#a"</span>)  <span class="comment">// 获取id值为a的元素</span></span><br></pre></td></tr></table></figure>

<h3 id="5-2-cy-elements-selector"><a href="#5-2-cy-elements-selector" class="headerlink" title="5.2 cy.elements( selector )"></a>5.2 cy.elements( selector )</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">cy.elements(<span class="string">'[weight &gt; 50]'</span>);  <span class="comment">// 获取权重大于50的元素</span></span><br></pre></td></tr></table></figure>

<h3 id="5-3-cy-nodes-selector"><a href="#5-3-cy-nodes-selector" class="headerlink" title="5.3 cy.nodes( selector )"></a>5.3 cy.nodes( selector )</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">cy.nodes(<span class="string">'[weight &gt; 50]'</span>);   <span class="comment">// 获取权重大于50的节点</span></span><br></pre></td></tr></table></figure>

<h3 id="5-4-cy-edges-selector"><a href="#5-4-cy-edges-selector" class="headerlink" title="5.4 cy.edges( selector )"></a>5.4 cy.edges( selector )</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">cy.edges(<span class="string">'[source = "j"]'</span>); <span class="comment">// 获取源点为id为j的节点的边</span></span><br></pre></td></tr></table></figure>

<h3 id="5-5-cy-filter-selector"><a href="#5-5-cy-filter-selector" class="headerlink" title="5.5 cy.filter( selector )"></a>5.5 cy.filter( selector )</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">cy.filter(<span class="string">'[weight &gt; 50]'</span>);</span><br></pre></td></tr></table></figure>

<h3 id="5-6-cy-filter-ele-i-eles-gt"><a href="#5-6-cy-filter-ele-i-eles-gt" class="headerlink" title="5.6 cy.filter( ( ele, i, eles ) =&gt; {} )"></a>5.6 cy.filter( ( ele, i, eles ) =&gt; {} )</h3><p>使用回调函数的方式实现上面用选择器匹配的效果</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">cy.filter(<span class="function"><span class="keyword">function</span>(<span class="params">element, i</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> element.isNode() &amp;&amp; element.data(<span class="string">'weight'</span>) &gt; <span class="number">50</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h2 id="6-批量操作"><a href="#6-批量操作" class="headerlink" title="6. 批量操作"></a>6. 批量操作</h2><p>这允许在不触发多个样式计算或多个元素重绘的情况下操作元素。此函数对于同时对元素进行许多更改非常有用。当指定的回调函数完成时，只有需要它的元素才会更新它们的样式，而呈现器最多只会重新绘制一次。</p>
<p>包含下列三个API:</p>
<ul>
<li>cy.batch(() =&gt; { // do something })</li>
<li>cy.startBatch()  — 手动开始批量操作,主要用于异步操作</li>
<li>cy.endBatch() – 手动结束批量操作，主要用于异步操作</li>
</ul>
<h2 id="6-1-不使用批处理涉及到对元素的多个样式更新"><a href="#6-1-不使用批处理涉及到对元素的多个样式更新" class="headerlink" title="6.1 不使用批处理涉及到对元素的多个样式更新"></a>6.1 不使用批处理涉及到对元素的多个样式更新</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">cy.$(<span class="string">'#j'</span>)</span><br><span class="line">  .data(<span class="string">'weight'</span>, <span class="string">'70'</span>)   <span class="comment">// 样式更新</span></span><br><span class="line">  .addClass(<span class="string">'funny'</span>)      <span class="comment">// 样式更新</span></span><br><span class="line">  .removeClass(<span class="string">'serious'</span>) <span class="comment">// 样式更新</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 至少一次，至多3次重绘，这取决于上述操作执行的速度</span></span><br></pre></td></tr></table></figure>

<p>这对于少数元素的样式更新没有问题，但是如果对于大批量的元素进行上述操作，会造成很多冗余的重绘，导致性能问题，下面用批处理来解决上述问题</p>
<h2 id="6-2-批处理中对元素的多样式更新"><a href="#6-2-批处理中对元素的多样式更新" class="headerlink" title="6.2 批处理中对元素的多样式更新"></a>6.2 批处理中对元素的多样式更新</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">cy.batch(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  cy.$(<span class="string">'#j'</span>)</span><br><span class="line">    .data(<span class="string">'weight'</span>, <span class="string">'70'</span>)</span><br><span class="line">    .addClass(<span class="string">'funny'</span>)</span><br><span class="line">    .removeClass(<span class="string">'serious'</span>)</span><br><span class="line">  ;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h2 id="6-2-如果采取手动控制批处理的开始与结束"><a href="#6-2-如果采取手动控制批处理的开始与结束" class="headerlink" title="6.2 如果采取手动控制批处理的开始与结束"></a>6.2 如果采取手动控制批处理的开始与结束</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">cy.startBatch();</span><br><span class="line"></span><br><span class="line">cy.$(<span class="string">'#j'</span>)</span><br><span class="line">  .data(<span class="string">'weight'</span>, <span class="string">'70'</span>)</span><br><span class="line">  .addClass(<span class="string">'funny'</span>)</span><br><span class="line">  .removeClass(<span class="string">'serious'</span>)</span><br><span class="line">;</span><br><span class="line"></span><br><span class="line">cy.endBatch();</span><br></pre></td></tr></table></figure>

<h2 id="7-元素的挂载与卸载"><a href="#7-元素的挂载与卸载" class="headerlink" title="7. 元素的挂载与卸载"></a>7. 元素的挂载与卸载</h2><p><code>cy.mount( container )</code> container参数为挂载的dom元素</p>
<p><code>cy.mount( container )</code> 移除container dom元素上挂载的cytoscape实例</p>
<h2 id="8-元素的销毁"><a href="#8-元素的销毁" class="headerlink" title="8. 元素的销毁"></a>8. 元素的销毁</h2><p>销毁<strong>cytoscape</strong>实例</p>
<p><code>cy.destroy()</code></p>
<p>可以使用cy.cy.destroy()来判断<strong>cytoscape</strong>实例是否已经被销毁</p>
<h1 id="三-数据绑定"><a href="#三-数据绑定" class="headerlink" title="三. 数据绑定"></a>三. 数据绑定</h1><h2 id="3-1-图数据绑定及获取"><a href="#3-1-图数据绑定及获取" class="headerlink" title="3.1 图数据绑定及获取"></a>3.1 图数据绑定及获取</h2><ul>
<li><p>cy.data() — 获取整个图的数据对象</p>
</li>
<li><p>cy.data( name ) — 获取指定字段名的数据</p>
</li>
<li><p>cy.data( name, value )   — 绑定键为name,值为value的数据</p>
</li>
<li><p>cy.data( obj ) — 通过对象更新途中的多个字段值数据</p>
</li>
</ul>
<h2 id="3-2-图数据删除"><a href="#3-2-图数据删除" class="headerlink" title="3.2 图数据删除"></a>3.2 图数据删除</h2><ul>
<li>cy.removeData() — 删除图的所有可变数据</li>
<li>cy.removeData(names) — 删除指定字段名的数据, names参数为要删除的字段的空格分隔列表</li>
</ul>
<h2 id="3-3-图数据暂存"><a href="#3-3-图数据暂存" class="headerlink" title="3.3 图数据暂存"></a>3.3 图数据暂存</h2><h3 id="3-3-1-cy-scratch"><a href="#3-3-1-cy-scratch" class="headerlink" title="3.3.1 cy.scratch()"></a>3.3.1 <code>cy.scratch()</code></h3><p>设置或获取暂存数据，其中可以存储临时数据或非json数据。应用程序级别的暂存数据应该使用带下划线前缀的名称空间，如’_foo’</p>
<ul>
<li><p>cy.scratch()  — 获取图所有名称空间下的暂存数据</p>
</li>
<li><p>cy.scratch( namespace ) — 获取指定名称空间下的暂存数据</p>
</li>
<li><p>cy.scratch( namespace, value )  — 添加名称空间namespace，并设置暂存值为value</p>
<h3 id="3-3-2-cy-removeScratch"><a href="#3-3-2-cy-removeScratch" class="headerlink" title="3.3.2 cy.removeScratch()"></a>3.3.2 cy.removeScratch()</h3></li>
</ul>
<p>移除图的暂存数据</p>
<p><code>cy.removeScratch( namespace )</code> 移除指定命名空间下的暂存数据, 不添加命名空间参数则会清空所有图相关的暂存数据</p>
<h1 id="四-事件监听"><a href="#四-事件监听" class="headerlink" title="四. 事件监听"></a>四. 事件监听</h1><h2 id="4-1-事件普通绑定方式cy-on"><a href="#4-1-事件普通绑定方式cy-on" class="headerlink" title="4.1 事件普通绑定方式cy.on()"></a>4.1 事件普通绑定方式cy.on()</h2><p>别名： cy.bind()<code>,</code>cy.listen()<code>,</code>cy.addListener()</p>
<p>事件的绑定方式如下:</p>
<p>cy.on( events [, selector], function(event) )</p>
<ul>
<li><p><a href="https://js.cytoscape.org/#events" target="_blank" rel="noopener">events</a></p>
<p><strong>空格分隔的时间名列表</strong></p>
</li>
<li><p><a href="https://js.cytoscape.org/#selectors" target="_blank" rel="noopener">selector</a></p>
<p>可选参数, 如果不传递，事件将被绑定在整个图实例上</p>
<p><strong>选择器，匹配到的元素将被绑定事件</strong></p>
</li>
<li><p>function(event)</p>
<p><strong>事件监听的回调函数</strong></p>
<ul>
<li><p><a href="https://js.cytoscape.org/#events" target="_blank" rel="noopener">event</a></p>
<p><strong>监听到的事件对象</strong></p>
</li>
</ul>
</li>
</ul>
<p>一个实例</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">cy.on(<span class="string">'tap'</span>, <span class="string">'node'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">evt</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> node = evt.target;</span><br><span class="line">  <span class="built_in">console</span>.log( <span class="string">'tapped '</span> + node.id() );</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>下列代码没有指定选择器，则事件被绑定到了整个图实例上</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">cy.on(<span class="string">'tap'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">  <span class="comment">// target holds a reference to the originator</span></span><br><span class="line">  <span class="comment">// of the event (core or element)</span></span><br><span class="line">  <span class="keyword">var</span> evtTarget = event.target;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>( evtTarget === cy )&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'tap on background'</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'tap on some element'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h2 id="4-2-可以获取Promise对象的事件绑定方式cy-promiseOn"><a href="#4-2-可以获取Promise对象的事件绑定方式cy-promiseOn" class="headerlink" title="4.2 可以获取Promise对象的事件绑定方式cy.promiseOn()"></a>4.2 可以获取Promise对象的事件绑定方式cy.promiseOn()</h2><p>别名: pon</p>
<p>事件触发后将获取到一个成功态的的Promise对象<br><code>cy.promiseOn( events [, selector] )</code></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">cy.pon(<span class="string">'tap'</span>).then(<span class="function"><span class="keyword">function</span>(<span class="params"> event </span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'tap promise fulfilled'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h3 id="4-3-只生效一次的事件监听cy-one"><a href="#4-3-只生效一次的事件监听cy-one" class="headerlink" title="4.3 只生效一次的事件监听cy.one()"></a>4.3 只生效一次的事件监听cy.one()</h3><p>绑定的事件只响应一次</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">cy.one(<span class="string">'tap'</span>, <span class="string">'node'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'tap!'</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">cy.$(<span class="string">'node'</span>).eq(<span class="number">0</span>).trigger(<span class="string">'tap'</span>); <span class="comment">// 触发事件，事件不再响应</span></span><br><span class="line">cy.$(<span class="string">'node'</span>).eq(<span class="number">1</span>).trigger(<span class="string">'tap'</span>); <span class="comment">// 事件不再响应</span></span><br></pre></td></tr></table></figure>

<h2 id="4-4-事件监听的移除"><a href="#4-4-事件监听的移除" class="headerlink" title="4.4 事件监听的移除"></a>4.4 事件监听的移除</h2><h3 id="4-4-1-cy-removeListener"><a href="#4-4-1-cy-removeListener" class="headerlink" title="4.4.1 cy.removeListener()"></a>4.4.1 cy.removeListener()</h3><p>cy.removeListener( events [, selector] [, handler] )</p>
<ul>
<li><p><a href="https://js.cytoscape.org/#events" target="_blank" rel="noopener">events</a></p>
<p>空格分隔的事件名列表</p>
</li>
<li><p><a href="https://js.cytoscape.org/#selectors" target="_blank" rel="noopener">selector</a></p>
<p> 选择器，匹配到的元素将进行事件移除，可选参数，如果不指定，则移除对象为图实例 </p>
</li>
<li><p>handler<br>可选参数，可指定移除指定的处理器函数对象关联的事件，不指定则移除所有指定类型的事件处理器监听 </p>
</li>
</ul>
<p>如下：<br>实例1: 不指定具体的事件处理器</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">cy.on(<span class="string">'tap'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; <span class="comment">/* ... */</span> &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// remove all tap listener handlers, including the one above</span></span><br><span class="line">cy.removeListener(<span class="string">'tap'</span>);</span><br></pre></td></tr></table></figure>

<p>实例2: 针对具体的事件处理器进行事件绑定和解绑</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> handler = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'called handler'</span>);</span><br><span class="line">&#125;;</span><br><span class="line">cy.on(<span class="string">'tap'</span>, handler);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> otherHandler = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'called other handler'</span>);</span><br><span class="line">&#125;;</span><br><span class="line">cy.on(<span class="string">'tap'</span>, otherHandler);</span><br><span class="line"></span><br><span class="line"><span class="comment">// just remove handler</span></span><br><span class="line">cy.removeListener(<span class="string">'tap'</span>, handler);</span><br></pre></td></tr></table></figure>

<h3 id="4-4-2-移除图实例所有事件监听"><a href="#4-4-2-移除图实例所有事件监听" class="headerlink" title="4.4.2 移除图实例所有事件监听"></a>4.4.2 移除图实例所有事件监听</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">cy.removeAllListeners()</span><br></pre></td></tr></table></figure>

<h3 id="4-4-3-事件的主动触发"><a href="#4-4-3-事件的主动触发" class="headerlink" title="4.4.3 事件的主动触发"></a>4.4.3 事件的主动触发</h3><p>cy.emit()， 别名cy.trigger()</p>
<p><code>cy.emit( events [, extraParams] )</code></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">cy.on(<span class="string">'tap'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">evt, f, b</span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'tap'</span>, f, b);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">cy.emit(<span class="string">'tap'</span>, [<span class="string">'foo'</span>, <span class="string">'bar'</span>]);</span><br></pre></td></tr></table></figure>

<h3 id="4-4-4-图准备就绪事件的监听"><a href="#4-4-4-图准备就绪事件的监听" class="headerlink" title="4.4.4 图准备就绪事件的监听"></a>4.4.4 图准备就绪事件的监听</h3><p><code>cy.ready()</code></p>
<p>一旦图形准备好(即初始数据加载和初始布局完成)，就运行一个回调。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">cy.ready(<span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">  <span class="comment">// do something</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="五-视口操作"><a href="#五-视口操作" class="headerlink" title="五. 视口操作"></a>五. 视口操作</h1><h2 id="5-1-使用cy-container-获取图实例的dom容器"><a href="#5-1-使用cy-container-获取图实例的dom容器" class="headerlink" title="5.1 使用cy.container()获取图实例的dom容器"></a>5.1 使用cy.container()获取图实例的dom容器</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">cy.container()</span><br></pre></td></tr></table></figure>



<h2 id="5-2-居中操作cy-center"><a href="#5-2-居中操作cy-center" class="headerlink" title="5.2 居中操作cy.center()"></a>5.2 居中操作cy.center()</h2><ul>
<li>cy.center() — 以图中所有元素为中心进行居中。</li>
<li>cy.center( eles ) — 以指定元素为中心进行居中</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> j = cy.$(<span class="string">'#j'</span>);</span><br><span class="line">cy.center( j );</span><br></pre></td></tr></table></figure>

<p>5.3 自适应</p>
<p>cy.fit() — 自动调整图的平移距离和缩放级别以达到正好容纳元素的效果</p>
<ul>
<li>cy.fit() — 调整视口以容纳图中的所有元素</li>
<li>cy.fit( [eles], [ padding]) — 调整视口以容纳指定元素，并可以指定padding</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">cy.fit( cy.$(<span class="string">'#j, #e'</span>) );</span><br></pre></td></tr></table></figure>

<h2 id="5-3-重置图的默认缩放级别和平移位置"><a href="#5-3-重置图的默认缩放级别和平移位置" class="headerlink" title="5.3 重置图的默认缩放级别和平移位置"></a>5.3 重置图的默认缩放级别和平移位置</h2><p>cy.reset() </p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">setTimeout( <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  cy.pan(&#123; <span class="attr">x</span>: <span class="number">50</span>, <span class="attr">y</span>: <span class="number">-100</span> &#125;);</span><br><span class="line">&#125;, <span class="number">1000</span> );</span><br><span class="line"></span><br><span class="line">setTimeout( <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  cy.zoom( <span class="number">2</span> );</span><br><span class="line">&#125;, <span class="number">2000</span> );</span><br><span class="line"></span><br><span class="line">setTimeout( <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  cy.reset();</span><br><span class="line">&#125;, <span class="number">3000</span> );</span><br></pre></td></tr></table></figure>

<h2 id="5-4-获取或设置图形的平移位置。"><a href="#5-4-获取或设置图形的平移位置。" class="headerlink" title="5.4 获取或设置图形的平移位置。"></a>5.4 获取或设置图形的平移位置。</h2><ul>
<li>cy.pan() — 获取当前平移位置</li>
<li>cy.pan( renderedPosition )  — eg: { x: 100, y: 200 }</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">cy.pan(&#123;</span><br><span class="line">  x: <span class="number">100</span>,</span><br><span class="line">  y: <span class="number">100</span> </span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log( cy.pan() );</span><br></pre></td></tr></table></figure>

<h2 id="5-5-对于当前位置相对地平移图形"><a href="#5-5-对于当前位置相对地平移图形" class="headerlink" title="5.5 对于当前位置相对地平移图形"></a>5.5 对于当前位置相对地平移图形</h2><p><code>cy.panBy( renderedPosition )</code></p>
<p>如将图形向右平移100像素:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">cy.panBy(&#123;</span><br><span class="line">  x: <span class="number">100</span>,</span><br><span class="line">  y: <span class="number">0</span> </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h2 id="5-6-设置是否可以支持平移操作"><a href="#5-6-设置是否可以支持平移操作" class="headerlink" title="5.6 设置是否可以支持平移操作"></a>5.6 设置是否可以支持平移操作</h2><ul>
<li>cy.panningEnabled()  — 获取是否当前图实例支持进行平移操作</li>
<li>cy.panningEnabled( bool ) — 设置当前图实例是否支持进行平移操作</li>
<li>cy.userPanningEnabled()  —  获取是否启用了用户平移(用户的拖拽操作)。</li>
<li>cy.userPanningEnabled( bool ) — 设置是否启用用户平移</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">cy.panningEnabled( bool )</span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">cy.userPanningEnabled( <span class="literal">true</span> );</span><br></pre></td></tr></table></figure>

<h2 id="5-7-指定缩放级别"><a href="#5-7-指定缩放级别" class="headerlink" title="5.7 指定缩放级别"></a>5.7 指定缩放级别</h2><h3 id="5-7-1-cy-zoom"><a href="#5-7-1-cy-zoom" class="headerlink" title="5.7.1 cy.zoom()"></a>5.7.1 cy.zoom()</h3><ul>
<li><p>cy.zoom() 获取缩放级别</p>
</li>
<li><p>cy.zoom( level )  设置缩放级别</p>
</li>
<li><p>cy.zoom( options )  <strong>options</strong> The options for zooming.</p>
<ul>
<li><p>level</p>
<p>缩放级别</p>
</li>
<li><p><a href="https://js.cytoscape.org/#notation/position" target="_blank" rel="noopener">position</a></p>
<p>要缩放的位置</p>
</li>
<li><p><a href="https://js.cytoscape.org/#notation/position" target="_blank" rel="noopener">renderedPosition</a></p>
<p>缩放到的位置</p>
<p>position和renderedPosition不要同时指定</p>
</li>
</ul>
</li>
</ul>
<p>eg:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">cy.zoom(&#123;</span><br><span class="line">  level: <span class="number">1.5</span>,</span><br><span class="line">  position: cy.getElementById(<span class="string">'a'</span>).position()</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<ul>
<li><p>cy.minZoom() —  获取最小缩放级别</p>
</li>
<li><p>cy.maxZoom() –  设置最小缩放级别</p>
</li>
<li><p>cy.viewport( zoom, pan ) — 通过一个函数来设置缩放级别和平移位置</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">cy.viewport(&#123;</span><br><span class="line">  zoom: <span class="number">2</span>,</span><br><span class="line">  pan: &#123; <span class="attr">x</span>: <span class="number">100</span>, <span class="attr">y</span>: <span class="number">100</span> &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>



</li>
</ul>
<h3 id="5-7-2-cy-zoomingEnabled"><a href="#5-7-2-cy-zoomingEnabled" class="headerlink" title="5.7.2 cy.zoomingEnabled()"></a>5.7.2 cy.zoomingEnabled()</h3><ul>
<li><p>cy.zoomingEnabled() — 获取是否支持缩放</p>
</li>
<li><p>cy.zoomingEnabled(bool)  — 设置是否支持缩放</p>
</li>
<li><p>userZoomingEnabled() — 获取是否支持用户使用鼠标等交互方式进行缩放</p>
</li>
<li><p>userZoomingEnabled( bool ) — 设置是否支持用户使用鼠标等交互方式进行缩放</p>
</li>
</ul>
<h2 id="5-8-boxSelectionEnabled"><a href="#5-8-boxSelectionEnabled" class="headerlink" title="5.8 boxSelectionEnabled"></a>5.8 boxSelectionEnabled</h2><p>获取或设置是否启用了框选择。如果同时启用平移，用户必须按住shift、control、alt或command中的一个来启动框选择</p>
<ul>
<li>cy.boxSelectionEnabled() — 获取是否支持扩选</li>
<li>cy.boxSelectionEnabled( bool ) — 设置是否支持扩选</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">cy.boxSelectionEnabled( <span class="literal">true</span> );</span><br></pre></td></tr></table></figure>

<h2 id="5-9-cy-selectionType"><a href="#5-9-cy-selectionType" class="headerlink" title="5.9 cy.selectionType()"></a>5.9 cy.selectionType()</h2><p>设置或设置选择类型。“single”选择类型是默认的，点击一个元素将选择该元素并取消选择前面的元素。</p>
<p>还可以指定为追加类型”additive”, 可逐次选中多个元素</p>
<ul>
<li>cy.selectionType()</li>
<li>cy.selectionType( type ) “single”(default)或者”additive”</li>
</ul>
<h2 id="5-10-获取视口宽度和高度"><a href="#5-10-获取视口宽度和高度" class="headerlink" title="5.10 获取视口宽度和高度"></a>5.10 获取视口宽度和高度</h2><ul>
<li>cy.width()</li>
<li>cy.height()</li>
<li>cy.extend()<br>获取viewport的范围，模型坐标中的一个边界框让您知道在viewport中哪些模型位置是可见的。</li>
</ul>
<p>![image-20200418201051078](/Users/liwei/Library/Application Support/typora-user-images/image-20200418201051078.png)</p>
<h1 id="5-11-cy-autolock"><a href="#5-11-cy-autolock" class="headerlink" title="5.11 cy.autolock()"></a>5.11 cy.autolock()</h1><p>获取或设置节点是否被自动锁定(即，如果为真，则无论节点的状态如何都被锁定)</p>
<ul>
<li>cy.autolock() — 获取图节点是否自动锁定</li>
<li>cy.autolock( bool ) — 设置图节点是否自动锁定</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">cy.autolock( bool )</span><br></pre></td></tr></table></figure>

<h2 id="5-12-设置节点是否自动取消抓取autoungrabify"><a href="#5-12-设置节点是否自动取消抓取autoungrabify" class="headerlink" title="5.12 设置节点是否自动取消抓取autoungrabify"></a>5.12 设置节点是否自动取消抓取autoungrabify</h2><ul>
<li>cy.autoungrabify()  — 获取是否自动取消抓取被启用</li>
<li>cy.autoungrabify( bool ) —  设置是否启动自动取消抓取</li>
</ul>
<h2 id="5-13-获取或设置节点是否自动取消选择"><a href="#5-13-获取或设置节点是否自动取消选择" class="headerlink" title="5.13 获取或设置节点是否自动取消选择"></a>5.13 获取或设置节点是否自动取消选择</h2><ul>
<li>cy.autounselectify()</li>
<li>cy.autounselectify( bool )</li>
</ul>
<h2 id="5-14-强制渲染器重新计算视口边界"><a href="#5-14-强制渲染器重新计算视口边界" class="headerlink" title="5.14 强制渲染器重新计算视口边界"></a>5.14 强制渲染器重新计算视口边界</h2><p><code>cy.resize()</code></p>
<p>别名: <code>cy.invalidateDimensions()</code></p>
<h1 id="六-动画Animation"><a href="#六-动画Animation" class="headerlink" title="六. 动画Animation"></a>六. 动画Animation</h1><h2 id="6-1-动画执行cy-animate"><a href="#6-1-动画执行cy-animate" class="headerlink" title="6.1 动画执行cy.animate()"></a>6.1 动画执行cy.animate()</h2><ul>
<li><p>cy.animated()  判断是否有动画在进行</p>
</li>
<li><p>cy.animate( options ) 操纵视口执行动画<strong>options</strong> An object containing the details of the animation.</p>
<ul>
<li><p>zoom</p>
<p>一个缩放级别(数字)或一个缩放配置对象。</p>
</li>
<li><ul>
<li><p>level </p>
<p>要使用的缩放级别。</p>
</li>
<li><p><a href="https://js.cytoscape.org/#notation/position" target="_blank" rel="noopener">position</a> </p>
<p>缩放发生的位置。这将自动修改pan，使指定的模型位置在缩放期间保持在viewport区段中的相同位置。</p>
</li>
<li><p><a href="https://js.cytoscape.org/#notation/position" target="_blank" rel="noopener">renderedPosition</a></p>
<p>关于缩放发生的渲染位置，作为使用模型位置的替代。这将自动修改pan，使模型位置(与动画开始时呈现的位置相对应)在缩放期间保持在viewport区段中的相同位置。</p>
</li>
</ul>
</li>
<li><p><a href="https://js.cytoscape.org/#notation/position" target="_blank" rel="noopener">pan</a></p>
<p>图形将被移动到的平移位置。</p>
</li>
<li><p><a href="https://js.cytoscape.org/#notation/position" target="_blank" rel="noopener">panBy</a></p>
<p>图形将被移动到的相对平移位置。</p>
</li>
<li><p>fit<br>  一个包含图自动调整以适应对应元素的参数对象</p>
</li>
<li><ul>
<li><p><a href="https://js.cytoscape.org/#collection" target="_blank" rel="noopener">eles</a></p>
<p>视口将进行调整以容纳对应元素</p>
</li>
<li><p>padding</p>
<p>Padding to use with the fitting (default <code>0</code>).</p>
</li>
</ul>
</li>
<li><p>center</p>
<p>一个对象，该对象包含将从其中对图形进行动画处理的居中选项。</p>
</li>
<li><ul>
<li><p><a href="https://js.cytoscape.org/#collection" target="_blank" rel="noopener">eles</a></p>
<p>将视口置于中心的elements或选择器</p>
</li>
</ul>
</li>
<li><p>duration</p>
<p>动画执行时间</p>
</li>
<li><p>queue</p>
<p>一个布尔值，指示是否对动画进行排队(默认为“true”)。核心上排队的动画按顺序运行，直到队列为空。</p>
</li>
<li><p><a href="https://js.cytoscape.org/#style/transition-animation" target="_blank" rel="noopener">easing</a></p>
<p>指定<a href="https://js.cytoscape.org/#style/transition-animation" target="_blank" rel="noopener"> transition- time- function </a>类型，以形成动画的进度曲线。</p>
</li>
<li><p>complete<br>动画执行完成时候执行的回调函数</p>
</li>
<li><p>step</p>
<p>动画步骤调用回调。</p>
</li>
</ul>
<p>eg:</p>
<ol>
<li>操纵pan和zoom</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">cy.animate(&#123;</span><br><span class="line">  pan: &#123; <span class="attr">x</span>: <span class="number">100</span>, <span class="attr">y</span>: <span class="number">100</span> &#125;,</span><br><span class="line">  zoom: <span class="number">2</span></span><br><span class="line">&#125;, &#123;</span><br><span class="line">  duration: <span class="number">1000</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>视口自适应容纳元素</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">cy.animate(&#123;</span><br><span class="line">  fit: &#123;</span><br><span class="line">    eles: j,</span><br><span class="line">    padding: <span class="number">20</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;, &#123;</span><br><span class="line">  duration: <span class="number">1000</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h2 id="6-2-动画获取cy-animation"><a href="#6-2-动画获取cy-animation" class="headerlink" title="6.2 动画获取cy.animation()"></a>6.2 动画获取cy.animation()</h2><p>获取视口的动画。</p>
<p><code>cy.animation( options )</code></p>
<p>options参数同上, 该函数用来获取指定配置信息的动画</p>
<h2 id="6-3-为动画添加延迟cy-delay"><a href="#6-3-为动画添加延迟cy-delay" class="headerlink" title="6.3 为动画添加延迟cy.delay()"></a>6.3 为动画添加延迟cy.delay()</h2><p><code>cy.delay( duration, complete )</code></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">cy</span><br><span class="line">  .animate(&#123;</span><br><span class="line">    fit: &#123; <span class="attr">eles</span>: <span class="string">'#j'</span> &#125;</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  .delay(<span class="number">1000</span>)   <span class="comment">// 1s</span></span><br><span class="line"></span><br><span class="line">  .animate(&#123;</span><br><span class="line">    fit: &#123; <span class="attr">eles</span>: <span class="string">'#e'</span> &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">;</span><br></pre></td></tr></table></figure>

<h2 id="6-4-获取视口的延迟动画cy-delayAnimation"><a href="#6-4-获取视口的延迟动画cy-delayAnimation" class="headerlink" title="6.4 获取视口的延迟动画cy.delayAnimation()"></a>6.4 获取视口的延迟动画cy.delayAnimation()</h2><p><code>cy.delayAnimation( duration )</code> — duration为延迟时间</p>
<h2 id="6-5-停止动画"><a href="#6-5-停止动画" class="headerlink" title="6.5 停止动画"></a>6.5 停止动画</h2><p><code>stop(clearQueue, jumpToEnd)</code><br>clearQueue是一个布尔值(默认为false)，表示动画队列是否应该被清空。<br>jumpToEnd一个布尔值(默认为false)，指示当前运行的动画是否应该跳转到它们的末端，而不是中途停止。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">cy.animate(&#123;</span><br><span class="line">  fit: &#123; <span class="attr">eles</span>: <span class="string">'#j'</span> &#125;</span><br><span class="line">&#125;, &#123; <span class="attr">duration</span>: <span class="number">2000</span> &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// stop in the middle</span></span><br><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  cy.stop();</span><br><span class="line">&#125;, <span class="number">1000</span>);</span><br></pre></td></tr></table></figure>

<h2 id="6-6-清空动画队列cy-clearQueue"><a href="#6-6-清空动画队列cy-clearQueue" class="headerlink" title="6.6 清空动画队列cy.clearQueue()"></a>6.6 清空动画队列cy.clearQueue()</h2><p>删除viewport中所有排队的动画。</p>
<h1 id="七-布局-Layout"><a href="#七-布局-Layout" class="headerlink" title="七.布局 Layout"></a>七.布局 Layout</h1><p><code>cy.layout()</code></p>
<p>别名: <code>cy.createLayout()</code>, <code>cy.makeLayout()</code></p>
<p>获取一个新的布局，它可以用于用算法在图中定位节点。</p>
<p>cy.layout( options )</p>
<ul>
<li>options  布局参数, options.name必须指定</li>
</ul>
<p>cy.layout()会返回一个布局实例，可以基于这个实例进行其他操作</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> layout = cy.layout(&#123;</span><br><span class="line">  name: <span class="string">'random'</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">layout.run();</span><br></pre></td></tr></table></figure>

<h1 id="八-样式Style"><a href="#八-样式Style" class="headerlink" title="八. 样式Style"></a>八. 样式Style</h1><p><code>cy.style()</code></p>
<ul>
<li>cy.style() — 获取当前图的样式对象</li>
<li>cy.style( stylesheet ) — 为图指定新的样式对象<br><strong><a href="https://js.cytoscape.org/#style" target="_blank" rel="noopener">stylesheet</a></strong> 参数可以是一个 <code>cytoscape.stylesheet()</code> 对象, 一个样式对象的字符串, 也可以指定为JSON格式的字符串(格式参考[options.style`](<a href="https://js.cytoscape.org/#style" target="_blank" rel="noopener">https://js.cytoscape.org/#style</a>))</li>
</ul>
<h2 id="8-1-样式字符串"><a href="#8-1-样式字符串" class="headerlink" title="8.1 样式字符串"></a>8.1 样式字符串</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">cytoscape(&#123;</span><br><span class="line">  container: <span class="built_in">document</span>.getElementById(<span class="string">'cy'</span>),</span><br><span class="line"></span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">  style: <span class="string">'node &#123; background-color: green; &#125;'</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// , ...</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h2 id="8-2-普通JSON格式"><a href="#8-2-普通JSON格式" class="headerlink" title="8.2 普通JSON格式"></a>8.2 普通JSON格式</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">cytoscape(&#123;</span><br><span class="line">  container: <span class="built_in">document</span>.getElementById(<span class="string">'cy'</span>),</span><br><span class="line"></span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">  style: [</span><br><span class="line">    &#123;</span><br><span class="line">      selector: <span class="string">'node'</span>,</span><br><span class="line">      style: &#123;</span><br><span class="line">        <span class="string">'background-color'</span>: <span class="string">'red'</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// , ...</span></span><br><span class="line">  ]</span><br><span class="line"></span><br><span class="line">  <span class="comment">// , ...</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h2 id="8-3-cytoscape-stylesheet-用法"><a href="#8-3-cytoscape-stylesheet-用法" class="headerlink" title="8.3 cytoscape.stylesheet()`用法"></a>8.3 cytoscape.stylesheet()`用法</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">cytoscape(&#123;</span><br><span class="line">  container: <span class="built_in">document</span>.getElementById(<span class="string">'cy'</span>),</span><br><span class="line"></span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">  style: cytoscape.stylesheet()</span><br><span class="line">    .selector(<span class="string">'node'</span>)</span><br><span class="line">      .style(&#123;</span><br><span class="line">        <span class="string">'background-color'</span>: <span class="string">'blue'</span></span><br><span class="line">      &#125;)</span><br><span class="line"></span><br><span class="line">      <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">// , ...</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h2 id="8-4-根据元素data进行样式绘制"><a href="#8-4-根据元素data进行样式绘制" class="headerlink" title="8.4 根据元素data进行样式绘制"></a>8.4 根据元素data进行样式绘制</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">cytoscape(&#123;</span><br><span class="line">  container: <span class="built_in">document</span>.getElementById(<span class="string">'cy'</span>),</span><br><span class="line"></span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">  style: cytoscape.stylesheet()</span><br><span class="line">    .selector(<span class="string">'node'</span>)</span><br><span class="line">      .style(&#123;</span><br><span class="line">        <span class="string">'background-color'</span>: <span class="function"><span class="keyword">function</span>(<span class="params"> ele </span>)</span>&#123; <span class="keyword">return</span> ele.data(<span class="string">'bg'</span>) &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// which works the same as</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 'background-color': 'data(bg)'</span></span><br><span class="line">      &#125;)</span><br><span class="line"></span><br><span class="line">      <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">// , ...</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h2 id="8-5-设置一个全新的样式"><a href="#8-5-设置一个全新的样式" class="headerlink" title="8.5 设置一个全新的样式"></a>8.5 设置一个全新的样式</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">cy.style()</span><br><span class="line">  .clear() <span class="comment">//清除默认样式而应用一个全新的样式</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 定义节点样式</span></span><br><span class="line">  .selector(<span class="string">'node'</span>)</span><br><span class="line">    .style(<span class="string">'background-color'</span>, <span class="string">'magenta'</span>)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 定义边样式</span></span><br><span class="line">  .selector(<span class="string">'edge'</span>)</span><br><span class="line">      .style(&#123;</span><br><span class="line">      <span class="string">'width'</span>: <span class="number">3</span>,</span><br><span class="line">      <span class="string">'line-color'</span>: <span class="string">'yellow'</span></span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">  .update() <span class="comment">// 显示声明样式更新代码的结束，通知cytoscape更新元素样式</span></span><br><span class="line">;</span><br></pre></td></tr></table></figure>

<h2 id="8-6-从样式字符串创建style"><a href="#8-6-从样式字符串创建style" class="headerlink" title="8.6 从样式字符串创建style"></a>8.6 从样式字符串创建style</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">cy.style()</span><br><span class="line">  .fromString(<span class="string">'node &#123; background-color: blue; &#125;'</span>)</span><br><span class="line"></span><br><span class="line">  .update() <span class="comment">// update the elements in the graph with the new style</span></span><br><span class="line">;</span><br></pre></td></tr></table></figure>

<h2 id="8-7-获取当前样式的JSON对象"><a href="#8-7-获取当前样式的JSON对象" class="headerlink" title="8.7 获取当前样式的JSON对象"></a>8.7 获取当前样式的JSON对象</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> styleJson = cy.style().json();</span><br><span class="line"><span class="keyword">var</span> serializedJson = <span class="built_in">JSON</span>.stringify( styleJson );</span><br></pre></td></tr></table></figure>

<h1 id="九-图的导出"><a href="#九-图的导出" class="headerlink" title="九. 图的导出"></a>九. 图的导出</h1><h2 id="9-1-将当前图形视图导出为PNG图像"><a href="#9-1-将当前图形视图导出为PNG图像" class="headerlink" title="9.1 将当前图形视图导出为PNG图像"></a>9.1 将当前图形视图导出为PNG图像</h2><p>cy.png( options )</p>
<ul>
<li><p>options</p>
<p>导出参数设置</p>
<ul>
<li><p>output</p>
<p>输出应该是“base64uri”(默认)、“base64”、“blob”还是“blob-promise”(返回解析为blob的Promise)。</p>
</li>
<li><p>bg</p>
<p>图像的背景颜色(默认为白色)。</p>
</li>
<li><p>full</p>
<p>是导出当前的viewport视图(“false”，默认)还是导出整个图(“true”)。</p>
</li>
<li><p>scale </p>
<p>此值指定一个正数，该正数缩放生成的图像的大小。</p>
</li>
<li><p>maxWidth</p>
<p> 指定与“maxHeight”组合的自动比例，以便生成的图像宽度不超过“maxWidth”。</p>
</li>
<li><p>maxHeight</p>
<p> 指定与“maxWidth”组合的自动比例，以便生成的图像不高于“maxHeight”。</p>
</li>
</ul>
</li>
</ul>
<p>eg:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> png64 = cy.png();</span><br><span class="line"></span><br><span class="line"><span class="comment">// put the png data in an img tag</span></span><br><span class="line"><span class="built_in">document</span>.querySelector(<span class="string">'#png-eg'</span>).setAttribute(<span class="string">'src'</span>, png64);</span><br></pre></td></tr></table></figure>

<h2 id="9-2-导出图为jpg"><a href="#9-2-导出图为jpg" class="headerlink" title="9.2 导出图为jpg"></a>9.2 导出图为jpg</h2><p><code>cy.jpg()</code></p>
<p>cy.jpg( options )</p>
<ul>
<li><p>options</p>
<p>导出参数对象</p>
<ul>
<li><p>output</p>
<p>输出应该是“base64uri”(默认)、“base64”、“blob”还是“blob-promise”(返回解析为blob的Promise)。</p>
</li>
<li><p>bg</p>
<p>图像的背景颜色(默认为白色)。</p>
</li>
<li><p>full</p>
<p>是导出当前的viewport视图(“false”，默认)还是导出整个图(“true”)。</p>
</li>
<li><p>scale</p>
<p>此值指定一个正数，该正数缩放生成的图像的大小。</p>
</li>
<li><p>maxWidth</p>
<p>指定与“maxHeight”组合的自动比例，以便生成的图像宽度不超过“maxWidth”。</p>
</li>
<li><p>maxHeight</p>
<p>指定与“maxWidth”组合的自动比例，以便生成的图像不高于“maxHeight”。</p>
</li>
<li><p>quality</p>
<p>指定从’ 0 ‘(低质量，低文件大小)到’ 1 ‘(高质量，高文件大小)的图像质量。如果没有设置，则使用浏览器的默认质量值。</p>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> jpg64 = cy.jpg();</span><br><span class="line"></span><br><span class="line"><span class="comment">// put the png data in an img tag</span></span><br><span class="line"><span class="built_in">document</span>.querySelector(<span class="string">'#jpg-eg'</span>).setAttribute(<span class="string">'src'</span>, jpg64);</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h2 id="9-3-导出JSON"><a href="#9-3-导出JSON" class="headerlink" title="9.3 导出JSON"></a>9.3 导出JSON</h2><p><code>cy.json()</code></p>
<p>以初始化时使用的相同JSON格式导入或导出图数据。</p>
<p>cy.json( flatEles )</p>
<ul>
<li><p>flatEles</p>
<p>resulant JSON是否应该将元素包含为平面数组(‘ true ‘)或两个按组键控的数组(‘ false ‘，默认)。</p>
</li>
</ul>
<p>cy.json( cyJson )</p>
<p>将图形作为JSON导入，只更新指定的字段。</p>
<ul>
<li><p><a href="https://js.cytoscape.org/#core/initialisation" target="_blank" rel="noopener">cyJson</a></p>
<p>具有与应该更改的状态对应的字段的对象。</p>
</li>
</ul>
<p>eg:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">cy.json(&#123;</span><br><span class="line">  zoom: <span class="number">2</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>TypeScript教程</title>
    <url>/2020/05/16/2020-2020-05-16-Typescript%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="一-TypeScript的存在价值？"><a href="#一-TypeScript的存在价值？" class="headerlink" title="一.  TypeScript的存在价值？"></a>一.  TypeScript的存在价值？</h1><ol>
<li>为<strong>JavaScript</strong>提供类型系统，弥补其弱类型导致的问题</li>
<li><strong>TypeScript</strong>为<strong>JavaScript</strong>的超级，兼容所有<strong>JavaScript</strong>目前及未来所有的特性</li>
<li>编辑器基于类型系统可以给予开发者更多的智能提示</li>
<li>类型系统有利于提高代码的质量和可维护性,有利于代码重构</li>
<li>在编译期间捕获错误，避免很多以往在运行期才能发现的错误</li>
<li>可以在代码层面提供良好的文档</li>
<li>用<strong>TypeScript</strong>书写的代码最终会被编译成JavaScript代码</li>
<li>与<strong>Flow</strong>等类型检查系统相比，<strong>TypeScript</strong>的优势在于<strong>JavaScript</strong>即<strong>TypeScript</strong></li>
</ol>
<blockquote>
<p>TypeScript只是带有文档的JavaScript, TypeScript让JavaScript更美好, 学习JavaScript仍然是必要的</p>
</blockquote>
<h1 id="二-TypeScript支持的ES6语法"><a href="#二-TypeScript支持的ES6语法" class="headerlink" title="二.  TypeScript支持的ES6语法"></a>二.  TypeScript支持的ES6语法</h1><ol>
<li><strong>class</strong></li>
<li><strong>箭头函数</strong></li>
<li><strong>rest</strong>参数</li>
<li><strong>let</strong></li>
<li><strong>const</strong></li>
<li><strong>解构赋值</strong></li>
<li><strong>扩展运算符</strong></li>
<li><strong>for…of</strong></li>
<li>迭代<strong>iterator</strong></li>
<li>模板字符串<strong>``</strong></li>
<li><strong>Promise</strong></li>
<li><strong>generators</strong></li>
<li><strong>async/await</strong></li>
</ol>
<h1 id="三-TypeScript项目构成"><a href="#三-TypeScript项目构成" class="headerlink" title="三.  TypeScript项目构成"></a>三.  TypeScript项目构成</h1><h2 id="3-1-编译上下文"><a href="#3-1-编译上下文" class="headerlink" title="3.1 编译上下文"></a>3.1 编译上下文</h2><ul>
<li>通过tsc –init可以生成默认的配置文件</li>
<li>使用<strong>tsconfig.json</strong>里通过compilerOptions来指定<strong>TypeScript</strong>的编译选项</li>
</ul>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"compilerOptions"</span>: &#123;</span><br><span class="line">    <span class="comment">/* Basic Options */</span></span><br><span class="line">    <span class="comment">// "incremental": true,                   /* Enable incremental compilation */</span></span><br><span class="line">    <span class="attr">"target"</span>: <span class="string">"es5"</span>,                          <span class="comment">/* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', or 'ESNEXT'. */</span></span><br><span class="line">    <span class="attr">"module"</span>: <span class="string">"commonjs"</span>,                     <span class="comment">/* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */</span></span><br><span class="line">    <span class="comment">// "lib": [],                             /* Specify library files to be included in the compilation. */</span></span><br><span class="line">    <span class="comment">// "allowJs": true,                       /* Allow javascript files to be compiled. */</span></span><br><span class="line">    <span class="comment">// "checkJs": true,                       /* Report errors in .js files. */</span></span><br><span class="line">    <span class="comment">// "jsx": "preserve",                     /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */</span></span><br><span class="line">    <span class="comment">// "declaration": true,                   /* Generates corresponding '.d.ts' file. */</span></span><br><span class="line">    <span class="comment">// "declarationMap": true,                /* Generates a sourcemap for each corresponding '.d.ts' file. */</span></span><br><span class="line">    <span class="comment">// "sourceMap": true,                     /* Generates corresponding '.map' file. */</span></span><br><span class="line">    <span class="comment">// "outFile": "./",                       /* Concatenate and emit output to single file. */</span></span><br><span class="line">    <span class="comment">// "outDir": "./",                        /* Redirect output structure to the directory. */</span></span><br><span class="line">    <span class="comment">// "rootDir": "./",                       /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */</span></span><br><span class="line">    <span class="comment">// "composite": true,                     /* Enable project compilation */</span></span><br><span class="line">    <span class="comment">// "tsBuildInfoFile": "./",               /* Specify file to store incremental compilation information */</span></span><br><span class="line">    <span class="comment">// "removeComments": true,                /* Do not emit comments to output. */</span></span><br><span class="line">    <span class="comment">// "noEmit": true,                        /* Do not emit outputs. */</span></span><br><span class="line">    <span class="comment">// "importHelpers": true,                 /* Import emit helpers from 'tslib'. */</span></span><br><span class="line">    <span class="comment">// "downlevelIteration": true,            /* Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'. */</span></span><br><span class="line">    <span class="comment">// "isolatedModules": true,               /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Strict Type-Checking Options */</span></span><br><span class="line">    <span class="attr">"strict"</span>: <span class="literal">true</span>,                           <span class="comment">/* Enable all strict type-checking options. */</span></span><br><span class="line">    <span class="comment">// "noImplicitAny": true,                 /* Raise error on expressions and declarations with an implied 'any' type. */</span></span><br><span class="line">    <span class="comment">// "strictNullChecks": true,              /* Enable strict null checks. */</span></span><br><span class="line">    <span class="comment">// "strictFunctionTypes": true,           /* Enable strict checking of function types. */</span></span><br><span class="line">    <span class="comment">// "strictBindCallApply": true,           /* Enable strict 'bind', 'call', and 'apply' methods on functions. */</span></span><br><span class="line">    <span class="comment">// "strictPropertyInitialization": true,  /* Enable strict checking of property initialization in classes. */</span></span><br><span class="line">    <span class="comment">// "noImplicitThis": true,                /* Raise error on 'this' expressions with an implied 'any' type. */</span></span><br><span class="line">    <span class="comment">// "alwaysStrict": true,                  /* Parse in strict mode and emit "use strict" for each source file. */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Additional Checks */</span></span><br><span class="line">    <span class="comment">// "noUnusedLocals": true,                /* Report errors on unused locals. */</span></span><br><span class="line">    <span class="comment">// "noUnusedParameters": true,            /* Report errors on unused parameters. */</span></span><br><span class="line">    <span class="comment">// "noImplicitReturns": true,             /* Report error when not all code paths in function return a value. */</span></span><br><span class="line">    <span class="comment">// "noFallthroughCasesInSwitch": true,    /* Report errors for fallthrough cases in switch statement. */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Module Resolution Options */</span></span><br><span class="line">    <span class="comment">// "moduleResolution": "node",            /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */</span></span><br><span class="line">    <span class="comment">// "baseUrl": "./",                       /* Base directory to resolve non-absolute module names. */</span></span><br><span class="line">    <span class="comment">// "paths": &#123;&#125;,                           /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */</span></span><br><span class="line">    <span class="comment">// "rootDirs": [],                        /* List of root folders whose combined content represents the structure of the project at runtime. */</span></span><br><span class="line">    <span class="comment">// "typeRoots": [],                       /* List of folders to include type definitions from. */</span></span><br><span class="line">    <span class="comment">// "types": [],                           /* Type declaration files to be included in compilation. */</span></span><br><span class="line">    <span class="comment">// "allowSyntheticDefaultImports": true,  /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */</span></span><br><span class="line">    <span class="attr">"esModuleInterop"</span>: <span class="literal">true</span>,                  <span class="comment">/* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */</span></span><br><span class="line">    <span class="comment">// "preserveSymlinks": true,              /* Do not resolve the real path of symlinks. */</span></span><br><span class="line">    <span class="comment">// "allowUmdGlobalAccess": true,          /* Allow accessing UMD globals from modules. */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Source Map Options */</span></span><br><span class="line">    <span class="comment">// "sourceRoot": "",                      /* Specify the location where debugger should locate TypeScript files instead of source locations. */</span></span><br><span class="line">    <span class="comment">// "mapRoot": "",                         /* Specify the location where debugger should locate map files instead of generated locations. */</span></span><br><span class="line">    <span class="comment">// "inlineSourceMap": true,               /* Emit a single file with source maps instead of having a separate file. */</span></span><br><span class="line">    <span class="comment">// "inlineSources": true,                 /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Experimental Options */</span></span><br><span class="line">    <span class="comment">// "experimentalDecorators": true,        /* Enables experimental support for ES7 decorators. */</span></span><br><span class="line">    <span class="comment">// "emitDecoratorMetadata": true,         /* Enables experimental support for emitting type metadata for decorators. */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Advanced Options */</span></span><br><span class="line">    <span class="attr">"forceConsistentCasingInFileNames"</span>: <span class="literal">true</span>  <span class="comment">/* Disallow inconsistently-cased references to the same file. */</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="3-2-声明空间"><a href="#3-2-声明空间" class="headerlink" title="3.2 声明空间"></a>3.2 声明空间</h2><h3 id="3-2-1-类型声明空间"><a href="#3-2-1-类型声明空间" class="headerlink" title="3.2.1 类型声明空间"></a>3.2.1 类型声明空间</h3><p>![image-20200414095213396](/Users/liwei/Library/Application Support/typora-user-images/image-20200414095213396.png)<br>我们不能把<strong>interface</strong>类型声明用作变量使用</p>
<h3 id="3-2-2-变量声明空间"><a href="#3-2-2-变量声明空间" class="headerlink" title="3.2.2 变量声明空间"></a>3.2.2 变量声明空间</h3><p>变量声明空间包含可以用作变量的内容，class Foo提供了一个类型Foo到类型声明空间，此外还提供了一个变量到Foo到变量声明空间，因此下列语句可以正常通过TypeScript类型检查</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> foo = Foo</span><br></pre></td></tr></table></figure>

<h2 id="3-3-模块"><a href="#3-3-模块" class="headerlink" title="3.3 模块"></a>3.3 模块</h2><h3 id="3-3-1-全局模块"><a href="#3-3-1-全局模块" class="headerlink" title="3.3.1 全局模块"></a>3.3.1 全局模块</h3><p>默认情况下的ts代码在全局命名空间中<br>![image-20200414100101482](/Users/liwei/Library/Application Support/typora-user-images/image-20200414100101482.png)</p>
<p>这样的做法是危险的</p>
<h3 id="3-3-2-文件模块"><a href="#3-3-2-文件模块" class="headerlink" title="3.3.2 文件模块"></a>3.3.2 文件模块</h3><p>如果再ts文件的根级别位置有import或者export则这个文件会创建一个本地作用域</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> foo = <span class="number">1</span></span><br></pre></td></tr></table></figure>

<h2 id="3-4-命名空间"><a href="#3-4-命名空间" class="headerlink" title="3.4 命名空间"></a>3.4 命名空间</h2><p>防止变量泄露到全局， TypeScript提供了namespace关键字来描述这种分组</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> namespace Utils &#123;</span><br><span class="line">  <span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">log</span>(<span class="params">msg: any</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(msg);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Utils.log(<span class="string">'hello'</span>)</span><br></pre></td></tr></table></figure>

<p>namespace也是支持嵌套的</p>
<h1 id="四-类型系统"><a href="#四-类型系统" class="headerlink" title="四. 类型系统"></a>四. 类型系统</h1><h2 id="4-1-基本概念"><a href="#4-1-基本概念" class="headerlink" title="4.1 基本概念"></a>4.1 基本概念</h2><ol>
<li><p>基本注解</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> num: <span class="built_in">number</span> = <span class="number">123</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params">arg: <span class="built_in">string</span></span>): <span class="title">void</span> </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(arg)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>上面代码使用了变量注解，函数参数注解和函数返回值注解</p>
</li>
<li><p>基本类型注解<br>JavaScript的基本数据类型适用于TypeScript的类型系统</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> str: <span class="built_in">string</span> = <span class="string">'hello'</span></span><br><span class="line"><span class="keyword">const</span> boo: <span class="built_in">boolean</span> = <span class="literal">true</span></span><br><span class="line"><span class="keyword">const</span> num: <span class="built_in">number</span> = <span class="number">123</span></span><br><span class="line"><span class="keyword">const</span> ss: Symbol = Symbol(<span class="string">'123'</span>)</span><br><span class="line"><span class="keyword">const</span> nn: <span class="literal">undefined</span> = <span class="literal">undefined</span></span><br><span class="line"><span class="keyword">const</span> nn1: <span class="literal">null</span> = <span class="literal">null</span></span><br></pre></td></tr></table></figure>



</li>
</ol>
<ol start="3">
<li><p>数组注解<br>![image-20200414103730629](/Users/liwei/Library/Application Support/typora-user-images/image-20200414103730629.png)</p>
</li>
<li><p>接口注解<br>接口说明一种数据结构，是TypeScript的一个核心</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">interface</span> People &#123;</span><br><span class="line">    name: <span class="built_in">string</span>,</span><br><span class="line">    age: <span class="built_in">number</span>,</span><br><span class="line">    hobby?: <span class="built_in">string</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> p: People = &#123;</span><br><span class="line">    name: <span class="string">'david'</span>,</span><br><span class="line">    age: <span class="number">23</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



</li>
</ol>
<ol start="5">
<li><p>内联类型注解</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> p: &#123;</span><br><span class="line">    name: <span class="string">'david'</span>,</span><br><span class="line">    age: <span class="number">23</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">p = &#123;</span><br><span class="line">    name: <span class="string">'david'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>![image-20200414104148235](/Users/liwei/Library/Application Support/typora-user-images/image-20200414104148235.png)</p>
</li>
<li><p>特殊类型注解(<strong>any</strong>, <strong>null</strong>, <strong>undefined</strong>, <strong>void</strong>)</p>
<ul>
<li><p><strong>any</strong><br>能够接收<strong>所有的类型</strong>（包括any类型），因此所有类型的数据都可以赋值给any类型的变量</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> aa: <span class="built_in">any</span></span><br><span class="line"></span><br><span class="line">aa = <span class="number">123</span></span><br><span class="line"></span><br><span class="line">aa = <span class="string">'hello'</span></span><br><span class="line"></span><br><span class="line">aa =  <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>当使用any的使用意味着告诉编辑器不要做<strong>任何</strong>类型检查，要尽量减少any的使用w</p>
</li>
<li><p><strong>null</strong>和<strong>undefined</strong></p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> num = <span class="literal">null</span></span><br><span class="line">num = <span class="literal">undefined</span></span><br></pre></td></tr></table></figure>



</li>
</ul>
</li>
</ol>
<ul>
<li><p><strong>void</strong> </p>
<p>用来表示一个函数没有返回值</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> hello = (): <span class="function"><span class="params">void</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'hello'</span>)</span><br><span class="line">&#125;</span><br><span class="line">hello()</span><br></pre></td></tr></table></figure>
</li>
</ul>
<ol start="7">
<li><p>泛型</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> reverse =  &lt;T&gt; (items: T[]): T[] =&gt; &#123;</span><br><span class="line">  <span class="keyword">let</span> reverse = [];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> index = items.length - <span class="number">1</span>; index &gt;= <span class="number">0</span>; index--) &#123;</span><br><span class="line">    reverse.push(items[index]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> reverse;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="built_in">number</span> = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="keyword">const</span> reverseArr = reverse(<span class="built_in">number</span>)</span><br><span class="line"><span class="built_in">console</span>.log(reverseArr)</span><br></pre></td></tr></table></figure>



</li>
</ol>
<ol start="8">
<li><p>联合类型注解</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> format = (word: <span class="built_in">string</span>[] | <span class="built_in">string</span>): <span class="function"><span class="params">string</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> line = <span class="string">""</span>;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> word === <span class="string">"string"</span>) &#123;</span><br><span class="line">    line = word;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    line = word.join(<span class="string">""</span>).trim();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> line;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(format([<span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>]));</span><br></pre></td></tr></table></figure>



</li>
</ol>
<ol start="9">
<li><p>​    交叉类型</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> extend = &lt;T, U&gt;(first: T, second: U): T &amp; <span class="function"><span class="params">U</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> result = &lt;T &amp; U&gt;&#123;&#125;;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> id <span class="keyword">in</span> first) &#123;</span><br><span class="line">    (&lt;T&gt;result)[id] = first[id];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> id <span class="keyword">in</span> second) &#123;</span><br><span class="line">    <span class="comment">// @ts-ignore</span></span><br><span class="line">    <span class="keyword">if</span> (!result.hasOwnProperty(id)) &#123;</span><br><span class="line">      (&lt;U&gt;result)[id] = second[id];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> x = extend(&#123; a: <span class="string">"hello"</span> &#125;, &#123; b: <span class="string">"world"</span> &#125;);</span><br><span class="line"><span class="built_in">console</span>.log(x)</span><br></pre></td></tr></table></figure>



</li>
</ol>
<ol start="10">
<li><p>元组类型</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr: [<span class="built_in">number</span>, <span class="built_in">string</span>] = [<span class="number">0</span>, <span class="string">''</span>]</span><br><span class="line">arr[<span class="number">0</span>] = <span class="number">123</span></span><br><span class="line">arr[<span class="number">1</span>] = <span class="string">'hello'</span></span><br><span class="line"><span class="built_in">console</span>.log(arr)</span><br></pre></td></tr></table></figure>



</li>
</ol>
<ol start="11">
<li><p>类型别名</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">type</span> strOrNum = <span class="built_in">string</span> | <span class="built_in">number</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">type</span> Text = <span class="built_in">string</span> | &#123; text: <span class="built_in">string</span> &#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">type</span> Coordinates = [<span class="built_in">number</span>, <span class="built_in">number</span>]</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">type</span> Callback = <span class="function">(<span class="params">data: <span class="built_in">string</span></span>) =&gt;</span> <span class="built_in">void</span></span><br></pre></td></tr></table></figure>

</li>
</ol>
<h2 id="4-2-迁移JavaScript代码至TypeScript"><a href="#4-2-迁移JavaScript代码至TypeScript" class="headerlink" title="4.2. 迁移JavaScript代码至TypeScript"></a>4.2. 迁移JavaScript代码至TypeScript</h2><p>一般来说，将JavaScript代码迁移至TypeScript包括以下步骤:</p>
<ul>
<li><p>添加一个tsconfig.json文件。</p>
</li>
<li><p>把文件扩展名从.js改成.ts，开始使用any来减少错误。</p>
</li>
<li><p>开始在TypeScript中写代码，尽可能减少any的使用。</p>
</li>
<li><p>回到旧代码，开始添加类型注解，并修复已识别的错误。</p>
</li>
<li><p>为第三方JavaScript代码定义环境声明。(很多三方库的类型声明已经发布到了<a href="http://definitelytyped.org/" target="_blank" rel="noopener">DefinitelyTyped</a>中)</p>
</li>
<li><p>在TypeScript中可以允许导入任何文件，例如.css文件, 使用webpack的话只需要在globals.d.ts中添加如下代码 即可</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">declare</span> <span class="keyword">module</span> '*.css'</span><br></pre></td></tr></table></figure>



</li>
</ul>
<p>  如果想使用HTML模板，如在Angular， 可以这样做</p>
  <figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">declare</span> <span class="keyword">module</span> '*.html'</span><br></pre></td></tr></table></figure>

<h2 id="4-3-types"><a href="#4-3-types" class="headerlink" title="4.3. @types"></a>4.3. @types</h2><p>毫无疑问，类型是TypeScript最大的优势之一，社区已经记录了将近90%的顶级JavaScript项目。这意味着，我们可以以交互式和探索性的方式来使用这些项目</p>
<h3 id="4-3-1-使用-types"><a href="#4-3-1-使用-types" class="headerlink" title="4.3.1  使用@types"></a>4.3.1  使用@types</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yarn add @types/jquery --save-dev</span><br></pre></td></tr></table></figure>

<p>@types支持全局和模块类型定义</p>
<h3 id="4-3-2-全局-types"><a href="#4-3-2-全局-types" class="headerlink" title="4.3.2  全局@types"></a>4.3.2  全局@types</h3><p>在默认情况下，TypeScript会自动包含支持全局使用的任何定义。例如，对于jQuery，你应该能够在项目中全局使用$。</p>
<h3 id="4-3-3-模块-types"><a href="#4-3-3-模块-types" class="headerlink" title="4.3.3 模块@types"></a>4.3.3 模块@types</h3><p>对于jQuery来说，通常建议使用模块。安装模块@types之后，不需要进行特别的配置，你就可以像使用模块一样使用它了。</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> $ <span class="keyword">from</span> <span class="string">'jquery'</span></span><br><span class="line"><span class="comment">// 现在可以在次模块中任意使用$了</span></span><br></pre></td></tr></table></figure>

<h3 id="4-3-4-控制全局类型泄露"><a href="#4-3-4-控制全局类型泄露" class="headerlink" title="4.3.4 控制全局类型泄露"></a>4.3.4 控制全局类型泄露</h3><p>可以在tsconfig.json的compilerOptions.types选项，引入有意义的类型</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"compilerOptions"</span>: &#123;</span><br><span class="line">    <span class="attr">"types"</span>: [</span><br><span class="line">      <span class="string">"jquery"</span></span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如上例所示，在配置compilerOptions.types：[“jquery”]之后，只允许使用jQuery的@types包。即使安装了另一个声明文件，如npm install@types/node，它的全局变量（如process）也不会泄漏到你的代码中，直到你将它们添加到tsconfig.json类型选项中。</p>
<h2 id="4-4-环境声明文件"><a href="#4-4-环境声明文件" class="headerlink" title="4.4. 环境声明文件"></a>4.4. 环境声明文件</h2><p>你可以选择把这些声明放入<strong>.ts</strong>或<strong>.d.ts</strong>里。在实际的项目中，强烈建议把声明放入独立的.d.ts里，你可以从一个命名为<strong>globals.d.ts</strong>或<strong>vendor.d.ts</strong>的文件开始。</p>
<p>如果一个文件有扩展名<strong>.d.ts</strong>，这意味着每个根级别的声明都必须以declare关键字作为前缀。这可以让开发者清楚地知道，在这里，TypeScript不会把它编译成任何代码，同时，开发者需要确保所声明的内容在编译时存在。</p>
<p><a href="https://www.w3cschool.cn/typescript/typescript-df-introduction.html" target="_blank" rel="noopener">声明文件编写参考</a></p>
<h2 id="4-5-接口"><a href="#4-5-接口" class="headerlink" title="4.5 接口"></a>4.5 接口</h2><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// declare const myPoint: &#123; x: number; y: number &#125;;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> Point &#123;</span><br><span class="line">    x: <span class="built_in">number</span>;</span><br><span class="line">    y: <span class="built_in">number</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span> <span class="keyword">const</span> myPoint: Point</span><br></pre></td></tr></table></figure>

<p>使用内联方式的类型定义和使用接口的方式定义是等效的，但是使用接口的方式便于其他使用者对其进行扩展</p>
<p>如在a.d.ts中有以下代码</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">interface</span> Point &#123;</span><br><span class="line">    x: <span class="built_in">number</span>;</span><br><span class="line">    y: <span class="built_in">number</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在b.d.ts中有如下代码对接口Point进行了扩展</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">interface</span> Point &#123;</span><br><span class="line">    z: <span class="built_in">number</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="4-5-1-类可以实现接口"><a href="#4-5-1-类可以实现接口" class="headerlink" title="4.5.1 类可以实现接口"></a>4.5.1 类可以实现接口</h3><p>如果你希望在类中使用必须要被遵循的接口（类）或别人定义的对象结构，可以使用implements关键字来确保其兼容性</p>
<p>基本上，在implements存在的情况下，外部Point接口的任何更改都将导致代码库中的编译错误，因此可以轻松地使其保持同步</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> MyPoint <span class="keyword">implements</span> Point &#123;</span><br><span class="line">    x!: <span class="built_in">number</span>;</span><br><span class="line">    y!: <span class="built_in">number</span>;</span><br><span class="line">    z!: <span class="built_in">number</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如果接口Point的结构发生了变化，自然MyPoint也需要相应作出改变，否则就会报错</p>
<h2 id="4-6-枚举"><a href="#4-6-枚举" class="headerlink" title="4.6 枚举"></a>4.6 枚举</h2><h3 id="4-6-1-数字枚举"><a href="#4-6-1-数字枚举" class="headerlink" title="4.6.1 数字枚举"></a>4.6.1 数字枚举</h3><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">enum</span> Color &#123;</span><br><span class="line">    RED = <span class="number">100</span>,</span><br><span class="line">    GREEN = <span class="number">200</span>,</span><br><span class="line">    YELLOW = <span class="number">300</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(Color.RED)</span><br><span class="line"><span class="built_in">console</span>.log(Color[<span class="number">100</span>])</span><br></pre></td></tr></table></figure>

<p>上面代码console.log的结果是因为上面的ts代码被编译后生成的js代码是这样的</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> Color;</span><br><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">Color</span>) </span>&#123;</span><br><span class="line">    Color[Color[<span class="string">"RED"</span>] = <span class="number">100</span>] = <span class="string">"RED"</span>;</span><br><span class="line">    Color[Color[<span class="string">"GREEN"</span>] = <span class="number">200</span>] = <span class="string">"GREEN"</span>;</span><br><span class="line">    Color[Color[<span class="string">"YELLOW"</span>] = <span class="number">300</span>] = <span class="string">"YELLOW"</span>;</span><br><span class="line">&#125;)(Color || (Color = &#123;&#125;));</span><br><span class="line"><span class="built_in">console</span>.log(Color.RED);</span><br><span class="line"><span class="built_in">console</span>.log(Color[<span class="number">100</span>]);</span><br></pre></td></tr></table></figure>

<p><code>Color[Color[&quot;RED&quot;] = 100] = &quot;RED&quot;;</code><br>这句代码会执行下述过程</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">Color[<span class="string">"RED"</span>] = <span class="number">100</span> 并返回 <span class="number">100</span> (在JavaScript中，赋值运算符返回的值是被赋予的值)</span><br><span class="line">Color[<span class="number">100</span>] = <span class="string">"RED"</span></span><br></pre></td></tr></table></figure>

<p>用数字枚举做标记的一个实例</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">enum</span> AnimalFlags &#123;</span><br><span class="line">  None = <span class="number">0</span>,</span><br><span class="line">  HasClaws = <span class="number">1</span> &lt;&lt; <span class="number">0</span>,	<span class="comment">// 0000 0000</span></span><br><span class="line">  CanFly = <span class="number">1</span> &lt;&lt; <span class="number">1</span>,    <span class="comment">// 0000 0010</span></span><br><span class="line">  EatsFish = <span class="number">1</span> &lt;&lt; <span class="number">2</span>,  <span class="comment">// 0000 0100</span></span><br><span class="line">  FlyingClawedFishEating = HasClaws | CanFly | EatsFish  <span class="comment">// 0000 0001 || 0000 0010 || 0000 0100 0000 0111 -&gt; 7</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> Animal &#123;</span><br><span class="line">  flags: AnimalFlags;</span><br><span class="line">  [key: <span class="built_in">string</span>]: <span class="built_in">any</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> printAnimalAbilities = (animal: Animal): <span class="function"><span class="params">void</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">var</span> animalFlags = animal.flags;</span><br><span class="line">  <span class="keyword">if</span> (animalFlags &amp;&amp; animalFlags === AnimalFlags.HasClaws) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"有爪子的动物 "</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (animalFlags &amp;&amp; animalFlags === AnimalFlags.CanFly) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"会飞的动物"</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (animalFlags &amp;&amp; animalFlags === AnimalFlags.EatsFish) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"吃鱼的动物"</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (</span><br><span class="line">    animalFlags &amp;&amp;</span><br><span class="line">    animalFlags === AnimalFlags.FlyingClawedFishEating</span><br><span class="line">  ) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"万能的动物"</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (animalFlags == AnimalFlags.None) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"什么也不会的动物"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> animal: Animal = &#123; flags: AnimalFlags.None &#125;;   <span class="comment">// 0000 0000</span></span><br><span class="line">animal.flags |= AnimalFlags.HasClaws    <span class="comment">//  0000 0000  || 0000 0001</span></span><br><span class="line">animal.flags &amp;= ~AnimalFlags.HasClaws   <span class="comment">// 0000 0001 &amp; 1111 1110  0000 0000</span></span><br><span class="line">animal.flags |= AnimalFlags.FlyingClawedFishEating      <span class="comment">// 0000 0000 || 0000 0111      </span></span><br><span class="line">printAnimalAbilities(animal);</span><br></pre></td></tr></table></figure>



<h3 id="4-6-2-字符串枚举"><a href="#4-6-2-字符串枚举" class="headerlink" title="4.6.2 字符串枚举"></a>4.6.2 字符串枚举</h3><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">enum</span> MessageType &#123;</span><br><span class="line">    SUCCESS = <span class="string">'success'</span>,</span><br><span class="line">    ERROR = <span class="string">'error'</span>,</span><br><span class="line">    WARN = <span class="string">'warning'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(MessageType.SUCCESS)</span><br></pre></td></tr></table></figure>

<h3 id="4-6-3-常量枚举"><a href="#4-6-3-常量枚举" class="headerlink" title="4.6.3 常量枚举"></a>4.6.3 常量枚举</h3><p>有时定义枚举可能只是为了让程序可读性更好，而不需要编译后的代码，即不需要编译成对象。typescript中考虑到这种情况，所以加入了 const enum</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">enum</span> Tristate &#123;</span><br><span class="line">    False,</span><br><span class="line">    True,</span><br><span class="line">    Unknown</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> lie = Tristate.False;</span><br></pre></td></tr></table></figure>

<p>最终编译的js代码如下，并不会为枚举Tristate生成对应的Js代码</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="meta">"use strict"</span>;</span><br><span class="line"><span class="keyword">var</span> lie = <span class="number">0</span> <span class="comment">/* False */</span>;</span><br><span class="line"><span class="comment">//# sourceMappingURL=ConstEnum.js.map</span></span><br></pre></td></tr></table></figure>

<p>如果需要让常量枚举也能编译到最终生成的JS代码中，可以使用<strong>preserveConstEnums</strong>编译选项</p>
<h3 id="4-6-4-有静态方法的常量枚举"><a href="#4-6-4-有静态方法的常量枚举" class="headerlink" title="4.6.4 有静态方法的常量枚举"></a>4.6.4 有静态方法的常量枚举</h3><p>可以使用enum+namespace的声明方式向枚举类型添加静态方法。如下面的例子所示，我们将静态成员isBusinessDay添加到枚举上。</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">enum</span> Weekday &#123;</span><br><span class="line">    Monday,</span><br><span class="line">    Tuesday,</span><br><span class="line">    Wednesday,</span><br><span class="line">    Thursday,</span><br><span class="line">    Friday,</span><br><span class="line">    Saturday,</span><br><span class="line">    Sunday</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> Weekday &#123;</span><br><span class="line">    <span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">isBusinessDay</span>(<span class="params">day: Weekday</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (day) &#123;</span><br><span class="line">            <span class="keyword">case</span> Weekday.Saturday:</span><br><span class="line">            <span class="keyword">case</span> Weekday.Sunday:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> mon = Weekday.Monday;</span><br><span class="line"><span class="keyword">const</span> sun = Weekday.Sunday;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(Weekday.isBusinessDay(mon))</span><br><span class="line"><span class="built_in">console</span>.log(Weekday.isBusinessDay(sun))</span><br></pre></td></tr></table></figure>

<h2 id="4-7-lib-d-ts"><a href="#4-7-lib-d-ts" class="headerlink" title="4.7 lib.d.ts"></a>4.7 lib.d.ts</h2><p>当你安装TypeScript时，会顺带安装一个lib.d.ts声明文件。这个文件包含JavaScript运行时及DOM（Document Object Model，文档对象模型）中存在的各种常见的JavaScript环境声明。</p>
<p>你可以通过指定<strong>–noLib</strong>的编译器命令行标记，或者在<strong>tsconfig.json</strong>中指定选项<strong>noLib：true</strong>，从上下文中排除此文件。</p>
<p><strong>lib.d.ts</strong>的内容主要是一些变量声明，如<strong>window</strong>、<strong>document</strong>、<strong>math</strong>等，以及一些类似的接口声明，如<strong>Window</strong>、<strong>Document</strong>、<strong>Math</strong>。阅读全局内容的文档和类型注解的最简单的方法是输入你知道有效的代码，如<strong>Math.floor</strong>，然后在IDE上按F12键，跳转到定义上。</p>
<h3 id="4-7-1-–lib选项"><a href="#4-7-1-–lib选项" class="headerlink" title="4.7.1 –lib选项"></a>4.7.1 –lib选项</h3><p>有时，你想要解耦编译目标（即生成的JavaScript版本）和环境库支持之间的关系。例如，对于Promise，你的编译目标是–target es5，但是你仍然想使用Promise，这时，你可以使用–lib选项来显示地控制lib。</p>
<p>注意：使用–lib选项可以将任何lib与–target解耦。</p>
<p>命令行</p>
<p><code>tsc --target es5  --lib dom,es6</code></p>
<p>tsconfig.json:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="string">"compilerOptions"</span>: &#123;</span><br><span class="line">  <span class="string">"lib"</span>: [<span class="string">"dom"</span>, <span class="string">"es6"</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="4-7-2-lib的分类"><a href="#4-7-2-lib的分类" class="headerlink" title="4.7.2 lib的分类"></a>4.7.2 lib的分类</h3><p>● JavaScript功能</p>
<ol>
<li><p>es5</p>
</li>
<li><p>es6</p>
</li>
<li><p>es2015</p>
</li>
<li><p>es7</p>
</li>
<li><p>es2016</p>
</li>
<li><p>es2017</p>
</li>
<li><p>esnext</p>
</li>
</ol>
<ul>
<li><p>运行环境</p>
<ol>
<li>dom</li>
<li>dom.iterable</li>
<li>webworker</li>
<li>scripthost</li>
</ol>
</li>
<li><p>ESNext功能选项</p>
<ol>
<li>es2015.core</li>
<li>es2015.collection</li>
<li>es2015.generator</li>
<li>es2015.iterable</li>
<li>es2015.promise</li>
<li>es2015.proxy</li>
<li>es2015.reflect</li>
<li>es2015.symbol</li>
<li>es2015.symbol.wellknown</li>
<li>es2016.array.include</li>
<li>es2017.object</li>
<li>es2017.sharedmemory</li>
<li>esnext.asynciterable</li>
</ol>
</li>
</ul>
<p>–lib选项提供了非常高效的控制，因此你最有可能从运行环境与JavaScript功能类别中分别选择一项。如果没有指定–lib，则会导入默认库。</p>
<ul>
<li>当–target选项为es5时，会导入es5、dom、scripthost。</li>
<li>当–target选项为es6时，会导入es6、dom、dom.iterable、scripthost</li>
</ul>
<h2 id="4-8-函数"><a href="#4-8-函数" class="headerlink" title="4.8 函数"></a>4.8 函数</h2><p>函数类型在TypeScript类型系统中扮演着非常重要的角色，它们是可组合系统的核心构建块。</p>
<h3 id="4-8-1-参数注解"><a href="#4-8-1-参数注解" class="headerlink" title="4.8.1 参数注解"></a>4.8.1 参数注解</h3><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">func</span>(<span class="params">arg: <span class="built_in">string</span>| <span class="built_in">string</span>[] | <span class="literal">undefined</span> | <span class="literal">null</span></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// do something</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="4-8-2-函数返回值注解"><a href="#4-8-2-函数返回值注解" class="headerlink" title="4.8.2 函数返回值注解"></a>4.8.2 函数返回值注解</h3><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">func</span>(<span class="params">arg: <span class="built_in">string</span>| <span class="built_in">string</span>[] | <span class="literal">undefined</span> | <span class="literal">null</span></span>): <span class="title">Result</span> </span>&#123;</span><br><span class="line">    <span class="comment">// do something</span></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        data: [],</span><br><span class="line">        <span class="keyword">type</span>: <span class="string">'success'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> Result &#123;</span><br><span class="line">    data: <span class="built_in">any</span>,</span><br><span class="line">    <span class="keyword">type</span>: <span class="built_in">string</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="4-8-3-可选参数-参数默认值"><a href="#4-8-3-可选参数-参数默认值" class="headerlink" title="4.8.3 可选参数, 参数默认值"></a>4.8.3 可选参数, 参数默认值</h3><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">func</span>(<span class="params">arg: <span class="built_in">string</span>| <span class="built_in">string</span>[] | <span class="literal">undefined</span> | <span class="literal">null</span>, canBeNull?: <span class="built_in">number</span> = 1</span>): <span class="title">Result</span> </span>&#123;&#125;</span><br></pre></td></tr></table></figure>

<h3 id="4-8-4-函数重载"><a href="#4-8-4-函数重载" class="headerlink" title="4.8.4 函数重载"></a>4.8.4 函数重载</h3><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 函数重载</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">print</span>(<span class="params">a: <span class="built_in">number</span></span>): <span class="title">void</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">print</span>(<span class="params">a: <span class="built_in">number</span>, b: <span class="built_in">number</span></span>): <span class="title">void</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">print</span>(<span class="params">a: <span class="built_in">number</span>, b: <span class="built_in">number</span>, c:<span class="built_in">number</span></span>): <span class="title">void</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">print</span>(<span class="params">a?: <span class="built_in">number</span>, b?:<span class="built_in">number</span>, c?: <span class="built_in">number</span></span>): <span class="title">void</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!a &amp;&amp; !b &amp;&amp; !c ) <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">if</span>(a &amp;&amp; !b &amp;&amp; !c) <span class="built_in">console</span>.log(<span class="string">'a is: '</span> + a)</span><br><span class="line">    <span class="keyword">if</span>(a &amp;&amp; b &amp;&amp; !c) <span class="built_in">console</span>.log(<span class="string">'a+b is: '</span> + (a+b))</span><br><span class="line">    <span class="keyword">if</span>(a &amp;&amp; b &amp;&amp; c) <span class="built_in">console</span>.log(<span class="string">'a+b+c is: '</span> + (a+b+c))</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">print(<span class="number">1</span>)</span><br><span class="line">print(<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line">print(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br></pre></td></tr></table></figure>

<h3 id="4-8-5-可调用和可实例化"><a href="#4-8-5-可调用和可实例化" class="headerlink" title="4.8.5 可调用和可实例化"></a>4.8.5 可调用和可实例化</h3><ol>
<li>可调用</li>
</ol>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 可调用</span></span><br><span class="line"><span class="keyword">interface</span> ReturnString &#123;</span><br><span class="line">    (): <span class="built_in">string</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 它表示一个返回值为string的函数</span></span><br><span class="line"><span class="keyword">declare</span> <span class="keyword">const</span> foo: ReturnString</span><br><span class="line"><span class="keyword">const</span> bar = foo()</span><br></pre></td></tr></table></figure>

<p>一个实例</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">interface</span> Complex &#123;</span><br><span class="line">    (foo: <span class="built_in">string</span>, bar?: <span class="built_in">number</span>, ...others: <span class="built_in">boolean</span>[]): <span class="built_in">number</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> Overloaded &#123;</span><br><span class="line">    (foo: <span class="built_in">string</span>): <span class="built_in">string</span>;</span><br><span class="line">    (foo: <span class="built_in">number</span>): <span class="built_in">number</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">stringOrNumber</span>(<span class="params">foo: <span class="built_in">number</span></span>): <span class="title">number</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">stringOrNumber</span>(<span class="params">foo: <span class="built_in">string</span></span>): <span class="title">string</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">stringOrNumber</span>(<span class="params">foo: <span class="built_in">any</span></span>): <span class="title">any</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">typeof</span> foo === <span class="string">'number'</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> foo * foo;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span> foo === <span class="string">'string'</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`hello <span class="subst">$&#123;foo&#125;</span>`</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> overloaded: Overloaded  = stringOrNumber</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> str = overloaded(<span class="string">''</span>)   <span class="comment">// str被推断为string类型</span></span><br><span class="line"><span class="keyword">const</span> num = overloaded(<span class="number">123</span>) <span class="comment">// num 被推断为number类型</span></span><br><span class="line"><span class="built_in">console</span>.log(str)</span><br><span class="line"><span class="built_in">console</span>.log(num)</span><br></pre></td></tr></table></figure>

<ol start="2">
<li><p>可实例化</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">create</span>&lt;<span class="title">T</span>&gt;(<span class="params">c: &#123;<span class="keyword">new</span>(): T; &#125;</span>): <span class="title">T</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> c();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> BeeKeeper &#123;</span><br><span class="line">    hasMask: <span class="built_in">boolean</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> ZooKeeper &#123;</span><br><span class="line">    nametag: <span class="built_in">string</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> Animal &#123;</span><br><span class="line">    numLegs: <span class="built_in">number</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> Bee <span class="keyword">extends</span> Animal &#123;</span><br><span class="line">    keeper: BeeKeeper;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> Lion <span class="keyword">extends</span> Animal &#123;</span><br><span class="line">    keeper: ZooKeeper;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createInstance</span>&lt;<span class="title">A</span> <span class="title">extends</span> <span class="title">Animal</span>&gt;(<span class="params">c: <span class="keyword">new</span> () =&gt; A</span>): <span class="title">A</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> c();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">createInstance(Lion).keeper.nametag;  <span class="comment">// typechecks!</span></span><br><span class="line">createInstance(Bee).keeper.hasMask;   <span class="comment">// typechecks!</span></span><br></pre></td></tr></table></figure>

</li>
</ol>
<h2 id="4-9-类型断言"><a href="#4-9-类型断言" class="headerlink" title="4.9 类型断言"></a>4.9 类型断言</h2><p>TypeScript允许你以任何方式去重写其推断和分析的类型。这是通过一种被称为“类型断言”的机制来实现的。TypeScript类型断言纯粹是用来告诉编译器，你比它更了解这个类型，并且它不应该再发出错误提示。</p>
<p>类型断言的一个常见示例是将代码从JavaScript迁移到TypeScript。</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> foo = &#123;&#125;</span><br><span class="line">foo.bar = <span class="number">123</span></span><br></pre></td></tr></table></figure>

<p>这里的代码发出了错误警告，因为foo的类型推断为{}，即具有零属性的对象。因此，你不能在它的属性上添加bar或bas，你可以通过类型断言来避免此问题。</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> foo = &#123;&#125; <span class="keyword">as</span> <span class="built_in">any</span></span><br><span class="line">foo.bar = <span class="number">123</span></span><br><span class="line"><span class="built_in">console</span>.log(foo)</span><br></pre></td></tr></table></figure>

<p>也可以这样进行类型断言</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> foo = &lt;<span class="built_in">any</span>&gt;&#123;&#125;</span><br><span class="line">foo.bar = <span class="number">123</span></span><br><span class="line"><span class="built_in">console</span>.log(foo)</span><br></pre></td></tr></table></figure>

<p>但是因为<strong>JSX</strong>中JS和XML混写，因此推荐使用<strong>as</strong>来进行类型断言</p>
<p>类型断言之所以不被称为“类型转换”，是因为转换通常意味着某种运行时的支持。但是，类型断言纯粹是一个编译时语法，同时，它也为编译器提供了分析代码的方法。</p>
<p>我们可以也可以利用类型断言来提供代码提示</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">interface</span> People &#123;</span><br><span class="line">    name: <span class="built_in">string</span>;</span><br><span class="line">    age: <span class="built_in">number</span>;</span><br><span class="line">    hobby: <span class="built_in">string</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> person = &lt;People&gt;&#123;</span><br><span class="line">    name: <span class="string">'david'</span>,</span><br><span class="line">    age: <span class="number">23</span>,</span><br><span class="line">    hobby: <span class="string">'programming'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(person)</span><br></pre></td></tr></table></figure>

<p>这也会存在一个同样的问题，如果你忘了某个属性，编译器同样也不会发出错误警告。那么，像这样可能会更好一些。</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> person1: People = &#123;</span><br><span class="line">    name: <span class="string">'tom'</span>,</span><br><span class="line">    age: <span class="number">23</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>尽管我们已经证明了类型断言并不那么安全，但它也有用武之地。下面就是一个非常实用的例子，当使用者了解传入参数更具体的类型时，类型断言就能按预期工作。</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> handler = <span class="function">(<span class="params">event: Event</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> mouseEvent = event <span class="keyword">as</span> MouseEvent</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="4-10-Freshness"><a href="#4-10-Freshness" class="headerlink" title="4.10 Freshness"></a>4.10 Freshness</h2><p>对于对象字面量的类型，TypeScript 有一个被称之为 「<a href="https://link.zhihu.com/?target=https%3A//github.com/Microsoft/TypeScript/pull/3823">Freshness</a> 」的概念，它也被称为更严格的对象字面量检查</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">logName</span>(<span class="params">something: &#123;name?: <span class="built_in">string</span>&#125;</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(something.name)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> p1 = &#123;name: <span class="string">'david'</span>, job: <span class="string">'programming'</span>&#125;</span><br><span class="line"><span class="comment">// 结构类型很方便，但是， 如果它允许传入并没有用到的属性</span></span><br><span class="line">logName(p1)</span><br><span class="line"><span class="comment">// 对于对象字面量会进行Fressness检查（更为严格的对象字面量检查）</span></span><br><span class="line">logName(&#123;name: <span class="string">'jack'</span>, job: <span class="string">'backendprogrammer'</span>&#125;)</span><br><span class="line"><span class="comment">// 可以通过添加索引签名来允许字面量对象传递没有显示声明的属性</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">logName1</span> (<span class="params">something: &#123;name?: <span class="built_in">string</span>, [x:<span class="built_in">string</span>]: <span class="built_in">any</span>&#125;</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(something.name)</span><br><span class="line">&#125;</span><br><span class="line">logName1(&#123;name: <span class="string">'jack'</span>, job: <span class="string">'backendprogrammer'</span>&#125;)</span><br></pre></td></tr></table></figure>

<h2 id="4-11-类型保护"><a href="#4-11-类型保护" class="headerlink" title="4.11 类型保护"></a>4.11 类型保护</h2><h3 id="4-11-1-使用typeof"><a href="#4-11-1-使用typeof" class="headerlink" title="4.11.1 使用typeof"></a>4.11.1 使用typeof</h3><p>![image-20200427172819778](/Users/liwei/Library/Application Support/typora-user-images/image-20200427172819778.png)</p>
<h3 id="4-11-2-使用instanceof"><a href="#4-11-2-使用instanceof" class="headerlink" title="4.11.2 使用instanceof"></a>4.11.2 使用instanceof</h3><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> Foo &#123;</span><br><span class="line">    foo = <span class="number">123</span>;</span><br><span class="line">    common = <span class="string">'123'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> Bar &#123;</span><br><span class="line">    bar = <span class="number">123</span>;</span><br><span class="line">    common = <span class="string">'123'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">doStuff</span>(<span class="params">arg: Foo | Bar</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (arg <span class="keyword">instanceof</span> Foo)&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(arg.foo)</span><br><span class="line">        <span class="built_in">console</span>.log(arg.bar)</span><br><span class="line">        <span class="built_in">console</span>.log(arg.common)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (arg <span class="keyword">instanceof</span> Bar) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(arg.foo)</span><br><span class="line">        <span class="built_in">console</span>.log(arg.bar)</span><br><span class="line">        <span class="built_in">console</span>.log(arg.common)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>typescript能够推断出else中的类型</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> Foo &#123;</span><br><span class="line">    foo = <span class="number">123</span>;</span><br><span class="line">    common = <span class="string">'123'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> Bar &#123;</span><br><span class="line">    bar = <span class="number">123</span>;</span><br><span class="line">    common = <span class="string">'123'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">doStuff</span>(<span class="params">arg: Foo | Bar</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (arg <span class="keyword">instanceof</span> Foo)&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(arg.foo)</span><br><span class="line">        <span class="built_in">console</span>.log(arg.bar)</span><br><span class="line">        <span class="built_in">console</span>.log(arg.common)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(arg.bar)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="4-11-3-使用in关键字"><a href="#4-11-3-使用in关键字" class="headerlink" title="4.11.3 使用in关键字"></a>4.11.3 使用in关键字</h3><p>![image-20200427173353893](/Users/liwei/Library/Application Support/typora-user-images/image-20200427173353893.png)</p>
<h3 id="4-11-4-字面量类型保护"><a href="#4-11-4-字面量类型保护" class="headerlink" title="4.11.4 字面量类型保护"></a>4.11.4 字面量类型保护</h3><p>你可以使用===、==、！==、！=来区分字面量类型。</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> Foo = &#123;</span><br><span class="line">    kind: <span class="string">'foo'</span>;</span><br><span class="line">    foo: <span class="built_in">number</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">type</span> Bar = &#123;</span><br><span class="line">    kind: <span class="string">'bar'</span>;</span><br><span class="line">    bar: <span class="built_in">number</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">doStuff</span>(<span class="params">arg: Foo|Bar</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(arg.kind === <span class="string">'foo'</span>)&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(arg.foo)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(arg.bar)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="4-11-5-strictNullChecks编译属性下的null和undefined"><a href="#4-11-5-strictNullChecks编译属性下的null和undefined" class="headerlink" title="4.11.5 strictNullChecks编译属性下的null和undefined"></a>4.11.5 strictNullChecks编译属性下的null和undefined</h3><p>TypeScript可以使用==null和!==null来区分null和undefined</p>
<p>![image-20200427174255480](/Users/liwei/Library/Application Support/typora-user-images/image-20200427174255480.png)</p>
<h3 id="4-11-6-自定义类型保护"><a href="#4-11-6-自定义类型保护" class="headerlink" title="4.11.6 自定义类型保护"></a>4.11.6 自定义类型保护</h3><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">interface</span> Foo &#123;</span><br><span class="line">    foo: <span class="built_in">number</span>;</span><br><span class="line">    common: <span class="built_in">string</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">interface</span> Bar &#123;</span><br><span class="line">    bar: <span class="built_in">number</span>;</span><br><span class="line">    common: <span class="built_in">string</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isFoo</span>(<span class="params">arg: Foo|Bar</span>): <span class="title">arg</span> <span class="title">is</span> <span class="title">Foo</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (arg <span class="keyword">as</span> Foo).foo !== <span class="literal">undefined</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">doStuff</span>(<span class="params">arg: Foo | Bar</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(isFoo(arg))&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(arg.foo)  <span class="comment">// 正确</span></span><br><span class="line">        <span class="built_in">console</span>.log(arg.bar)  <span class="comment">// 错误</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(arg.bar)  <span class="comment">// 正确</span></span><br><span class="line">        <span class="built_in">console</span>.log(arg.foo)  <span class="comment">// 错误</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="4-11-7-类型保护和函数回调"><a href="#4-11-7-类型保护和函数回调" class="headerlink" title="4.11.7 类型保护和函数回调"></a>4.11.7 类型保护和函数回调</h3><p>TypeScript不能确定类型保护在回调中一直有效，比如下述代码中变量foo的属性bar可能为为undefined，因此typescript会报错</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">var</span> foo:&#123;bar?: &#123;baz: <span class="built_in">string</span>&#125;&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">doCalback</span>(<span class="params">callback: () =&gt; <span class="built_in">void</span></span>)</span>&#123;</span><br><span class="line">    callback()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(foo.bar)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(foo.bar.baz)</span><br><span class="line">    doCalback(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(foo.bar.baz)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>![image-20200427175325417](/Users/liwei/Library/Application Support/typora-user-images/image-20200427175325417.png)</p>
<p>解决方式为把推断的安全值存放在本地的局部变量中</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">var</span> foo:&#123;bar?: &#123;baz: <span class="built_in">string</span>&#125;&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">doCalback</span>(<span class="params">callback: () =&gt; <span class="built_in">void</span></span>)</span>&#123;</span><br><span class="line">    callback()</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(foo.bar)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(foo.bar.baz)</span><br><span class="line">    <span class="keyword">const</span> bar = foo.bar</span><br><span class="line">    doCalback(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(bar.baz)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="4-12-字面量类型"><a href="#4-12-字面量类型" class="headerlink" title="4.12 字面量类型"></a>4.12 字面量类型</h2><h3 id="4-12-1-字符串字面量"><a href="#4-12-1-字符串字面量" class="headerlink" title="4.12.1 字符串字面量"></a>4.12.1 字符串字面量</h3><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> Direction = <span class="string">'North'</span> | <span class="string">'East'</span> | <span class="string">'South'</span> | <span class="string">'West'</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">move</span>(<span class="params">distance: <span class="built_in">number</span>, direction: Direction</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`<span class="subst">$&#123;direction&#125;</span>: <span class="subst">$&#123;distance&#125;</span>`</span>)</span><br><span class="line">&#125;</span><br><span class="line">move(<span class="number">1</span>, <span class="string">'North'</span>)</span><br><span class="line">move(<span class="number">2</span>, <span class="string">"West"</span>)</span><br></pre></td></tr></table></figure>

<h3 id="4-12-3-boolean和number字面量"><a href="#4-12-3-boolean和number字面量" class="headerlink" title="4.12.3 boolean和number字面量"></a>4.12.3 boolean和number字面量</h3><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> oneToFive = <span class="number">1</span> | <span class="number">2</span> | <span class="number">3</span> | <span class="number">4</span> | <span class="number">5</span></span><br><span class="line"><span class="keyword">type</span> Bools = <span class="literal">true</span> | <span class="literal">false</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">trueOrFalse</span>(<span class="params">arg: Bools</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(arg)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">logNumber</span>(<span class="params">num: oneToFive</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(num)</span><br><span class="line">&#125;</span><br><span class="line">trueOrFalse(<span class="literal">false</span>)</span><br><span class="line">logNumber(<span class="number">1</span>)</span><br></pre></td></tr></table></figure>

<h3 id="4-12-4-基于字符串的枚举"><a href="#4-12-4-基于字符串的枚举" class="headerlink" title="4.12.4 基于字符串的枚举"></a>4.12.4 基于字符串的枚举</h3><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 根据传入的数组生成key-value结构</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">strEnum</span>&lt;<span class="title">T</span> <span class="title">extends</span> <span class="title">string</span>&gt;(<span class="params">o: <span class="built_in">Array</span>&lt;T&gt;</span>): </span>&#123;[K <span class="keyword">in</span> T]: K&#125; &#123;</span><br><span class="line">    <span class="keyword">return</span> o.reduce(<span class="function">(<span class="params">res, key</span>) =&gt;</span> &#123;</span><br><span class="line">        res[key] = key;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;, <span class="built_in">Object</span>.create(<span class="literal">null</span>))</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 然后可以使用keyof, typeof来生成字符串的联合类型</span></span><br><span class="line"><span class="keyword">const</span> Direction = strEnum([<span class="string">'North'</span>, <span class="string">'South'</span>, <span class="string">'East'</span>, <span class="string">'West'</span>])</span><br><span class="line"><span class="keyword">type</span> Direction = keyof <span class="keyword">typeof</span> Direction</span><br><span class="line"><span class="keyword">let</span> sample: Direction</span><br><span class="line"></span><br><span class="line">sample = Direction.North</span><br><span class="line">sample = <span class="string">'North'</span></span><br><span class="line">sample = <span class="string">'AnythingElse'</span> <span class="comment">// 错误</span></span><br></pre></td></tr></table></figure>

<h2 id="4-13-readonly"><a href="#4-13-readonly" class="headerlink" title="4.13 readonly"></a>4.13 readonly</h2><p>使用readonly关键字来标记属性可以保证数据不可变</p>
<p>![image-20200428091821889](/Users/liwei/Library/Application Support/typora-user-images/image-20200428091821889.png)</p>
<p>![image-20200428091943080](/Users/liwei/Library/Application Support/typora-user-images/image-20200428091943080.png)</p>
<p>我们也可以指定一个类的属性为readonly,然后在声明或在构造函数中初始化它们,如下所示</p>
<p>![image-20200428092157934](/Users/liwei/Library/Application Support/typora-user-images/image-20200428092157934.png)</p>
<h3 id="4-13-1-使用readonly的实例"><a href="#4-13-1-使用readonly的实例" class="headerlink" title="4.13.1 使用readonly的实例"></a>4.13.1 使用readonly的实例</h3><ol>
<li>一个把类型中所有属性转化为只读属性的映射类型</li>
</ol>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 下面是一个readonly映射类型，接收一个泛型T，用来把它所有属性都标记为readonly</span></span><br><span class="line"><span class="keyword">type</span> Foo =  &#123;</span><br><span class="line">    bar: <span class="built_in">number</span>;</span><br><span class="line">    bas: <span class="built_in">number</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> MyReadonly&lt;T&gt; = &#123;</span><br><span class="line">    readonly [K <span class="keyword">in</span> keyof T]: T[K]</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">type</span> ReadonlyFoo = MyReadonly&lt;Foo&gt;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> foo1: Foo = &#123;bar: <span class="number">123</span>, bas: <span class="number">456</span>&#125;</span><br><span class="line"><span class="keyword">const</span> fooReadonly: ReadonlyFoo = &#123;bar: <span class="number">123</span>, bas: <span class="number">456</span>&#125;</span><br><span class="line">foo.bar = <span class="number">456</span></span><br><span class="line">fooReadonly.bar = <span class="number">789</span>   <span class="comment">// 报错</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>React.js中state和props的使用</li>
</ol>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> React, &#123; PureComponent &#125; <span class="keyword">from</span> <span class="string">'react'</span></span><br><span class="line"><span class="keyword">import</span> &#123; Layout, Menu &#125; <span class="keyword">from</span> <span class="string">'antd'</span></span><br><span class="line"><span class="keyword">import</span> &#123; connect &#125; <span class="keyword">from</span> <span class="string">'dva'</span></span><br><span class="line"><span class="keyword">import</span> &#123; Link &#125; <span class="keyword">from</span> <span class="string">'react-router-dom'</span></span><br><span class="line"><span class="keyword">import</span> &#123; Urls &#125; <span class="keyword">from</span> <span class="string">'@/config'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; Header, Content &#125; = Layout</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> Props &#123;</span><br><span class="line">    readonly [index: <span class="built_in">string</span>]: <span class="built_in">any</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> State &#123;</span><br><span class="line">    menus: <span class="built_in">Array</span>&lt;&#123;</span><br><span class="line">        readonly key: <span class="built_in">string</span></span><br><span class="line">        readonly label: <span class="built_in">string</span></span><br><span class="line">        readonly to: <span class="built_in">string</span></span><br><span class="line">    &#125;&gt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> App <span class="keyword">extends</span> PureComponent&lt;Props, State&gt; &#123;</span><br><span class="line">    state = &#123;</span><br><span class="line">        menus: [</span><br><span class="line">            &#123;</span><br><span class="line">                key: <span class="string">'main'</span>,</span><br><span class="line">                label: <span class="string">'首页'</span>,</span><br><span class="line">                to: Urls.MAIN</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                key: <span class="string">'form'</span>,</span><br><span class="line">                label: <span class="string">'表单设计'</span>,</span><br><span class="line">                to: Urls.FORM</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                key: <span class="string">'code'</span>,</span><br><span class="line">                label: <span class="string">'代码生成'</span>,</span><br><span class="line">                to: Urls.CODE</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                key: <span class="string">'chart'</span>,</span><br><span class="line">                label: <span class="string">'图表设计'</span>,</span><br><span class="line">                to: Urls.CHART</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    renderMenu(): JSX.Element &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123; menus &#125; = <span class="keyword">this</span>.state</span><br><span class="line">        <span class="keyword">return</span> (</span><br><span class="line">            &lt;Menu theme=&#123;<span class="string">'dark'</span>&#125; mode=&#123;<span class="string">'horizontal'</span>&#125;&gt;</span><br><span class="line">                &#123;menus.map(<span class="function">(<span class="params">menu</span>) =&gt;</span> (</span><br><span class="line">                    &lt;Menu.Item key=&#123;menu.key&#125;&gt;</span><br><span class="line">                        &lt;Link to=&#123;menu.to&#125;&gt;&#123;menu.label&#125;&lt;<span class="regexp">/Link&gt;</span></span><br><span class="line"><span class="regexp">                    &lt;/</span>Menu.Item&gt;</span><br><span class="line">                ))&#125;</span><br><span class="line">            &lt;<span class="regexp">/Menu&gt;</span></span><br><span class="line"><span class="regexp">        )</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    render(): JSX.Element &#123;</span></span><br><span class="line"><span class="regexp">        return (</span></span><br><span class="line"><span class="regexp">            &lt;Layout className=&#123;'height100'&#125;&gt;</span></span><br><span class="line"><span class="regexp">                &lt;Header&gt;&#123;this.renderMenu()&#125;&lt;/</span>Header&gt;</span><br><span class="line">                &lt;Content&gt;&#123;<span class="keyword">this</span>.props.children&#125;&lt;<span class="regexp">/Content&gt;</span></span><br><span class="line"><span class="regexp">            &lt;/</span>Layout&gt;</span><br><span class="line">        )</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> connect(<span class="function">(<span class="params">&#123; app &#125;</span>) =&gt;</span> (&#123; ...app.toJS() &#125;))(App)</span><br></pre></td></tr></table></figure>

<ol start="3">
<li><p>绝对不可变</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">interface</span> Foo &#123;</span><br><span class="line">    readonly [x: <span class="built_in">number</span>]: <span class="built_in">number</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> foo1: Foo = &#123; <span class="number">0</span>: <span class="number">123</span>, <span class="number">2</span>: <span class="number">345</span> &#125;</span><br><span class="line"><span class="built_in">console</span>.log(foo1[<span class="number">0</span>])</span><br><span class="line">foo1[<span class="number">0</span>] = <span class="number">456</span>   <span class="comment">// 报错，只读不可修改</span></span><br><span class="line"><span class="comment">// 以不变的方式使用原生数组,可以使用TypeScript提供的ReadonlyArray&lt;T&gt;接口</span></span><br><span class="line"><span class="keyword">let</span> foo2: ReadonlyArray&lt;<span class="built_in">number</span>&gt; = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="built_in">console</span>.log(foo2[<span class="number">0</span>])</span><br><span class="line">foo2.push(<span class="number">4</span>)  <span class="comment">// 报错，只读数组不可添加元素</span></span><br><span class="line">foo2 = foo2.concat(<span class="number">4</span>)  <span class="comment">// 这样是允许的，因为通过concat创建了一个副本</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>readonly的自动推断<br>例如在一个class中，如果有一个只有getter、没有setter的属性，它就能被推断为是只读的</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> Animals &#123;</span><br><span class="line">    name: <span class="built_in">string</span> = <span class="string">'dog'</span>;</span><br><span class="line">    age: <span class="built_in">number</span> = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">get</span> info() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.name + <span class="string">''</span> + <span class="keyword">this</span>.age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> animal1 = <span class="keyword">new</span> Animals()</span><br><span class="line"><span class="built_in">console</span>.log(animal1.info)</span><br><span class="line">animal1.info = <span class="string">'cat2'</span>   <span class="comment">// 报错，只读属性不可重新赋值</span></span><br></pre></td></tr></table></figure>



</li>
</ol>
<ol start="5">
<li><p>readonly和const<br>readonly用于属性， const用于变量声明<br>readonly能确保属性不能直接被使用者修改，但是当你把这个属性交给其他并没有做出这种保证的使用者（出于类型兼容的原因而被允许）时，他们可以修改它</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> foo1: &#123;</span><br><span class="line">    readonly bar: <span class="built_in">number</span>;</span><br><span class="line">&#125; = &#123;</span><br><span class="line">    bar: <span class="number">123</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">foo1.bar = <span class="number">456</span>   <span class="comment">// 报错，只读属性不能被修改</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">iMutateFoo</span>(<span class="params">foo: &#123; bar: <span class="built_in">number</span> &#125;</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 处于类型兼容考虑readonly的属性被修改了</span></span><br><span class="line">    foo.bar = <span class="number">456</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">iMutateFoo(foo1)</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> Foo &#123;</span><br><span class="line">    readonly bar: <span class="built_in">number</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">iMutateFoo1</span>(<span class="params">foo: Foo</span>) </span>&#123;</span><br><span class="line">    foo.bar = <span class="number">456</span>  <span class="comment">// 因为明确了参数的类型，则此处只读属性bar不可被修改了</span></span><br><span class="line">&#125;</span><br><span class="line">iMutateFoo1(foo1)</span><br></pre></td></tr></table></figure>


</li>
</ol>
<h2 id="4-14-泛型"><a href="#4-14-泛型" class="headerlink" title="4.14 泛型"></a>4.14 泛型</h2><p>设计泛型的关键动机是在成员之间提供有意义的类型约束，这些成员可以是类的实例成员、类的方法、函数的参数、函数返回值。</p>
<h3 id="4-14-1-使用泛型的实例"><a href="#4-14-1-使用泛型的实例" class="headerlink" title="4.14.1 使用泛型的实例"></a>4.14.1 使用泛型的实例</h3><ol>
<li>一个队列的例子</li>
</ol>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> Queue&lt;T&gt; &#123;</span><br><span class="line">    <span class="keyword">private</span> data:T[] = [];</span><br><span class="line">    push = <span class="function">(<span class="params">item: T</span>) =&gt;</span> <span class="keyword">this</span>.data.push(item);</span><br><span class="line">    pop = (): T | <span class="function"><span class="params">undefined</span>  =&gt;</span> <span class="keyword">this</span>.data.shift();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> queue = <span class="keyword">new</span> Queue&lt;<span class="built_in">number</span>&gt;();</span><br><span class="line">queue.push(<span class="number">1</span>)</span><br><span class="line">queue.push(<span class="string">'1'</span>)  <span class="comment">// 报错，指定泛型类型为number类型，不能再添加其他类型的元素了</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li><p>reverse函数</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">reverse</span> &lt;<span class="title">T</span>&gt; (<span class="params">arr: T[]</span>): <span class="title">T</span>[] </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> res: T[] = []</span><br><span class="line">    <span class="keyword">for</span>( <span class="keyword">let</span> i = arr.length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i-- )&#123;</span><br><span class="line">        res.push(arr[i])</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(reverse([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]))</span><br></pre></td></tr></table></figure>

<p>建议：你可以随意调用泛型的参数，当你使用简单的泛型时，泛型常用T、U、V表示。如果在你的参数里，拥有不止一个泛型，你应该使用一个更语义化的名称，如TKey和TValue。依照惯例，以T作为泛型的前缀</p>
</li>
<li><p>一个用于加载JSON文件的返回值函数， 它会返回任何你传入的类型的Promise</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> getJSON = &lt;T&gt;(config: &#123;url: <span class="built_in">string</span>; headers?: &#123;[key: <span class="built_in">string</span>]: <span class="built_in">string</span>&#125;&#125;): <span class="built_in">Promise</span>&lt;T&gt; =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> fetchConfig = &#123;</span><br><span class="line">        method: <span class="string">'GET'</span>,</span><br><span class="line">        Accept: <span class="string">'application/json'</span>,</span><br><span class="line">        <span class="string">'Content-Type'</span>: <span class="string">'application/json'</span>,</span><br><span class="line">        ...(config.headers || &#123;&#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> fetch(config.url, fetchConfig).then&lt;T&gt;(<span class="function"><span class="params">response</span> =&gt;</span> response.json());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> LoadUserResponse = &#123;</span><br><span class="line">    user: &#123;</span><br><span class="line">        name: <span class="built_in">string</span>;</span><br><span class="line">        emial: <span class="built_in">string</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">loadUsers</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> getJSON&lt;LoadUserResponse&gt;(&#123; url: <span class="string">'http://example.com/users'</span>&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">loadUsers().then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(res.user.name)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>



</li>
</ol>
<ol start="4">
<li><p>泛型被用于函数参数</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> Animals =  &#123;</span><br><span class="line">    name: <span class="built_in">string</span>;</span><br><span class="line">    age: <span class="built_in">number</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Website = &#123;</span><br><span class="line">    url: <span class="built_in">string</span>;</span><br><span class="line">    count: <span class="built_in">number</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">log</span>&lt;<span class="title">T</span>&gt;(<span class="params">arg: T</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(arg)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">log&lt;Animals&gt;(&#123;</span><br><span class="line">    name: <span class="string">'dog'</span>,</span><br><span class="line">    age: <span class="number">2</span></span><br><span class="line">&#125;)</span><br><span class="line">log&lt;Website&gt;(&#123;</span><br><span class="line">    url: <span class="string">'http://baidu.com'</span>,</span><br><span class="line">    count: <span class="number">10000</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>


</li>
</ol>
<h2 id="4-15-类型推断"><a href="#4-15-类型推断" class="headerlink" title="4.15 类型推断"></a>4.15 类型推断</h2><p>TypeScript可以根据一些简单的规则来推断（然后检查）变量的类型</p>
<ul>
<li><p>定义变量<br>变量的类型根据定义来推断</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> a = <span class="number">123</span>  <span class="comment">// 推断为number</span></span><br><span class="line"><span class="keyword">let</span> b = <span class="string">'hello'</span> <span class="comment">// 推断为string</span></span><br><span class="line">b = <span class="number">123</span>      <span class="comment">// 错误</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>函数返回值<br>根据return语句来判断</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params">a: <span class="built_in">number</span>, b: <span class="built_in">number</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 推断返回类型为number</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>赋值</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> Adder = <span class="function">(<span class="params">a: <span class="built_in">number</span>, b:<span class="built_in">number</span></span>) =&gt;</span> <span class="built_in">number</span></span><br><span class="line"><span class="keyword">let</span> foo1: Adder = <span class="function">(<span class="params">a, b</span>) =&gt;</span> a + b   <span class="comment">// a,b被推断为number类型</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>对象字面量</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line">    a: <span class="number">1</span>,</span><br><span class="line">    b: <span class="string">'1'</span></span><br><span class="line">&#125;</span><br><span class="line">obj.a = <span class="string">'2'</span>  <span class="comment">// 报错</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>解构</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line">    a: <span class="number">1</span>,</span><br><span class="line">    b: <span class="string">'1'</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> &#123; a &#125; = obj</span><br><span class="line">a = <span class="string">'2'</span>  <span class="comment">// 报错</span></span><br></pre></td></tr></table></figure>

</li>
</ul>
<h3 id="4-15-1-noImplicitAny"><a href="#4-15-1-noImplicitAny" class="headerlink" title="4.15.1 noImplicitAny"></a>4.15.1 noImplicitAny</h3><p>标记noImplicitAny用来指示编译器，在无法推断一个变量的类型时，发出一个错误（或者只将其作为一个隐式的any）。此时，你可以做如下处理。</p>
<ul>
<li>通过显式添加：any的类型注解，来让它成为一个any类型。</li>
<li>通过一些更准确的类型注解来帮助TypeScript推断类型。</li>
</ul>
<h2 id="4-16-类型的兼容性"><a href="#4-16-类型的兼容性" class="headerlink" title="4.16 类型的兼容性"></a>4.16 类型的兼容性</h2><p>类型兼容性用于确定一个类型能否赋值给其他类型。如string类型与number类型不兼容，因此不能相互赋值。</p>
<h3 id="4-16-1-稳定性"><a href="#4-16-1-稳定性" class="headerlink" title="4.16.1 稳定性"></a>4.16.1 稳定性</h3><p>TypeScript类型系统设计得很方便，它允许你有一些不正确的行为。例如，任何类型都能被赋值给any，这意味着编译器允许你做任何想做的事情。</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> foo1: <span class="built_in">any</span> = <span class="number">123</span></span><br><span class="line">foo1 = <span class="string">'hello'</span></span><br></pre></td></tr></table></figure>

<h3 id="4-16-2-结构化类型的兼容性"><a href="#4-16-2-结构化类型的兼容性" class="headerlink" title="4.16.2 结构化类型的兼容性"></a>4.16.2 结构化类型的兼容性</h3><p>TypeScript对象是一种结构化的类型，这意味着只要结构匹配，名称也就无关紧要了</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">interface</span> Point &#123;</span><br><span class="line">    x: <span class="built_in">number</span>;</span><br><span class="line">    y: <span class="built_in">number</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> Point2D &#123;</span><br><span class="line">    <span class="keyword">constructor</span>(<span class="params"><span class="keyword">public</span> x: <span class="built_in">number</span>, <span class="keyword">public</span> y: <span class="built_in">number</span></span>)&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> p: Point;</span><br><span class="line">p = <span class="keyword">new</span> Point2D(<span class="number">1</span>, <span class="number">2</span>)</span><br></pre></td></tr></table></figure>

<h3 id="4-16-3-函数的兼容性"><a href="#4-16-3-函数的兼容性" class="headerlink" title="4.16.3 函数的兼容性"></a>4.16.3 函数的兼容性</h3><p>当你比较两个函数类型是否兼容时，下面是一些需要考虑的事情</p>
<ol>
<li>返回类型<br>类型系统强制源函数的返回值类型必须是目标函数返回值类型的子类型。</li>
</ol>
<p>![image-20200428105250170](/Users/liwei/Library/Application Support/typora-user-images/image-20200428105250170.png)</p>
<ol start="2">
<li><p>参数数量<br>要查看 x 是否能赋值给 y，首先看它们的参数列表，x 的每个参数必须能在 y 里找到对应类型的参数，注意的是参数的名字相同与否无所谓，只看它们的类型。</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> x = <span class="function">(<span class="params">a: <span class="built_in">number</span></span>) =&gt;</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">let</span> y = <span class="function">(<span class="params">b: <span class="built_in">number</span>, s: <span class="built_in">string</span></span>) =&gt;</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">y = x; <span class="comment">// OK</span></span><br><span class="line">x = y; <span class="comment">// Error</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>可选参数和rest参数<br>为了方便起见，可选参数（预先确定的）和rest参数（任何数量的参数）是兼容的</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> aoo = <span class="function">(<span class="params">x: <span class="built_in">number</span>, y: <span class="built_in">number</span></span>) =&gt;</span> &#123;&#125;;</span><br><span class="line"><span class="keyword">let</span> bar = <span class="function">(<span class="params">x?: <span class="built_in">number</span>, y?:<span class="built_in">number</span></span>) =&gt;</span> &#123;&#125;;</span><br><span class="line"><span class="keyword">let</span> bas = <span class="function">(<span class="params">...args: <span class="built_in">number</span>[]</span>) =&gt;</span> &#123;&#125;;</span><br><span class="line"></span><br><span class="line">aoo = bar</span><br><span class="line">bas = bar</span><br><span class="line">bas = aoo</span><br><span class="line"><span class="comment">// 可选的参数（如上面例子中的bar）与不可选的参数（如上面例子中的foo），只有在strictNullChecks为false时兼容</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>函数参数类型兼容性</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">interface</span> Event &#123;</span><br><span class="line">    timestamp: <span class="built_in">number</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">interface</span> MouseEvent <span class="keyword">extends</span> Event &#123;</span><br><span class="line">    x: <span class="built_in">number</span>;</span><br><span class="line">    y: <span class="built_in">number</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">interface</span> KeyEvent <span class="keyword">extends</span> Event&#123;</span><br><span class="line">    keyCode: <span class="built_in">number</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">enum</span> EventType &#123;</span><br><span class="line">    Mouse,</span><br><span class="line">    KeyBoard</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addEventListener</span>(<span class="params">eventType: EventType, handler: (n: Event) =&gt; <span class="built_in">void</span></span>) </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 不安全，但是常用</span></span><br><span class="line"><span class="keyword">const</span> handler = <span class="function">(<span class="params">(<span class="params">e: MouseEvent</span>) =&gt; <span class="built_in">console</span>.log(<span class="params">e.x+ ',' + e.y</span>)</span>)</span></span><br><span class="line"><span class="function"><span class="params">addEventListener</span>(<span class="params">EventType.Mouse, handler</span>) // 报错</span></span><br><span class="line"><span class="function">// 解决方案</span></span><br><span class="line"><span class="function"><span class="params">const</span> <span class="params">handler1</span> = &lt;(<span class="params">e: Event</span>) =&gt;</span> <span class="built_in">void</span>&gt;<span class="function">(<span class="params">(<span class="params">e: MouseEvent</span>) =&gt; <span class="built_in">console</span>.log(<span class="params">e.x+ ',' + e.y</span>)</span>)</span></span><br><span class="line"><span class="function"><span class="params">addEventListener</span>(<span class="params">EventType.Mouse, handler1</span>) // 报错</span></span><br><span class="line"><span class="function">// 或者</span></span><br><span class="line"><span class="function"><span class="params">const</span> <span class="params">handler2</span> = (<span class="params">(<span class="params">e: Event</span>) =&gt; <span class="built_in">console</span>.log(<span class="params">(<span class="params">&lt;MouseEvent&gt;e</span>).x+ ',' + (<span class="params">&lt;MouseEvent&gt;e</span>).y</span>)</span>)</span></span><br></pre></td></tr></table></figure>

</li>
</ol>
<h3 id="4-16-4-枚举类型的兼容性"><a href="#4-16-4-枚举类型的兼容性" class="headerlink" title="4.16.4 枚举类型的兼容性"></a>4.16.4 枚举类型的兼容性</h3><ol>
<li><p>枚举与数字类型是兼容的</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">enum</span> Status &#123;</span><br><span class="line">    Ready,</span><br><span class="line">    Waiting</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> status1 = Status.Ready</span><br><span class="line"><span class="keyword">let</span> num1 = <span class="number">0</span></span><br><span class="line">status1 = num</span><br></pre></td></tr></table></figure>
</li>
<li><p>来自不同枚举的枚举变量，被认为是不兼容的</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">enum</span> Status &#123;</span><br><span class="line">    Ready,</span><br><span class="line">    Waiting</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">enum</span> Color &#123;</span><br><span class="line">    Red,</span><br><span class="line">    Blue,</span><br><span class="line">    Green</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> status1 = Status.Ready</span><br><span class="line"><span class="keyword">let</span> color1 = Color.Blue</span><br><span class="line">status1 = color1  <span class="comment">// 报错</span></span><br></pre></td></tr></table></figure>

</li>
</ol>
<h3 id="4-16-5-类的类型兼容"><a href="#4-16-5-类的类型兼容" class="headerlink" title="4.16.5 类的类型兼容"></a>4.16.5 类的类型兼容</h3><p>只比较实例成员和方法，构造函数和静态成员不起作用。</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> Animal1 &#123;</span><br><span class="line">    <span class="keyword">static</span> feet: <span class="built_in">number</span>;</span><br><span class="line">    <span class="keyword">constructor</span>(<span class="params">name: <span class="built_in">string</span>, numFeet: <span class="built_in">number</span></span>)&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> Size &#123;</span><br><span class="line">    <span class="keyword">static</span> feet: <span class="built_in">number</span>;</span><br><span class="line">    <span class="keyword">constructor</span>(<span class="params">meters: <span class="built_in">number</span></span>)&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> a: Animal1</span><br><span class="line"><span class="keyword">let</span> s: Size = <span class="keyword">new</span> Size(<span class="number">1</span>)</span><br><span class="line">a = s  <span class="comment">// 可以赋值</span></span><br><span class="line">s = a  <span class="comment">// 可以赋值</span></span><br></pre></td></tr></table></figure>

<p>私有的和受保护的成员必须来自相同的类。</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> Animal1 &#123;</span><br><span class="line">    <span class="keyword">protected</span> feet: <span class="built_in">number</span> | <span class="literal">undefined</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> Cat <span class="keyword">extends</span> Animal1&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> animal1: Animal1;</span><br><span class="line"><span class="keyword">let</span> cat1: Cat = <span class="keyword">new</span> Cat();</span><br><span class="line">animal1 = cat1  <span class="comment">// 可以赋值</span></span><br><span class="line">cat1 = animal1 <span class="comment">// 可以赋值</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span>  Size &#123;</span><br><span class="line">    <span class="keyword">protected</span> feet: <span class="built_in">number</span> | <span class="literal">undefined</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> size: Size;</span><br><span class="line">animal1 = size <span class="comment">// 错误, 不能赋值</span></span><br><span class="line">size = animal1  <span class="comment">// 错误，不能赋值</span></span><br></pre></td></tr></table></figure>

<h3 id="4-16-6-泛型类型兼容"><a href="#4-16-6-泛型类型兼容" class="headerlink" title="4.16.6 泛型类型兼容"></a>4.16.6 泛型类型兼容</h3><p>TypeScript 类型系统基于变量的结构，仅当类型参数在被一个成员使用时，才会影响兼容性</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">interface</span> Empty&lt;T&gt; &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> x: Empty&lt;<span class="built_in">number</span>&gt;;</span><br><span class="line"><span class="keyword">let</span> y: Empty&lt;<span class="built_in">string</span>&gt;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// @ts-ignore</span></span><br><span class="line">x = y</span><br><span class="line"><span class="comment">// 泛型T因为没有被任何接口的任何成员使用，因此并不会影响到兼容性</span></span><br></pre></td></tr></table></figure>

<p>如果尚未实例化泛型参数，则在检查兼容性之前将其替换为 any：</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// @ts-ignore</span></span><br><span class="line"><span class="keyword">let</span> identity = <span class="function"><span class="keyword">function</span>&lt;<span class="title">T</span>&gt; (<span class="params">x: T</span>): <span class="title">T</span> </span>&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// @ts-ignore</span></span><br><span class="line"><span class="keyword">let</span> reverse = <span class="function"><span class="keyword">function</span>&lt;<span class="title">U</span>&gt; (<span class="params">y: U</span>): <span class="title">U</span> </span>&#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">identity = reverse <span class="comment">// (x: any) =&gt; any 类型与(y: any) =&gt; any匹配</span></span><br></pre></td></tr></table></figure>

<p>当泛型被成员使用时，它将在实例化泛型后影响兼容性</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">interface</span> Empty&lt;T&gt; &#123;</span><br><span class="line">    data: T;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> x: Empty&lt;<span class="built_in">number</span>&gt;;</span><br><span class="line"><span class="keyword">let</span> y: Empty&lt;<span class="built_in">string</span>&gt;;</span><br><span class="line"></span><br><span class="line">x = y <span class="comment">// 错误,不能赋值</span></span><br></pre></td></tr></table></figure>

<h2 id="4-17-never"><a href="#4-17-never" class="headerlink" title="4.17 never"></a>4.17 never</h2><p>Never类型是任何类型的子类型，也可以赋值给任何类型， 然而，没有类型是never的子类型或可以赋值给never类型（除了never类型本身之外），即使any也不可以赋值给never类型，通常表现为抛出异常或者无法执行到终止点（例如无限循环）。</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> x: never;</span><br><span class="line"><span class="keyword">let</span> y: <span class="built_in">number</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 运行错误，数字类型不能转为 never 类型</span></span><br><span class="line">x = <span class="number">123</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 运行正确，never 类型可以赋值给 never类型</span></span><br><span class="line">x = <span class="function">(<span class="params">(<span class="params"></span>)=&gt;&#123; <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="params">'exception'</span>)&#125;</span>)<span class="params">()</span>;</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">// 运行正确，<span class="params">never</span> 类型可以赋值给 数字类型</span></span><br><span class="line"><span class="function"><span class="params">y</span> = (<span class="params">(<span class="params"></span>)=&gt;&#123; <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="params">'exception'</span>)&#125;</span>)<span class="params">()</span>;</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">// 返回值为 <span class="params">never</span> 的函数可以是抛出异常的情况</span></span><br><span class="line"><span class="function"><span class="params">function</span> <span class="params">error</span>(<span class="params">message: <span class="built_in">string</span></span>): <span class="params">never</span> &#123;</span></span><br><span class="line"><span class="function">    <span class="params">throw</span> <span class="params">new</span> <span class="params">Error</span>(<span class="params">message</span>);</span></span><br><span class="line"><span class="function">&#125;</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">// 返回值为 <span class="params">never</span> 的函数可以是无限循环这种无法被执行到的终止点的情况</span></span><br><span class="line"><span class="function"><span class="params">function</span> <span class="params">loop</span><span class="params">()</span>: <span class="params">never</span> &#123;</span></span><br><span class="line"><span class="function">    <span class="params">while</span> (<span class="params"><span class="literal">true</span></span>) &#123;&#125;</span></span><br><span class="line"><span class="function">&#125;</span></span><br></pre></td></tr></table></figure>

<h2 id="4-18-辨析联合类型"><a href="#4-18-辨析联合类型" class="headerlink" title="4.18 辨析联合类型"></a>4.18 辨析联合类型</h2><p>当类中含有字面量成员时，我们可以用该类的属性来辨析联合类型</p>
<p>如果你使用类型保护风格的检查（即==、===、！=、！==），或者使用具有判断性的属性（在这里是kind），TypeScript将会认为你所使用的对象类型必须要具有特定的字面量，并且为你进行类型缩小。</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">interface</span> Square &#123;</span><br><span class="line">    kind: <span class="string">'square'</span>;</span><br><span class="line">    size: <span class="built_in">number</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> Rectangle &#123;</span><br><span class="line">    kind: <span class="string">'rectangle'</span>;</span><br><span class="line">    width: <span class="built_in">number</span>;</span><br><span class="line">    height: <span class="built_in">number</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> Circle &#123;</span><br><span class="line">    kind: <span class="string">'circle'</span>;</span><br><span class="line">    radius: <span class="built_in">number</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Shape = Square | Rectangle | Circle</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">area</span>(<span class="params">s: Shape</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(s.kind === <span class="string">'square'</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> s.size  * s.size</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(s.kind === <span class="string">'rectangle'</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> s.width * s.height</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(s.kind === <span class="string">'circle'</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Math</span>.PI * s.radius ** <span class="number">2</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> _exhaustiveCheck: never = s</span><br><span class="line">        <span class="keyword">return</span> _exhaustiveCheck</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">areaBySwitch</span>(<span class="params">s: Shape</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> (s.kind) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'square'</span>:</span><br><span class="line">            <span class="keyword">return</span> s.size * s.size;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'rectangle'</span>:</span><br><span class="line">            <span class="keyword">return</span> s.width * s.height;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'circle'</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">Math</span>.PI * s.radius ** <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">const</span> _exhaustiveCheck: never = s</span><br><span class="line">            <span class="keyword">return</span> _exhaustiveCheck</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="4-18-1-版本控制"><a href="#4-18-1-版本控制" class="headerlink" title="4.18.1 版本控制"></a>4.18.1 版本控制</h3><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> DTO = | &#123;</span><br><span class="line">    version: <span class="literal">undefined</span>;</span><br><span class="line">    name: <span class="built_in">string</span>;</span><br><span class="line">&#125; | &#123;</span><br><span class="line">    version: <span class="number">1</span>;</span><br><span class="line">    firstName: <span class="built_in">string</span>;</span><br><span class="line">    lastName: <span class="built_in">string</span>;</span><br><span class="line">&#125; | &#123;</span><br><span class="line">    version: <span class="number">2</span>;</span><br><span class="line">    firstName: <span class="built_in">string</span>;</span><br><span class="line">    lastName: <span class="built_in">string</span>;</span><br><span class="line">    middleName: <span class="built_in">string</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">printDTO</span>(<span class="params">dto: DTO</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(dto.version == <span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'===================================='</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(dto.name);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'===================================='</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (dto.version === <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(dto.firstName, dto.lastName);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(dto.version === <span class="number">2</span>)&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'===================================='</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(dto.firstName, dto.middleName, dto.lastName);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'===================================='</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> _exhaustiveCheck: never = dto;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="4-18-2-redux中定义ActionTypes的应用"><a href="#4-18-2-redux中定义ActionTypes的应用" class="headerlink" title="4.18.2 redux中定义ActionTypes的应用"></a>4.18.2 redux中定义ActionTypes的应用</h3><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createStore  &#125; <span class="keyword">from</span> <span class="string">'redux'</span></span><br><span class="line"><span class="keyword">type</span> ActionTypes = <span class="string">'INCREMENT'</span> | <span class="string">'DECREMENT'</span></span><br><span class="line"><span class="keyword">type</span> Action = &#123;</span><br><span class="line">    <span class="keyword">type</span>: ActionTypes</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> counter = <span class="function">(<span class="params">state = 0, action: Action</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">switch</span>(action.type)&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'INCREMENT'</span>:</span><br><span class="line">            <span class="keyword">return</span> state + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'DECREMENT'</span>:</span><br><span class="line">            <span class="keyword">return</span> state - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span> state;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> store = createStore(counter);</span><br><span class="line">store.subscribe(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(store.getState())</span><br><span class="line">&#125;)</span><br><span class="line">store.dispatch(&#123; <span class="keyword">type</span>: <span class="string">'INCREMENT'</span> &#125;)</span><br><span class="line">store.dispatch(&#123; <span class="keyword">type</span>: <span class="string">'INCREMENT'</span> &#125;)</span><br><span class="line">store.dispatch(&#123; <span class="keyword">type</span>: <span class="string">'DECREMENT'</span> &#125;)</span><br></pre></td></tr></table></figure>

<h2 id="4-19-索引签名"><a href="#4-19-索引签名" class="headerlink" title="4.19 索引签名"></a>4.19 索引签名</h2><h3 id="4-19-1-JavaScript中时候用对象作为key进行签名默认调用toString"><a href="#4-19-1-JavaScript中时候用对象作为key进行签名默认调用toString" class="headerlink" title="4.19.1 JavaScript中时候用对象作为key进行签名默认调用toString()"></a>4.19.1 JavaScript中时候用对象作为key进行签名默认调用toString()</h3><p>可以用字符串访问JavaScript中的对象（在TypeScript中也一样），并保存对其他对象的引用除字符串外，它也可以保存任意的JavaScript对象，例如一个类的实例</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line">    toString()&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'to string is called'</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> foo = &#123;&#125;</span><br><span class="line">foo[obj] = <span class="string">'hello'</span></span><br></pre></td></tr></table></figure>

<p>当你向索引签名传入一个其他对象时，JavaScript会在得到结果之前先调用toString方法。</p>
<p>只要索引位置使用了obj，toString方法都将被调用。</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line">    toString()&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'to string is called'</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> foo = &#123;&#125;</span><br><span class="line">foo[obj] = <span class="string">'hello'</span></span><br><span class="line"><span class="built_in">console</span>.log(foo[obj])</span><br></pre></td></tr></table></figure>

<p>![image-20200502141249208](/Users/liwei/Library/Application Support/typora-user-images/image-20200502141249208.png)</p>
<h3 id="4-19-2-TypeScript索引签名"><a href="#4-19-2-TypeScript索引签名" class="headerlink" title="4.19.2 TypeScript索引签名"></a>4.19.2 TypeScript索引签名</h3><p>首先，因为JavaScript在任何一个对象索引签名上都会隐式调用toString方法，而在TypeScript中它将会抛出一个错误提示</p>
<p>![image-20200502141542000](/Users/liwei/Library/Application Support/typora-user-images/image-20200502141542000.png)</p>
<p>我们必须这么做才能解决报错</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line">    toString()&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'Hello'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> foo1: <span class="built_in">any</span> = &#123;&#125;</span><br><span class="line">foo[obj.toString()] = <span class="string">'World'</span></span><br></pre></td></tr></table></figure>

<h3 id="1-声明索引签名"><a href="#1-声明索引签名" class="headerlink" title="1. 声明索引签名"></a>1. 声明索引签名</h3><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> mailBox: &#123;</span><br><span class="line">  [index: <span class="built_in">string</span>]: &#123;</span><br><span class="line">    content: <span class="built_in">string</span>;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125; = &#123;&#125;;</span><br><span class="line"></span><br><span class="line">mailBox[<span class="string">'a'</span>] = &#123;</span><br><span class="line">    content: <span class="string">'a'</span></span><br><span class="line">&#125;</span><br><span class="line">mailBox[<span class="string">'b'</span>] = &#123;</span><br><span class="line">    content: <span class="string">'b'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>索引签名的名称，如{[index：string]：{message：string}}里的index，除提高了可读性外，并没有任何意义。例如，如果有一个用户名，你可以使用{username：string}：{message：string}，这有助于下一个开发者理解你的代码。</p>
<h3 id="2-所有成员必须符合字符串索引签名"><a href="#2-所有成员必须符合字符串索引签名" class="headerlink" title="2. 所有成员必须符合字符串索引签名"></a>2. 所有成员必须符合字符串索引签名</h3><p>![image-20200502142423346](/Users/liwei/Library/Application Support/typora-user-images/image-20200502142423346.png)</p>
<h3 id="3-使用一组有限的字符串字面量"><a href="#3-使用一组有限的字符串字面量" class="headerlink" title="3. 使用一组有限的字符串字面量"></a>3. 使用一组有限的字符串字面量</h3><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> keys = <span class="string">'name'</span> | <span class="string">'age'</span> | <span class="string">'job'</span></span><br><span class="line"><span class="keyword">type</span> Index = &#123; [k <span class="keyword">in</span> keys]?: <span class="built_in">number</span> | <span class="built_in">string</span>&#125;</span><br><span class="line"><span class="keyword">const</span> obj: Index = &#123;</span><br><span class="line">    name: <span class="string">'david'</span>,</span><br><span class="line">    age: <span class="number">26</span>,</span><br><span class="line">    job: <span class="string">'frontender'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="4-同时拥有string和number类型的索引签名"><a href="#4-同时拥有string和number类型的索引签名" class="headerlink" title="4. 同时拥有string和number类型的索引签名"></a>4. 同时拥有string和number类型的索引签名</h3><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">interface</span> Obj &#123;</span><br><span class="line">    [key: <span class="built_in">string</span>]: <span class="built_in">string</span> | <span class="built_in">number</span>;</span><br><span class="line">    [index: <span class="built_in">number</span>]: <span class="built_in">string</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> obj: Obj = &#123;&#125;</span><br><span class="line">obj[<span class="string">'a'</span>] = <span class="number">3</span></span><br><span class="line">obj[<span class="number">1</span>] = <span class="string">'1'</span></span><br></pre></td></tr></table></figure>

<h3 id="5-索引签名的嵌套"><a href="#5-索引签名的嵌套" class="headerlink" title="5. 索引签名的嵌套"></a>5. 索引签名的嵌套</h3><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">interface</span> NestedCSS &#123;</span><br><span class="line">    color?: <span class="built_in">string</span>;  <span class="comment">// 在strictNullChecks = false时，索引签名可以为undefined</span></span><br><span class="line">    [selector: <span class="built_in">string</span>]: <span class="built_in">string</span> | NestedCSS;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> example: NestedCSS = &#123;</span><br><span class="line">    color: <span class="string">'red'</span>,</span><br><span class="line">    <span class="string">'.subclass'</span>: &#123;</span><br><span class="line">        color: <span class="string">'blue'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>尽量不要用这种方式把字符串索引签名与有效变量混合使用。否则，如果属性名称中有拼写错误，这个错误将不会被捕获。</p>
<p>![image-20200502143859937](/Users/liwei/Library/Application Support/typora-user-images/image-20200502143859937.png)</p>
<p>相反，我们要把索引签名分离到自己的属性里，如命名为nest，或children、subnodes等。</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">interface</span> NestedCSS &#123;</span><br><span class="line">    color?: <span class="built_in">string</span>;  <span class="comment">// 在strictNullChecks = false时，索引签名可以为undefined</span></span><br><span class="line">    nest?: &#123;</span><br><span class="line">        [selector: <span class="built_in">string</span>]: NestedCSS</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> example: NestedCSS = &#123;</span><br><span class="line">    color: <span class="string">'red'</span>,</span><br><span class="line">    nest: &#123;</span><br><span class="line">        <span class="string">'.subclass'</span>: &#123;</span><br><span class="line">            color: <span class="string">'blue'</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'.subclass1'</span>: &#123;</span><br><span class="line">            color: <span class="string">'red'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这个时候如果属性名出现拼写错误就能正常进行错误提示了</p>
<p>![image-20200502144259093](/Users/liwei/Library/Application Support/typora-user-images/image-20200502144259093.png)</p>
<h3 id="6-从索引签名中排除某些属性"><a href="#6-从索引签名中排除某些属性" class="headerlink" title="6. 从索引签名中排除某些属性"></a>6. 从索引签名中排除某些属性</h3><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> FieldState = &#123;</span><br><span class="line">    value: <span class="built_in">string</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> FormState = &#123; isValid: <span class="built_in">boolean</span> &#125; &amp; &#123; [fieldName: <span class="built_in">string</span>]: FieldState&#125;</span><br><span class="line"><span class="comment">// 尽管可以这么来排除属性声明一种TypeScript类型， 但是不能使用该类型进行对象创建</span></span><br><span class="line"><span class="keyword">const</span> form: FormState = &#123;</span><br><span class="line">    isValid: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>![image-20200502145046101](/Users/liwei/Library/Application Support/typora-user-images/image-20200502145046101.png)</p>
<h2 id="4-20-错误处理"><a href="#4-20-错误处理" class="headerlink" title="4.20 错误处理"></a>4.20 错误处理</h2><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">validate</span>(<span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">  value: <span class="built_in">number</span></span></span></span><br><span class="line"><span class="function"><span class="params"></span>): </span>&#123;</span><br><span class="line">  error?: <span class="built_in">string</span>;</span><br><span class="line">&#125; &#123;</span><br><span class="line">  <span class="keyword">if</span> (value &lt; <span class="number">0</span> || value &gt; <span class="number">100</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123; error: <span class="string">"Invalid Value"</span> &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="4-21-混合"><a href="#4-21-混合" class="headerlink" title="4.21 混合"></a>4.21 混合</h2><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义构造函数类型</span></span><br><span class="line"><span class="keyword">type</span> Constructor&lt;T = &#123;&#125;&gt; = <span class="keyword">new</span> (...args: <span class="built_in">any</span>[]) =&gt; T;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加属性的混合实例</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">TimesTamped</span>&lt;<span class="title">TBase</span> <span class="title">extends</span> <span class="title">Constructor</span>&gt;(<span class="params">Base: TBase</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">class</span> <span class="keyword">extends</span> Base &#123;</span><br><span class="line">        timestamp = <span class="built_in">Date</span>.now();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加属性和方法的混合实例</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Activatable</span>&lt;<span class="title">TBase</span> <span class="title">extends</span> <span class="title">Constructor</span>&gt;(<span class="params">Base: TBase</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">class</span> <span class="keyword">extends</span> Base &#123;</span><br><span class="line">        isActivated = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        activated()&#123;</span><br><span class="line">            <span class="keyword">this</span>.isActivated = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        deactivated()&#123;</span><br><span class="line">            <span class="keyword">this</span>.isActivated = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 简单类</span></span><br><span class="line"><span class="keyword">class</span> User &#123;</span><br><span class="line">    name = <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">constructor</span>(<span class="params">name?: <span class="built_in">string</span></span>)&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 通过混合获得有时间戳的用户</span></span><br><span class="line"><span class="keyword">const</span> TimestampUser = TimesTamped(User);</span><br><span class="line"><span class="keyword">const</span> timestampUser = <span class="keyword">new</span> TimestampUser();</span><br><span class="line"><span class="built_in">console</span>.log(timestampUser.timestamp);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 通过混合获取有时间戳并可以激活禁用的用户</span></span><br><span class="line"><span class="keyword">const</span> TimestampActivatedUser = TimesTamped(Activatable(User));</span><br><span class="line"><span class="keyword">const</span> timestampActivatedUser = <span class="keyword">new</span> TimestampActivatedUser(<span class="string">'david'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(timestampActivatedUser.name, timestampActivatedUser.timestamp)</span><br></pre></td></tr></table></figure>

<h2 id="4-22-ThisType"><a href="#4-22-ThisType" class="headerlink" title="4.22 ThisType"></a>4.22 ThisType</h2><p>通过ThisType，我们可以在对象字面量中输入this，并提供通过上下文类型控制this类型的便捷方式，它只有在–noImplicitThis的选项下才有效。</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> ObjectDescriptor&lt;D, M&gt; = &#123;</span><br><span class="line">  data?: D;</span><br><span class="line">  methods: M &amp; ThisType&lt;D &amp; M&gt;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">makeObject</span>&lt;<span class="title">D</span>, <span class="title">M</span>&gt;(<span class="params">desc: ObjectDescriptor&lt;D, M&gt;</span>): <span class="title">D</span> &amp; <span class="title">M</span> </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> data: object = desc.data || &#123;&#125;;</span><br><span class="line">  <span class="keyword">let</span> methods: object = desc.methods;</span><br><span class="line">  <span class="keyword">return</span> &#123; ...data, ...methods &#125; <span class="keyword">as</span> D &amp; M;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> obj = makeObject(&#123;</span><br><span class="line">  data: &#123; x: <span class="number">0</span>, y: <span class="number">0</span> &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    moveBy(dx: <span class="built_in">number</span>, dy: <span class="built_in">number</span>) &#123;</span><br><span class="line">      <span class="keyword">this</span>.x += dx;</span><br><span class="line">      <span class="keyword">this</span>.y += dy;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line">obj.x = <span class="number">10</span>;</span><br><span class="line">obj.y = <span class="number">20</span>;</span><br><span class="line">obj.moveBy(<span class="number">5</span>, <span class="number">5</span>);</span><br><span class="line"><span class="built_in">console</span>.log(obj.x, obj.y)</span><br></pre></td></tr></table></figure>

<h1 id="五-关于JSX"><a href="#五-关于JSX" class="headerlink" title="五.关于JSX"></a>五.关于JSX</h1><p>JSX允许用户在JavaScript中书写类似于HTML的视图代码，因此你可以这样做</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>CSS知识点整理</title>
    <url>/2020/05/16/2020-2020-05-16-CSS%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="一-基础概念"><a href="#一-基础概念" class="headerlink" title="一. 基础概念"></a>一. 基础概念</h1><h2 id="1-1-什么是CSS"><a href="#1-1-什么是CSS" class="headerlink" title="1.1 什么是CSS"></a>1.1 什么是<a href="https://www.w3.org/TR/CSS2/" target="_blank" rel="noopener">CSS</a></h2><p>层叠样式表(英文全称：Cascading Style Sheets)是一种用来表现HTML（标准通用标记语言的一个应用）或XML（标准通用标记语言的一个子集）等文件样式的计算机语言。</p>
<h2 id="1-2-语法"><a href="#1-2-语法" class="headerlink" title="1.2 语法"></a>1.2 语法</h2><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">选择器 &#123;</span><br><span class="line">	<span class="attribute">color</span>: blue;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">12</span>p;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="1-3-选择器"><a href="#1-3-选择器" class="headerlink" title="1.3 选择器"></a>1.3 选择器</h2><p>根据规则选取页面中的dom元素, 包含以下选择器分类:</p>
<table>
<thead>
<tr>
<th>.class</th>
<th>.intro</th>
<th>选择所有class=“intro”的元素</th>
<th>1</th>
</tr>
</thead>
<tbody><tr>
<td>#id</td>
<td>#firstname</td>
<td>选择所有id=“firstname”的元素</td>
<td>1</td>
</tr>
<tr>
<td>*</td>
<td>*</td>
<td>选择所有元素</td>
<td>2</td>
</tr>
<tr>
<td>element</td>
<td>p</td>
<td>选择所有元素</td>
<td>1</td>
</tr>
<tr>
<td>element,element</td>
<td>div,p</td>
<td>选择所有元素和元素</td>
<td>1</td>
</tr>
<tr>
<td>element element</td>
<td>div p</td>
<td>选择元素内的所有元素</td>
<td>1</td>
</tr>
<tr>
<td>element&gt;element</td>
<td>div&gt;p</td>
<td>选择所有父级是元素的元素</td>
<td>2</td>
</tr>
<tr>
<td>element+element</td>
<td>div+p</td>
<td>选择所有紧接着元素之后的元素</td>
<td>2</td>
</tr>
<tr>
<td>[attribute]</td>
<td>[target]</td>
<td>选择所有带有target属性元素</td>
<td>2</td>
</tr>
<tr>
<td>[attribute=value]</td>
<td>[target=-blank]</td>
<td>选择所有使用target=“-blank”的元素</td>
<td>2</td>
</tr>
<tr>
<td>[attribute~=value]</td>
<td>[title~=flower]</td>
<td>选择标题属性包含单词”flower”的所有元素</td>
<td>2</td>
</tr>
<tr>
<td>[attribute</td>
<td>=language]</td>
<td>[lang</td>
<td>=en]</td>
</tr>
<tr>
<td>:link</td>
<td>a:link</td>
<td>选择所有未访问链接</td>
<td>1</td>
</tr>
<tr>
<td>:visited</td>
<td>a:visited</td>
<td>选择所有访问过的链接</td>
<td>1</td>
</tr>
<tr>
<td>:active</td>
<td>a:active</td>
<td>选择活动链接</td>
<td>1</td>
</tr>
<tr>
<td>:hover</td>
<td>a:hover</td>
<td>选择鼠标在链接上面时</td>
<td>1</td>
</tr>
<tr>
<td>:focus</td>
<td>input:focus</td>
<td>选择具有焦点的输入元素</td>
<td>2</td>
</tr>
<tr>
<td>:first-letter</td>
<td>p:first-letter</td>
<td>选择每一个元素的第一个字母</td>
<td>1</td>
</tr>
<tr>
<td>:first-line</td>
<td>p:first-line</td>
<td>选择每一个元素的第一行</td>
<td>1</td>
</tr>
<tr>
<td>:first-child</td>
<td>p:first-child</td>
<td>指定只有当元素是其父级的第一个子级的样式。</td>
<td>2</td>
</tr>
<tr>
<td>:before</td>
<td>p:before</td>
<td>在每个元素之前插入内容</td>
<td>2</td>
</tr>
<tr>
<td>:after</td>
<td>p:after</td>
<td>在每个元素之后插入内容</td>
<td>2</td>
</tr>
<tr>
<td>:lang(language)</td>
<td>p:lang(it)</td>
<td>选择一个lang属性的起始值=“it”的所有元素</td>
<td>2</td>
</tr>
<tr>
<td>element1~element2</td>
<td>p~ul</td>
<td>选择p元素之后的每一个ul元素</td>
<td>3</td>
</tr>
<tr>
<td>[attribute^=value]</td>
<td>a[src^=“https”]</td>
<td>选择每一个src属性的值以”https”开头的元素</td>
<td>3</td>
</tr>
<tr>
<td>[attribute$=value]</td>
<td>a[src$=“.pdf”]</td>
<td>选择每一个src属性的值以”.pdf”结尾的元素</td>
<td>3</td>
</tr>
<tr>
<td>[attribute*=value]</td>
<td>a[src*=“axihe”]</td>
<td>选择每一个src属性的值包含子字符串”axihe”的元素</td>
<td>3</td>
</tr>
<tr>
<td>:first-of-type</td>
<td>p:first-of-type</td>
<td>选择每个p元素是其父级的第一个p元素</td>
<td>3</td>
</tr>
<tr>
<td>:last-of-type</td>
<td>p:last-of-type</td>
<td>选择每个p元素是其父级的最后一个p元素</td>
<td>3</td>
</tr>
<tr>
<td>:only-of-type</td>
<td>p:only-of-type</td>
<td>选择每个p元素是其父级的唯一p元素</td>
<td>3</td>
</tr>
<tr>
<td>:only-child</td>
<td>p:only-child</td>
<td>选择每个p元素是其父级的唯一子元素</td>
<td>3</td>
</tr>
<tr>
<td>:nth-child(n)</td>
<td>p:nth-child(2)</td>
<td>选择每个p元素是其父级的第二个子元素</td>
<td>3</td>
</tr>
<tr>
<td>:nth-last-child(n)</td>
<td>p:nth-last-child(2)</td>
<td>选择每个p元素的是其父级的第二个子元素，从最后一个子项计数</td>
<td>3</td>
</tr>
<tr>
<td>:nth-of-type(n)</td>
<td>p:nth-of-type(2)</td>
<td>选择每个p元素是其父级的第二个p元素</td>
<td>3</td>
</tr>
<tr>
<td>:nth-last-of-type(n)</td>
<td>p:nth-last-of-type(2)</td>
<td>选择每个p元素的是其父级的第二个p元素，从最后一个子项计数</td>
<td>3</td>
</tr>
<tr>
<td>:last-child</td>
<td>p:last-child</td>
<td>选择每个p元素是其父级的最后一个子级。</td>
<td>3</td>
</tr>
<tr>
<td>:root</td>
<td>:root</td>
<td>选择文档的根元素</td>
<td>3</td>
</tr>
<tr>
<td>:empty</td>
<td>p:empty</td>
<td>选择每个没有任何子级的p元素（包括文本节点）</td>
<td>3</td>
</tr>
<tr>
<td>:target</td>
<td>#news:target</td>
<td>选择当前活动的#news元素（包含该锚名称的点击的URL）</td>
<td>3</td>
</tr>
<tr>
<td>:enabled</td>
<td>input:enabled</td>
<td>选择每一个已启用的输入元素</td>
<td>3</td>
</tr>
<tr>
<td>:disabled</td>
<td>input:disabled</td>
<td>选择每一个禁用的输入元素</td>
<td>3</td>
</tr>
<tr>
<td>:checked</td>
<td>input:checked</td>
<td>选择每个选中的输入元素</td>
<td>3</td>
</tr>
<tr>
<td>:not(selector)</td>
<td>:not(p)</td>
<td>选择每个并非p元素的元素</td>
<td>3</td>
</tr>
<tr>
<td>::selection</td>
<td>::selection</td>
<td>匹配元素中被用户选中或处于高亮状态的部分</td>
<td>3</td>
</tr>
<tr>
<td>:out-of-range</td>
<td>:out-of-range</td>
<td>匹配值在指定区间之外的input元素</td>
<td>3</td>
</tr>
<tr>
<td>:in-range</td>
<td>:in-range</td>
<td>匹配值在指定区间之内的input元素</td>
<td>3</td>
</tr>
<tr>
<td>:read-write</td>
<td>:read-write</td>
<td>用于匹配可读及可写的元素</td>
<td>3</td>
</tr>
<tr>
<td>:read-only</td>
<td>:read-only</td>
<td>用于匹配设置 “readonly”（只读） 属性的元素</td>
<td>3</td>
</tr>
<tr>
<td>:optional</td>
<td>:optional</td>
<td>用于匹配可选的输入元素</td>
<td>3</td>
</tr>
<tr>
<td>:required</td>
<td>:required</td>
<td>用于匹配设置了 “required” 属性的元素</td>
<td>3</td>
</tr>
<tr>
<td>:valid</td>
<td>:valid</td>
<td>用于匹配输入值为合法的元素</td>
<td>3</td>
</tr>
<tr>
<td>:invalid</td>
<td>:invalid</td>
<td>用于匹配输入值为非法的元素</td>
<td>3</td>
</tr>
</tbody></table>
<h2 id="1-4-插入样式表的方法"><a href="#1-4-插入样式表的方法" class="headerlink" title="1.4 插入样式表的方法"></a>1.4 插入样式表的方法</h2><p>插入样式表的方法有三种:</p>
<ul>
<li>外部样式表(External style sheet)</li>
<li>内部样式表(Internal style sheet)</li>
<li>内联样式(Inline style)</li>
</ul>
<h2 id="1-5-样式优先级"><a href="#1-5-样式优先级" class="headerlink" title="1.5 样式优先级"></a>1.5 样式优先级</h2><p><strong>内联样式）Inline style &gt; （内部样式）Internal style sheet &gt;（外部样式）External style sheet &gt; 浏览器默认样式</strong></p>
<p>优先级逐级增加的选择器列表:</p>
<ul>
<li>通用选择器（*）</li>
<li>元素(类型)选择器</li>
<li>类选择器</li>
<li>属性选择器</li>
<li>伪类</li>
<li>ID 选择器</li>
<li>内联样式</li>
</ul>
<p>经验法则:</p>
<ul>
<li><strong>Always</strong> 要优化考虑使用样式规则的优先级来解决问题而不是 <code>!important</code></li>
<li><strong>Only</strong> 只在需要覆盖全站或外部 css（例如引用的 ExtJs 或者 YUI ）的特定页面中使用 <code>!important</code></li>
<li><strong>Never</strong> 永远不要在全站范围的 css 上使用<code>!important</code></li>
<li><strong>Never</strong> 永远不要在你的插件中使用 <code>!important</code></li>
</ul>
<p><strong>权重的计算</strong></p>
<p><img src="https://www.runoob.com/wp-content/uploads/2017/06/jc6_002_thumb.png" alt="img"></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#redP</span> <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="css">             <span class="comment">/* 权值 = 100+1=101 */</span></span></span><br><span class="line"><span class="css">             <span class="selector-tag">color</span>:<span class="selector-id">#F00</span>;  <span class="comment">/* 红色 */</span></span></span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line"><span class="css">        <span class="selector-id">#redP</span> <span class="selector-class">.red</span> <span class="selector-tag">em</span> &#123;</span></span><br><span class="line"><span class="css">             <span class="comment">/* 权值 = 100+10+1=111 */</span></span></span><br><span class="line"><span class="css">             <span class="selector-tag">color</span>:<span class="selector-id">#00F</span>; <span class="comment">/* 蓝色 */</span></span></span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line"><span class="css">        <span class="selector-id">#redP</span> <span class="selector-tag">p</span> <span class="selector-tag">span</span> <span class="selector-tag">em</span> &#123;</span></span><br><span class="line"><span class="css">             <span class="comment">/* 权值 = 100+1+1+1=103 */</span></span></span><br><span class="line"><span class="css">             <span class="selector-tag">color</span>:<span class="selector-id">#FF0</span>;<span class="comment">/*黄色*/</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"redP"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"red"</span>&gt;</span>red</span><br><span class="line">           <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">em</span>&gt;</span>em red<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>red<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="二-常用属性"><a href="#二-常用属性" class="headerlink" title="二. 常用属性"></a>二. 常用属性</h1><h2 id="2-1-background"><a href="#2-1-background" class="headerlink" title="2.1 background"></a>2.1 background</h2><p>background的值的顺序是background-color，background-image，background-repeat，background-attachment，background-position,background-size。</p>
<p>如果用background-size,一定要用/分隔</p>
<p>定义背景效果</p>
<table>
<thead>
<tr>
<th><a href="https://www.axihe.com/api/css/background/css3-pr-background.html" target="_blank" rel="noopener">background</a></th>
<th>复合属性。设置对象的背景特性。</th>
<th>1</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://www.axihe.com/api/css/background/pr-background-attachment.html" target="_blank" rel="noopener">background-attachment</a></td>
<td>设置或检索背景图像是随对象内容滚动还是固定的。必须先指定background-image属性。</td>
<td>1</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/background/pr-background-color.html" target="_blank" rel="noopener">background-color</a></td>
<td>设置或检索对象的背景颜色。</td>
<td>1</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/background/pr-background-image.html" target="_blank" rel="noopener">background-image</a></td>
<td>设置或检索对象的背景图像。</td>
<td>1</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/background/pr-background-position.html" target="_blank" rel="noopener">background-position</a></td>
<td>设置或检索对象的背景图像位置。必须先指定background-image属性。</td>
<td>1</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/background/pr-background-repeat.html" target="_blank" rel="noopener">background-repeat</a></td>
<td>设置或检索对象的背景图像如何铺排填充。必须先指定background-image属性。</td>
<td>1</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/background/css3-pr-background-clip.html" target="_blank" rel="noopener">background-clip</a></td>
<td>指定对象的背景图像向外裁剪的区域。</td>
<td>3</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/background/css3-pr-background-origin.html" target="_blank" rel="noopener">background-origin</a></td>
<td>S设置或检索对象的背景图像计算background-position时的参考原点(位置)。</td>
<td>3</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/background/css3-pr-background-size.html" target="_blank" rel="noopener">background-size</a></td>
<td>检索或设置对象的背景图像的尺寸大小。</td>
<td>3</td>
</tr>
</tbody></table>
<h2 id="2-2-文本属性"><a href="#2-2-文本属性" class="headerlink" title="2.2 文本属性"></a>2.2 文本属性</h2><table>
<thead>
<tr>
<th><a href="https://www.runoob.com/cssref/pr-text-color.html" target="_blank" rel="noopener">color</a></th>
<th>设置文本颜色</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://www.runoob.com/cssref/pr-text-direction.html" target="_blank" rel="noopener">direction</a></td>
<td>设置文本方向。</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/cssref/pr-text-letter-spacing.html" target="_blank" rel="noopener">letter-spacing</a></td>
<td>设置字符间距</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/cssref/pr-dim-line-height.html" target="_blank" rel="noopener">line-height</a></td>
<td>设置行高</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/cssref/pr-text-text-align.html" target="_blank" rel="noopener">text-align</a></td>
<td>对齐元素中的文本</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/cssref/pr-text-text-decoration.html" target="_blank" rel="noopener">text-decoration</a></td>
<td>向文本添加修饰</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/cssref/pr-text-text-indent.html" target="_blank" rel="noopener">text-indent</a></td>
<td>缩进元素中文本的首行</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/cssref/css3-pr-text-shadow.html" target="_blank" rel="noopener">text-shadow</a></td>
<td>设置文本阴影</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/cssref/pr-text-text-transform.html" target="_blank" rel="noopener">text-transform</a></td>
<td>控制元素中的字母</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/cssref/pr-text-unicode-bidi.html" target="_blank" rel="noopener">unicode-bidi</a></td>
<td>设置或返回文本是否被重写</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/cssref/pr-pos-vertical-align.html" target="_blank" rel="noopener">vertical-align</a></td>
<td>设置元素的垂直对齐</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/cssref/pr-text-white-space.html" target="_blank" rel="noopener">white-space</a></td>
<td>设置元素中空白的处理方式</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/cssref/pr-text-word-spacing.html" target="_blank" rel="noopener">word-spacing</a></td>
<td>设置字间距</td>
</tr>
</tbody></table>
<h2 id="2-3-字体Font"><a href="#2-3-字体Font" class="headerlink" title="2.3 字体Font"></a>2.3 字体Font</h2><h3 id="2-3-1-CSS字形"><a href="#2-3-1-CSS字形" class="headerlink" title="2.3.1 CSS字形"></a>2.3.1 CSS字形</h3><p><img src="https://www.runoob.com/images/serif.gif" alt="Serif vs. Sans-serif"></p>
<p>Scans-serif: 无衬线</p>
<p>Serif: 有称线</p>
<ul>
<li><strong>通用字体系列</strong> - 拥有相似外观的字体系统组合（如 “Serif” 或 “Monospace”）</li>
<li><strong>特定字体系列</strong> - 一个特定的字体系列（如 “Times” 或 “Courier”）</li>
</ul>
<table>
<thead>
<tr>
<th>Serif</th>
<th>Times New Roman Georgia</th>
<th>Serif字体中字符在行的末端拥有额外的装饰</th>
</tr>
</thead>
<tbody><tr>
<td>Sans-serif</td>
<td>Arial Verdana</td>
<td>“Sans”是指无 - 这些字体在末端没有额外的装饰</td>
</tr>
<tr>
<td>Monospace</td>
<td>Courier New Lucida Console</td>
<td>所有的<strong>等宽字符</strong>具有相同的宽度</td>
</tr>
</tbody></table>
<h3 id="2-3-2-字体系列"><a href="#2-3-2-字体系列" class="headerlink" title="2.3.2 字体系列"></a>2.3.2 字体系列</h3><p>font-family 属性设置文本的字体系列。</p>
<p>font-family 属性应该设置几个字体名称作为一种”后备”机制，如果浏览器不支持第一种字体，他将尝试下一种字体。</p>
<p><strong>注意</strong>: 如果字体系列的名称超过一个字，它必须用引号，如Font Family：”宋体”</p>
<p><code>p{font-family:&quot;Times New Roman&quot;, Times, serif;}</code></p>
<h3 id="2-3-3-字体样式"><a href="#2-3-3-字体样式" class="headerlink" title="2.3.3 字体样式"></a>2.3.3 字体样式</h3><ul>
<li>正常（normal） - 正常显示文本</li>
<li>斜体(italic) - 以斜体字显示的文字</li>
<li>倾斜的文字(oblique) - 文字向一边倾斜（和斜体非常类似，但不太支持）</li>
</ul>
<h3 id="2-3-4-字体大小"><a href="#2-3-4-字体大小" class="headerlink" title="2.3.4 字体大小"></a>2.3.4 字体大小</h3><p>绝对大小：</p>
<ul>
<li>设置一个指定大小的文本</li>
<li>不允许用户在所有浏览器中改变文本大小</li>
<li>确定了输出的物理尺寸时绝对大小很有用</li>
</ul>
<p>相对大小：</p>
<ul>
<li>相对于周围的元素来设置大小</li>
<li>允许用户在浏览器中改变文字大小</li>
</ul>
<table>
<thead>
<tr>
<th><a href="https://www.axihe.com/api/css/font/pr-font-font.html" target="_blank" rel="noopener">font</a></th>
<th>在一个声明中设置所有字体属性</th>
<th>1</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://www.axihe.com/api/css/font/pr-font-font-family.html" target="_blank" rel="noopener">font-family</a></td>
<td>规定文本的字体系列</td>
<td>1</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/font/pr-font-font-size.html" target="_blank" rel="noopener">font-size</a></td>
<td>规定文本的字体尺寸</td>
<td>1</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/font/pr-font-font-style.html" target="_blank" rel="noopener">font-style</a></td>
<td>规定文本的字体样式</td>
<td>1</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/font/pr-font-font-variant.html" target="_blank" rel="noopener">font-variant</a></td>
<td>规定文本的字体样式</td>
<td>1</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/font/pr-font-weight.html" target="_blank" rel="noopener">font-weight</a></td>
<td>规定字体的粗细</td>
<td>1</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/font/css3-pr-font-face-rule.html" target="_blank" rel="noopener">@font-face</a></td>
<td>一个规则，允许网站下载并使用其他超过”Web- safe”字体的字体</td>
<td>3</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/font/css3-pr-font-size-adjust.html" target="_blank" rel="noopener">font-size-adjust</a></td>
<td>为元素规定 aspect 值</td>
<td>3</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/font/css3-pr-font-stretch.html" target="_blank" rel="noopener">font-stretch</a></td>
<td>收缩或拉伸当前的字体系列</td>
<td>3</td>
</tr>
</tbody></table>
<h2 id="2-4-边框-Border-和-轮廓-Outline"><a href="#2-4-边框-Border-和-轮廓-Outline" class="headerlink" title="2.4 边框 (Border) 和 轮廓 (Outline)"></a>2.4 边框 (Border) 和 轮廓 (Outline)</h2><table>
<thead>
<tr>
<th><a href="https://www.axihe.com/api/css/border/pr-border.html" target="_blank" rel="noopener">border</a></th>
<th>复合属性。设置对象边框的特性。</th>
<th>1</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://www.axihe.com/api/css/border/pr-border-bottom.html" target="_blank" rel="noopener">border-bottom</a></td>
<td>复合属性。设置对象底部边框的特性。</td>
<td>1</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/border/pr-border-bottom-color.html" target="_blank" rel="noopener">border-bottom-color</a></td>
<td>设置或检索对象的底部边框颜色。</td>
<td>1</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/border/pr-border-bottom-style.html" target="_blank" rel="noopener">border-bottom-style</a></td>
<td>设置或检索对象的底部边框样式。</td>
<td>1</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/border/pr-border-bottom-width.html" target="_blank" rel="noopener">border-bottom-width</a></td>
<td>设置或检索对象的底部边框宽度。</td>
<td>1</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/border/pr-border-color.html" target="_blank" rel="noopener">border-color</a></td>
<td>置或检索对象的边框颜色。</td>
<td>1</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/border/pr-border-left.html" target="_blank" rel="noopener">border-left</a></td>
<td>复合属性。设置对象左边边框的特性。</td>
<td>1</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/border/pr-border-left-color.html" target="_blank" rel="noopener">border-left-color</a></td>
<td>设置或检索对象的左边边框颜色。</td>
<td>1</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/border/pr-border-left-style.html" target="_blank" rel="noopener">border-left-style</a></td>
<td>设置或检索对象的左边边框样式。</td>
<td>1</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/border/pr-border-left-width.html" target="_blank" rel="noopener">border-left-width</a></td>
<td>设置或检索对象的左边边框宽度。</td>
<td>1</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/border/pr-border-righ.html" target="_blank" rel="noopener">border-rig</a>ht</td>
<td>复合属性。设置对象右边边框的特性。</td>
<td>1</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/border/pr-border-right-color.html" target="_blank" rel="noopener">border-right-color</a></td>
<td>设置或检索对象的右边边框颜色。</td>
<td>1</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/border/pr-border-right-style.html" target="_blank" rel="noopener">border-right-style</a></td>
<td>设置或检索对象的右边边框样式。</td>
<td>1</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/border/pr-border-right-width.html" target="_blank" rel="noopener">border-right-width</a></td>
<td>设置或检索对象的右边边框宽度。</td>
<td>1</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/border/pr-border-style.html" target="_blank" rel="noopener">border-style</a></td>
<td>设置或检索对象的边框样式。</td>
<td>1</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/border/pr-border-top.html" target="_blank" rel="noopener">border-top</a></td>
<td>复合属性。设置对象顶部边框的特性。</td>
<td>1</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/border/pr-border-top-color.html" target="_blank" rel="noopener">border-top-color</a></td>
<td>设置或检索对象的顶部边框颜色</td>
<td>1</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/border/pr-border-top-style.html" target="_blank" rel="noopener">border-top-style</a></td>
<td>设置或检索对象的顶部边框样式。</td>
<td>1</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/border/pr-border-top-width.html" target="_blank" rel="noopener">border-top-width</a></td>
<td>设置或检索对象的顶部边框宽度。</td>
<td>1</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/border/pr-border-width.html" target="_blank" rel="noopener">border-width</a></td>
<td>设置或检索对象的边框宽度。</td>
<td>1</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/border/pr-outline.html" target="_blank" rel="noopener">outline</a></td>
<td>复合属性。设置或检索对象外的线条轮廓。</td>
<td>2</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/border/pr-outline-color.html" target="_blank" rel="noopener">outline-color</a></td>
<td>设置或检索对象外的线条轮廓的颜色。</td>
<td>2</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/border/pr-outline-style.html" target="_blank" rel="noopener">outline-style</a></td>
<td>设置或检索对象外的线条轮廓的样式。</td>
<td>2</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/border/pr-outline-width.html" target="_blank" rel="noopener">outline-width</a></td>
<td>设置或检索对象外的线条轮廓的宽度。</td>
<td>2</td>
</tr>
<tr>
<td>border-bottom-left-radius</td>
<td>设置或检索对象的左下角圆角边框。 提供 2 个参数，2 个参数以空格分隔， 每个参数允许设置 1 个参数值， 第 1 个参数表示水平半径，第 2 个参数表示垂直半径， 如第 2 个参数省略，则默认等于第 1 个参数</td>
<td>3</td>
</tr>
<tr>
<td>border-bottom-right-radius</td>
<td>设置或检索对象的右下角圆角边框。</td>
<td>3</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/border/css3-pr-border-image.html" target="_blank" rel="noopener">border-image</a></td>
<td>设置或检索对象的边框样式使用图像来填充。</td>
<td>3</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/border/css3-pr-border-image-outset.html" target="_blank" rel="noopener">border-image-outset</a></td>
<td>规定边框图像超过边框的量。</td>
<td>3</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/border/css3-pr-border-image-repeat.html" target="_blank" rel="noopener">border-image-repeat</a></td>
<td>规定图像边框是否应该被重复（repeated）、拉伸（stretched）或铺满（rounded）。</td>
<td>3</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/border/css3-pr-border-image-slice.html" target="_blank" rel="noopener">border-image-slice</a></td>
<td>规定图像边框的向内偏移。</td>
<td>3</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/border/css3-pr-border-image-source.html" target="_blank" rel="noopener">border-image-source</a></td>
<td>规定要使用的图像，代替 border-style 属性中设置的边框样式。</td>
<td>3</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/border/css3-pr-border-image-width.html" target="_blank" rel="noopener">border-image-width</a></td>
<td>规定图像边框的宽度。</td>
<td>3</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/border/css3-pr-border-radius.html" target="_blank" rel="noopener">border-radius</a></td>
<td>设置或检索对象使用圆角边框。</td>
<td>3</td>
</tr>
<tr>
<td>border-top-left-radius</td>
<td>定义左上角边框的形状。</td>
<td>3</td>
</tr>
<tr>
<td>border-top-right-radius</td>
<td>定义右上角边框的形状。</td>
<td>3</td>
</tr>
<tr>
<td>box-decoration-break</td>
<td>规定行内元素被折行</td>
<td>3</td>
</tr>
<tr>
<td>box-shadow</td>
<td>向方框添加一个或多个阴影。</td>
<td>3</td>
</tr>
</tbody></table>
<h2 id="2-5-动画属性"><a href="#2-5-动画属性" class="headerlink" title="2.5 动画属性"></a>2.5 动画属性</h2><table>
<thead>
<tr>
<th><a href="https://www.axihe.com/api/css/animation/css3-pr-animation-keyframes.html" target="_blank" rel="noopener">@keyframes</a></th>
<th>定义一个动画,@keyframes定义的动画名称用来被animation-name所使用。</th>
<th>3</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://www.axihe.com/api/css/animation/css3-pr-animation.html" target="_blank" rel="noopener">animation</a></td>
<td>复合属性。检索或设置对象所应用的动画特效。</td>
<td>3</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/animation/css3-pr-animation-name.html" target="_blank" rel="noopener">animation-name</a></td>
<td>检索或设置对象所应用的动画名称 ,必须与规则@keyframes配合使用，因为动画名称由@keyframes定义</td>
<td>3</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/animation/css3-pr-animation-duration.html" target="_blank" rel="noopener">animation-duration</a></td>
<td>检索或设置对象动画的持续时间</td>
<td>3</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/animation/css3-pr-animation-timing-function.html" target="_blank" rel="noopener">animation-timing-function</a></td>
<td>检索或设置对象动画的过渡类型</td>
<td>3</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/animation/css3-pr-animation-delay.html" target="_blank" rel="noopener">animation-delay</a></td>
<td>检索或设置对象动画的延迟时间</td>
<td>3</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/animation/css3-pr-animation-iteration-count.html" target="_blank" rel="noopener">animation-iteration-count</a></td>
<td>检索或设置对象动画的循环次数</td>
<td>3</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/animation/css3-pr-animation-direction.html" target="_blank" rel="noopener">animation-direction</a></td>
<td>检索或设置对象动画在循环中是否反向运动</td>
<td>3</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/animation/css3-pr-animation-play-state.html" target="_blank" rel="noopener">animation-play-state</a></td>
<td>检索或设置对象动画的状态</td>
<td>3</td>
</tr>
</tbody></table>
<h2 id="2-6-内边距"><a href="#2-6-内边距" class="headerlink" title="2.6 内边距"></a>2.6 内边距</h2><table>
<thead>
<tr>
<th><a href="https://www.axihe.com/api/css/padding/pr-padding.html" target="_blank" rel="noopener">padding</a></th>
<th>在一个声明中设置所有填充属性</th>
<th>1</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://www.axihe.com/api/css/padding/pr-padding-bottom.html" target="_blank" rel="noopener">padding-bottom</a></td>
<td>设置元素的底填充</td>
<td>1</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/padding/pr-padding-left.html" target="_blank" rel="noopener">padding-left</a></td>
<td>设置元素的左填充</td>
<td>1</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/padding/pr-padding-right.html" target="_blank" rel="noopener">padding-right</a></td>
<td>设置元素的右填充</td>
<td>1</td>
</tr>
<tr>
<td><a href="https://www.axihe.com/api/css/padding/pr-padding-top.html" target="_blank" rel="noopener">padding-top</a></td>
<td>设置元素的顶部填充</td>
<td>1</td>
</tr>
</tbody></table>
<h2 id="2-7-链接样式"><a href="#2-7-链接样式" class="headerlink" title="2.7 链接样式"></a>2.7 链接样式</h2><ul>
<li>a:link - 正常，未访问过的链接</li>
<li>a:visited - 用户已访问过的链接</li>
<li>a:hover - 当用户鼠标放在链接上时</li>
<li>a:active - 链接被点击的那一刻</li>
</ul>
<p>顺序规则：</p>
<ul>
<li>a:hover 必须跟在 a:link 和 a:visited后面</li>
<li>a:active 必须跟在 a:hover后面</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:link</span> &#123;<span class="attribute">color</span>:<span class="number">#000000</span>;&#125;      <span class="comment">/* 未访问链接*/</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:visited</span> &#123;<span class="attribute">color</span>:<span class="number">#00FF00</span>;&#125;  <span class="comment">/* 已访问链接 */</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;<span class="attribute">color</span>:<span class="number">#FF00FF</span>;&#125;  <span class="comment">/* 鼠标移动到链接上 */</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:active</span> &#123;<span class="attribute">color</span>:<span class="number">#0000FF</span>;&#125;  <span class="comment">/* 鼠标点击时 */</span></span><br></pre></td></tr></table></figure>

<h2 id="2-8-列表样式-ul"><a href="#2-8-列表样式-ul" class="headerlink" title="2.8 列表样式(ul)"></a>2.8 列表样式(ul)</h2><p>CSS列表属性作用如下：</p>
<ul>
<li>设置不同的列表项标记为有序列表</li>
<li>设置不同的列表项标记为无序列表</li>
<li>设置列表项标记为图像</li>
</ul>
<p>在HTML中，有两种类型的列表：</p>
<ul>
<li>无序列表 - 列表项标记用特殊图形（如小黑点、小方框等）</li>
<li>有序列表 - 列表项的标记有数字或字母</li>
</ul>
<p>使用CSS，可以列出进一步的样式，并可用图像作列表项标记。</p>
<h3 id="2-8-1-作为列表项标记的图像"><a href="#2-8-1-作为列表项标记的图像" class="headerlink" title="2.8.1 作为列表项标记的图像"></a>2.8.1 作为列表项标记的图像</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">ul</span> &#123;</span><br><span class="line">            <span class="attribute">list-style</span>: disc inside <span class="built_in">url</span>(http://img5.imgtn.bdimg.com/it/u=<span class="number">2916716554</span>,<span class="number">654971401</span>&amp;fm=<span class="number">26</span>&amp;gp=<span class="number">0</span>.jpg);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-8-2-所有的CSS列表属性"><a href="#2-8-2-所有的CSS列表属性" class="headerlink" title="2.8.2 所有的CSS列表属性"></a>2.8.2 所有的CSS列表属性</h3><table>
<thead>
<tr>
<th>list-style</th>
<th>简写属性。用于把所有用于列表的属性设置于一个声明中</th>
</tr>
</thead>
<tbody><tr>
<td>list-style-image</td>
<td>将图象设置为列表项标志。</td>
</tr>
<tr>
<td>list-style-position</td>
<td>设置列表中列表项标志的位置。</td>
</tr>
<tr>
<td>list-style-type</td>
<td>设置列表项标志的类型。</td>
</tr>
</tbody></table>
<h2 id="2-9-CSS-Table-表格"><a href="#2-9-CSS-Table-表格" class="headerlink" title="2.9 CSS Table(表格)"></a>2.9 CSS Table(表格)</h2><h3 id="2-9-1-表格边框"><a href="#2-9-1-表格边框" class="headerlink" title="2.9.1 表格边框"></a>2.9.1 表格边框</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">table</span>, <span class="selector-tag">th</span>, <span class="selector-tag">td</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-9-2-折叠边框"><a href="#2-9-2-折叠边框" class="headerlink" title="2.9.2 折叠边框"></a>2.9.2 折叠边框</h3><p>border-collapse 属性设置表格的边框是否被折叠成一个单一的边框或隔开：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">table</span>&#123;</span><br><span class="line">    <span class="attribute">border-collapse</span>:collapse;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">table</span>,<span class="selector-tag">th</span>, <span class="selector-tag">td</span>&#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-9-3-表格宽度和高度"><a href="#2-9-3-表格宽度和高度" class="headerlink" title="2.9.3  表格宽度和高度"></a>2.9.3  表格宽度和高度</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">table</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">th</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">50px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-9-4-表格文字对齐"><a href="#2-9-4-表格文字对齐" class="headerlink" title="2.9.4 表格文字对齐"></a>2.9.4 表格文字对齐</h3><p>表格中的文本对齐和垂直对齐属性。</p>
<p>text-align属性设置水平对齐方式，向左，右，或中心：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">td</span> &#123;</span><br><span class="line">    <span class="attribute">text-align</span>:right;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>垂直对齐属性设置垂直对齐，比如顶部，底部或中间：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">td</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">vertical-align</span>:bottom;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-9-5-表格填充"><a href="#2-9-5-表格填充" class="headerlink" title="2.9.5 表格填充"></a>2.9.5 表格填充</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">td</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>:<span class="number">15px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-9-6-表格颜色"><a href="#2-9-6-表格颜色" class="headerlink" title="2.9.6 表格颜色"></a>2.9.6 表格颜色</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">table</span>, <span class="selector-tag">td</span>, <span class="selector-tag">th</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attribute">border</span>:<span class="number">1px</span> solid green;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">th</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attribute">background-color</span>:green;</span><br><span class="line">    <span class="attribute">color</span>:white;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="2-10-CSS-盒子模型"><a href="#2-10-CSS-盒子模型" class="headerlink" title="2.10 CSS 盒子模型"></a>2.10 CSS 盒子模型</h2><p>在HTML中的每个element(元素)都可以看作一个矩形的盒子，矩形从内到外依次由元素的内容(content)、内边距(padding)、边框(border)、外边距(margin)组成。</p>
<p>在CSS的布局中，元素的矩形被称为”Box Model”，即盒子模型。在浏览器渲染页面时，盒子模型决定了元素的大小和位置。</p>
<p><img src="https://a.axihe.com/img/css/box-model.gif" alt="CSS box-model"></p>
<ul>
<li><strong>Margin(外边距)</strong> - 清除边框外的区域，外边距是透明的。</li>
<li><strong>Border(边框)</strong> - 围绕在内边距和内容外的边框。</li>
<li><strong>Padding(内边距)</strong> - 清除内容周围的区域，内边距是透明的。</li>
<li><strong>Content(内容)</strong> - 盒子的内容，显示文本和图像。</li>
</ul>
<h3 id="2-10-1-元素的宽度和高度"><a href="#2-10-1-元素的宽度和高度" class="headerlink" title="2.10.1 元素的宽度和高度"></a>2.10.1 元素的宽度和高度</h3><p><strong>CSS 框模型 (Box Model) 规定了元素框处理元素内容、<a href="https://www.w3school.com.cn/css/css_padding.asp" target="_blank" rel="noopener">内边距</a>、<a href="https://www.w3school.com.cn/css/css_border.asp" target="_blank" rel="noopener">边框</a> 和 <a href="https://www.w3school.com.cn/css/css_margin.asp" target="_blank" rel="noopener">外边距</a> 的方式。</strong></p>
<p> <img src="https://www.w3school.com.cn/i/ct_boxmodel.gif" alt=""></p>
<p>元素框的最内部分是实际的内容，直接包围内容的是内边距。内边距呈现了元素的背景。内边距的边缘是边框。边框以外是外边距，外边距默认是透明的，因此不会遮挡其后的任何元素。</p>
<h3 id="2-10-2-浏览器的兼容性问题"><a href="#2-10-2-浏览器的兼容性问题" class="headerlink" title="2.10.2 浏览器的兼容性问题"></a>2.10.2 浏览器的兼容性问题</h3><p>内边距、边框和外边距都是可选的，默认值是零。但是，许多元素将由用户代理样式表设置外边距和内边距。可以通过将元素的 margin 和 padding 设置为零来覆盖这些浏览器样式。这可以分别进行，也可以使用通用选择器对所有元素进行设置：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>建议不要给元素添加具有指定宽度的内边距，而是尝试将内边距或外边距添加到元素的父元素和子元素。</p>
<p>在 CSS 中，width 和 height 指的是内容区域的宽度和高度。增加内边距、边框和外边距不会影响内容区域的尺寸，但是会增加元素框的总尺寸。</p>
<p>假设框的每个边上有 10 个像素的外边距和 5 个像素的内边距。如果希望这个元素框达到 100 个像素，就需要将内容的宽度设置为 70 像素，请看下图：</p>
<p><img src="https://www.w3school.com.cn/i/ct_css_boxmodel_example.gif" alt=""></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#box</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">70px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-10-3-获取DOM元素宽高的属性"><a href="#2-10-3-获取DOM元素宽高的属性" class="headerlink" title="2.10.3 获取DOM元素宽高的属性"></a>2.10.3 获取DOM元素宽高的属性</h3><p>在DOM中，获取元素高宽有以下属性：clientWidth/clientHeight、offsetWidth/offsetHeight、scrollWidth/scrollHeight</p>
<p>clientWidth、clientHeight:</p>
<p><strong>说明</strong>：包含内边距、内容区域的宽度、高度；若含有滚动条，将会减去滚动条的宽度、高度。</p>
<p><strong>公式</strong>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">element.clientWidth &#x3D; padding-left + width + padding-right</span><br><span class="line">element.clientHeight &#x3D; padding-top + height + padding-bottom</span><br></pre></td></tr></table></figure>

<p><img src="https://images2018.cnblogs.com/blog/153475/201804/153475-20180410224639868-1759907132.png" alt=""></p>
<p>offsetWidth、offsetHeight:</p>
<p><strong>说明</strong>：包含了边框、内边距、内容区域以及滚动条等范围的宽度、高度。</p>
<p><strong>公式</strong>：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">element.offsetWidth = border-left + padding-left + width + padding-right + border-right</span><br><span class="line">element.offsetHeight = border-top + padding-top + height + padding-bottom + border-bottom</span><br></pre></td></tr></table></figure>

<p><img src="https://images2018.cnblogs.com/blog/153475/201804/153475-20180410225551052-1162485476.png" alt=""></p>
<p>scrollWidth、scrollHeight</p>
<p><strong>说明</strong>：与clientWidth、clientHeight类似(包含内边距、内容区域，但不包括滚动条)，不同的是scrollWidth、scrollHeight与元素的overflow样式属性息息相关：</p>
<p>当块级元素的内容超出元素大小时，其内容会根据overflow设定的值出现滚动条或内容溢出，scrollWidth、scrollHeight包含了这些不可见的内容区域。</p>
<p><img src="https://images2018.cnblogs.com/blog/153475/201804/153475-20180410231612061-1829861357.png" alt=""></p>
<h3 id="2-10-4-box-sizing"><a href="#2-10-4-box-sizing" class="headerlink" title="2.10.4 box-sizing"></a>2.10.4 box-sizing</h3><table>
<thead>
<tr>
<th>属性值</th>
<th>属性含义</th>
</tr>
</thead>
<tbody><tr>
<td>Content-box</td>
<td><strong>说明</strong>：表示CSS中的width和height属性的值只会应用到元素的内容区域。将采用标准模式**<em>\</em>解析计算，也是默认模式</td>
</tr>
<tr>
<td>Border-box</td>
<td>表示元素的边框和内边距的范围包含在CSS中的width、height内。将采用怪异模式进行计算</td>
</tr>
</tbody></table>
<p>注意： 两种盒子模型都不将margin计算在内</p>
<h3 id="2-10-5-jQuery中元素宽度-高度"><a href="#2-10-5-jQuery中元素宽度-高度" class="headerlink" title="2.10.5 jQuery中元素宽度(高度)"></a>2.10.5 jQuery中元素宽度(高度)</h3><p><strong>$(element).width()</strong>：获取元素content(内容)区域的宽度。若元素的含有 box-sizing: border-box ，会减去相应的padding、boder。</p>
<p><strong>$(element).innerWidth()</strong>：获取元素 content区域 + padding 的宽度。</p>
<p><strong>$(element).outerWidth()</strong>：获取元素 content区域 + padding + boder 的宽度。</p>
<p><strong>$(element).outerWidth(true)</strong>：获取元素 content区域 + padding + boder + margin 的宽度。</p>
<h2 id="2-11-CSS-margin-外边距"><a href="#2-11-CSS-margin-外边距" class="headerlink" title="2.11 CSS margin(外边距)"></a>2.11 CSS margin(外边距)</h2><table>
<thead>
<tr>
<th>margin</th>
<th>简写属性。在一个声明中设置所有外边距属性。</th>
</tr>
</thead>
<tbody><tr>
<td>margin-bottom</td>
<td>设置元素的下外边距。</td>
</tr>
<tr>
<td>margin-left</td>
<td>设置元素的左外边距。</td>
</tr>
<tr>
<td>margin-right</td>
<td>设置元素的右外边距。</td>
</tr>
<tr>
<td>margin-top</td>
<td>设置元素的上外边距。</td>
</tr>
</tbody></table>
<h3 id="2-11-1-CSS-外边距合并"><a href="#2-11-1-CSS-外边距合并" class="headerlink" title="2.11.1 CSS 外边距合并"></a>2.11.1 CSS 外边距合并</h3><p><strong>外边距合并指的是，当两个垂直外边距相遇时，它们将形成一个外边距。</strong></p>
<p><strong>合并后的外边距的高度等于两个发生合并的外边距的高度中的较大者。</strong></p>
<p><img src="https://www.w3school.com.cn/i/ct_css_margin_collapsing_example_1.gif" alt=""></p>
<p>尽管看上去有些奇怪，但是外边距甚至可以与自身发生合并。</p>
<p>假设有一个空元素，它有外边距，但是没有边框或填充。在这种情况下，上外边距与下外边距就碰到了一起，它们会发生合并：</p>
<p><img src="https://www.w3school.com.cn/i/ct_css_margin_collapsing_example_3.gif" alt=""></p>
<p>如果这个外边距遇到另一个元素的外边距，它还会发生合并：</p>
<p><img src="https://www.w3school.com.cn/i/ct_css_margin_collapsing_example_4.gif" alt=""></p>
<p>这就是一系列的段落元素占用空间非常小的原因，因为它们的所有外边距都合并到一起，形成了一个小的外边距。外边距合并初看上去可能有点奇怪，但是实际上，它是有意义的。以由几个段落组成的典型文本页面为例。第一个段落上面的空间等于段落的上外边距。如果没有外边距合并，后续所有段落之间的外边距都将是相邻上外边距和下外边距的和。这意味着段落之间的空间是页面顶部的两倍。如果发生外边距合并，段落之间的上外边距和下外边距就合并在一起，这样各处的距离就一致了。</p>
<p>只有普通文档流中块框的垂直外边距才会发生外边距合并。行内框、浮动框或绝对定位之间的外边距不会合并。</p>
<h3 id="2-11-2-BFC"><a href="#2-11-2-BFC" class="headerlink" title="2.11.2 BFC"></a>2.11.2 BFC</h3><p><strong>Box：</strong>CSS渲染的时候是以Box作为渲染的基本单位。Box的类型由元素的类型和display属性决定，box的类型分为block-level box 和inline-level box（不包括css3的时候）。不同类型的box参与不同类型的formatting context布局。</p>
<p>所谓的 Formatting context(格式化上下文), 它是 W3C CSS2.1 规范中的一个概念。</p>
<blockquote>
<p>它是页面中的一块渲染区域，并且有一套渲染规则.<br>它决定了其子元素将如何定位，以及和其他元素的关系和相互作用。</p>
</blockquote>
<p>而 Block Formatting Contexts (BFC，块级格式化上下文)，就是 一个块级元素 的渲染显示规则。通俗一点讲，可以把 BFC 理解为一个封闭的大箱子，，容器里面的子元素不会影响到外面的元素，反之也如此。</p>
<p>  1 内部的盒子会在垂直方向，一个个地放置；<br>  2 BFC是页面上的一个隔离的独立容器；<br>  3 属于<strong>同一个BFC</strong>的 两个<strong>相邻Box</strong>的 <strong>上下margin</strong>会发生重叠 ；<br>  4 计算BFC的高度时，浮动元素也参与计算<br>  5 每个元素的左边，与包含的盒子的左边相接触，即使存在浮动也是如此；<br>  6 BFC的区域不会与float重叠；</p>
<p>那么如何触发 BFC呢？只要元素满足下面任一条件即可触发 BFC 特性：</p>
<ul>
<li>根元素</li>
<li>float属性不为none</li>
<li>position为absolute或fixed</li>
<li>display为inline-block, table-cell, table-caption, flex, inline-flex</li>
<li>overflow不为visible</li>
</ul>
<h3 id="2-11-3-BFC的特性及应用"><a href="#2-11-3-BFC的特性及应用" class="headerlink" title="2.11.3 BFC的特性及应用"></a>2.11.3 BFC的特性及应用</h3><ol>
<li>同一个 BFC下外边距 会发生折叠</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line">.p &#123;  </span><br><span class="line">  width:200px;  </span><br><span class="line">  height:50px;  </span><br><span class="line">  margin:50px 0;  </span><br><span class="line">  background-color:red;  </span><br><span class="line">&#125;  </span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">   &lt;div class&#x3D;&quot;p&quot;&gt;&lt;&#x2F;div&gt;  </span><br><span class="line">   &lt;div class&#x3D;&quot;p&quot;&gt;&lt;&#x2F;div&gt;  </span><br><span class="line">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>

<p><img src="http://img.blog.csdn.net/20170610233517221?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTQ3MjgzMA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p>
<p>盒子垂直方向的距离由margin决定，<br>属于 同一个BFC的 + 两个相邻Box的 + 上下margin 会发生重叠<br>上文的例子 之所以发生外边距折叠，是因为他们 同属于 body这个根元素， 所以我们需要让 它们 <strong>不属于同一个BFC</strong>，就能避免外边距折叠：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"p"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>  </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrap"</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"p"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">wrap</span> &#123;  </span><br><span class="line">  <span class="attribute">overflow</span>:hidden;  </span><br><span class="line"></span><br><span class="line">.p &#123;  </span><br><span class="line">  <span class="selector-tag">width</span><span class="selector-pseudo">:200px</span>;  </span><br><span class="line">  <span class="selector-tag">height</span><span class="selector-pseudo">:50px</span>;  </span><br><span class="line">  <span class="selector-tag">margin</span><span class="selector-pseudo">:50px</span> 0;  </span><br><span class="line">  <span class="selector-tag">background-color</span><span class="selector-pseudo">:red</span>; </span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<p><img src="http://img.blog.csdn.net/20170610233600987?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTQ3MjgzMA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p>
<ol start="2">
<li><p>BFC可以包含浮动的元素（清除浮动）</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"border: 1px solid #000;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"width: 50px; height: 50px; background: #eee;</span></span></span><br><span class="line"><span class="tag"><span class="string">               float: left;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>外层的div会无法包含 内部浮动的div，效果见下图：</p>
<p><img src="https://pic1.zhimg.com/80/v2-371eb702274af831df909b2c55d6a14b_hd.jpg" alt=""></p>
<p>但如果我们 触发外部容器的BFC，根据BFC规范中的第4条：<strong>计算BFC的高度时，浮动元素也参与计算</strong>，那么外部div容器就可以包裹着浮动元素，所以只要把代码修改如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div style&#x3D;&quot;border: 1px solid #000;overflow: hidden&quot;&gt;</span><br><span class="line">    &lt;div style&#x3D;&quot;width: 100px;height: 100px;background: #eee;float: left;&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>

<p>就可以完成以下效果：<br><img src="https://pic2.zhimg.com/80/v2-cc8365db5c9cc5ca003ce9afe88592e7_hd.jpg" alt="tu2"></p>
<ol start="3">
<li><p>BFC可以阻止元素被浮动元素覆盖</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"aside"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>  </span><br><span class="line"></span><br><span class="line">div &#123;  </span><br><span class="line">  width:300px;  </span><br><span class="line">&#125;  </span><br><span class="line">.aside &#123;  </span><br><span class="line">  width: 100px;  </span><br><span class="line">  height: 150px;  </span><br><span class="line">  float: left;  </span><br><span class="line">  background: black;  </span><br><span class="line">&#125;  </span><br><span class="line">.main &#123;  </span><br><span class="line">  height:200px;  </span><br><span class="line">  background-color:red;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="http://img.blog.csdn.net/20170610232433253?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTQ3MjgzMA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p>
</li>
</ol>
</li>
</ol>
<p>之所以是这样，是因为上文的 规则5： <strong>每个元素的左边，与包含的盒子的左边相接触，即使存在浮动也是如此；</strong></p>
<p>所以要想改变效果，使其互补干扰，就得利用规则6 ：BFC的区域不会与float重叠，<br>让 `` 也能触发BFC的性质，即：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.main &#123;  </span><br><span class="line">  overflow:hidden;  </span><br><span class="line">  height:200px;  </span><br><span class="line">  background-color:red;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>通过这种方法，就能 用来实现 两列的自适应布局。</p>
<h3 id="2-13-4-IFC"><a href="#2-13-4-IFC" class="headerlink" title="2.13.4 IFC"></a>2.13.4 IFC</h3><p>Inline Formatting Contexts，也就是“内联格式化上下文”。</p>
<h4 id="符合以下任一条件即会生成一个IFC"><a href="#符合以下任一条件即会生成一个IFC" class="headerlink" title="符合以下任一条件即会生成一个IFC"></a>符合以下任一条件即会生成一个IFC</h4><ul>
<li>块级元素中仅包含内联级别元素</li>
</ul>
<p>形成条件非常简单，需要注意的是当IFC中有块级元素插入时，会产生两个匿名块将父元素分割开来，产生两个IFC，这里不做过多介绍。</p>
<h4 id="IFC布局规则"><a href="#IFC布局规则" class="headerlink" title="IFC布局规则"></a>IFC布局规则</h4><ul>
<li>子元素水平方向横向排列，并且垂直方向起点为元素顶部。</li>
<li>子元素只会计算横向样式空间，【padding、border、margin】，垂直方向样式空间不会被计算，【padding、border、margin】。</li>
<li>在垂直方向上，子元素会以不同形式来对齐（vertical-align）</li>
<li>能把在一行上的框都完全包含进去的一个矩形区域，被称为该行的行框（line box）。行框的宽度是由包含块（containing box）和与其中的浮动来决定。</li>
<li>IFC中的“line box”一般左右边贴紧其包含块，但float元素会优先排列。</li>
<li>IFC中的“line box”高度由 CSS 行高计算规则来确定，同个IFC下的多个line box高度可能会不同。</li>
<li>当 inline-level boxes的总宽度少于包含它们的line box时，其水平渲染规则由 text-align 属性值来决定。</li>
<li>当一个“inline box”超过父元素的宽度时，它会被分割成多个boxes，这些 oxes 分布在多个“line box”中。如果子元素未设置强制换行的情况下，“inline box”将不可被分割，将会溢出父元素。</li>
</ul>
<h2 id="2-12-CSS-padding（填充）"><a href="#2-12-CSS-padding（填充）" class="headerlink" title="2.12 CSS padding（填充）"></a>2.12 CSS padding（填充）</h2><table>
<thead>
<tr>
<th>padding</th>
<th>使用简写属性设置在一个声明中的所有填充属性</th>
</tr>
</thead>
<tbody><tr>
<td>padding-bottom</td>
<td>设置元素的底部填充</td>
</tr>
<tr>
<td>padding-left</td>
<td>设置元素的左部填充</td>
</tr>
<tr>
<td>padding-right</td>
<td>设置元素的右部填充</td>
</tr>
<tr>
<td>padding-top</td>
<td>设置元素的顶部填充</td>
</tr>
</tbody></table>
<h2 id="2-13-CSS-尺寸-Dimension"><a href="#2-13-CSS-尺寸-Dimension" class="headerlink" title="2.13 CSS 尺寸 (Dimension)"></a>2.13 CSS 尺寸 (Dimension)</h2><table>
<thead>
<tr>
<th>height</th>
<th>设置元素的高度。</th>
</tr>
</thead>
<tbody><tr>
<td>line-height</td>
<td>设置行高。</td>
</tr>
<tr>
<td>max-height</td>
<td>设置元素的最大高度。</td>
</tr>
<tr>
<td>max-width</td>
<td>设置元素的最大宽度。</td>
</tr>
<tr>
<td>min-height</td>
<td>设置元素的最小高度。</td>
</tr>
<tr>
<td>min-width</td>
<td>设置元素的最小宽度。</td>
</tr>
<tr>
<td>width</td>
<td>设置元素的宽度。</td>
</tr>
</tbody></table>
<h2 id="2-14-CSS-Display-显示-与-Visibility（可见性）"><a href="#2-14-CSS-Display-显示-与-Visibility（可见性）" class="headerlink" title="2.14 CSS Display(显示) 与 Visibility（可见性）"></a>2.14 CSS Display(显示) 与 Visibility（可见性）</h2><p>隐藏一个元素可以通过把display属性设置为”none”，或把visibility属性设置为”hidden”。但是请注意，这两种方法会产生不同的结果。</p>
<p>visibility:hidden可以隐藏某个元素，但隐藏的元素仍需占用与未隐藏之前一样的空间。也就是说，该元素虽然被隐藏了，但仍然会影响布局。</p>
<h2 id="2-15-CSS里常见的块级元素和行内元素"><a href="#2-15-CSS里常见的块级元素和行内元素" class="headerlink" title="2.15 CSS里常见的块级元素和行内元素"></a>2.15 CSS里常见的块级元素和行内元素</h2><p>根据CSS规范的规定，每一个网页元素都有一个<strong>display</strong>属性，用于确定该元素的类型，每一个元素都有默认的display属性值，比如div元素，它的默认display属性值为“block”，成为“块级”元素(block-level)；而span元素的默认display属性值为“inline”，称为“行内”元素。<br>div这样的<strong>块级元素</strong>，就会自动占据一定矩形空间，可以通过设置高度、宽度、内外边距等属性，来调整的这个矩形的样子；与之相反，像“span”“a”这样的行内元素，则没有自己的独立空间，它是依附于其他块级元素存在的，因此，对行内元素设置高度、宽度、内外边距等属性，都是无效的。</p>
<p><strong>内联元素（行内元素）内联元素(inline element)</strong></p>
<ul>
<li>a - 锚点</li>
<li>abbr - 缩写</li>
<li>acronym - 首字</li>
<li>b - 粗体(不推荐)</li>
<li>bdo - bidi override</li>
<li>big - 大字体</li>
<li>br - 换行</li>
<li>cite - 引用</li>
<li>code - 计算机代码(在引用源码的时候需要)</li>
<li>dfn - 定义字段</li>
<li>em - 强调</li>
<li>font - 字体设定(不推荐)</li>
<li>i - 斜体</li>
<li>img - 图片</li>
<li>input - 输入框</li>
<li>kbd - 定义键盘文本</li>
<li>label - 表格标签</li>
<li>q - 短引用</li>
<li>s - 中划线(不推荐)</li>
<li>samp - 定义范例计算机代码</li>
<li>select - 项目选择</li>
<li>small - 小字体文本</li>
<li>span - 常用内联容器，定义文本内区块</li>
<li>strike - 中划线</li>
<li>strong - 粗体强调</li>
<li>sub - 下标</li>
<li>sup - 上标</li>
<li>textarea - 多行文本输入框</li>
<li>tt - 电传文本</li>
<li>u - 下划线</li>
<li>var - 定义变量</li>
</ul>
<p><strong>块元素(block element)</strong></p>
<ul>
<li>address - 地址</li>
<li>blockquote - 块引用</li>
<li>center - 举中对齐块</li>
<li>dir - 目录列表</li>
<li>div - 常用块级容易，也是css layout的主要标签</li>
<li>dl - 定义列表</li>
<li>fieldset - form控制组</li>
<li>form - 交互表单</li>
<li>h1 - 大标题</li>
<li>h2 - 副标题</li>
<li>h3 - 3级标题</li>
<li>h4 - 4级标题</li>
<li>h5 - 5级标题</li>
<li>h6 - 6级标题</li>
<li>hr - 水平分隔线</li>
<li>isindex - input prompt</li>
<li>menu - 菜单列表</li>
<li>noframes - frames可选内容，（对于不支持frame的浏览器显示此区块内容</li>
<li>noscript - ）可选脚本内容（对于不支持script的浏览器显示此内容）</li>
<li>ol - 排序表单</li>
<li>p - 段落</li>
<li>pre - 格式化文本</li>
<li>table - 表格</li>
<li>ul - 非排序列表</li>
</ul>
<p><strong>可变元素<br>可变元素为根据上下文语境决定该元素为块元素或者内联元素。</strong></p>
<ul>
<li>applet - java applet</li>
<li>button - 按钮</li>
<li>del - 删除文本</li>
<li>iframe - inline frame</li>
<li>ins - 插入的文本</li>
<li>map - 图片区块(map)</li>
<li>object - object对象</li>
<li>script - 客户端脚本</li>
</ul>
<h2 id="2-16-CSS-Position-定位"><a href="#2-16-CSS-Position-定位" class="headerlink" title="2.16 CSS Position(定位)"></a>2.16 CSS Position(定位)</h2><h3 id="2-16-1-定位类型"><a href="#2-16-1-定位类型" class="headerlink" title="2.16.1 定位类型"></a>2.16.1 定位类型</h3><p>position 属性的五个值：</p>
<ul>
<li><p>static HTML 元素的默认值，即没有定位，遵循正常的文档流对象。</p>
<p>静态定位的元素不会受到 top, bottom, left, right影响。</p>
</li>
<li><p>relative   相对定位元素的定位是相对其正常位置。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">h2</span><span class="selector-class">.pos_left</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attribute">position</span>:relative;</span><br><span class="line">    <span class="attribute">left</span>:-<span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">h2</span><span class="selector-class">.pos_right</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attribute">position</span>:relative;</span><br><span class="line">    <span class="attribute">left</span>:<span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>fixed 元素的位置相对于浏览器窗口是固定位置。即使窗口是滚动的它也不会移动： Fixed 定位在 IE7 和 IE8 下需要描述 !DOCTYPE 才能支持。Fixed定位使元素的位置与文档流无关，因此不占据空间。Fixed定位的元素和其他元素重叠。</p>
</li>
<li><p>absolute <strong>设置为绝对定位的元素框从文档流完全删除，并相对于其包含块定位，包含块可能是文档中的另一个元素或者是初始包含块。元素原先在正常文档流中所占的空间会关闭，就好像该元素原来不存在一样。元素定位后生成一个块级框，而不论原来它在正常流中生成何种类型的框。</strong></p>
</li>
<li><p>sticky 粘性定位 依赖于用户的滚动，在 <strong>position:relative</strong> 与 <strong>position:fixed</strong> 定位之间切换。</p>
<p>它的行为就像 <strong>position:relative;</strong> 而当页面滚动超出目标区域时，它的表现就像 <strong>position:fixed;</strong>，它会固定在目标位置。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"./test.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">header</span>&gt;</span>header<span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">li</span>&gt;</span>nav-item1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">li</span>&gt;</span>nav-item2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">li</span>&gt;</span>nav-item3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">li</span>&gt;</span>nav-item4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">li</span>&gt;</span>nav-item5<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">main</span>&gt;</span></span><br><span class="line">       main content </span><br><span class="line">   <span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">header</span> &#123;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> dashed <span class="number">#555</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">nav</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: sticky;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">ul</span> &#123;</span><br><span class="line">    <span class="attribute">list-style</span>: disc;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">background-color</span>: antiquewhite;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">main</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">800px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: aqua;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<p>元素可以使用的顶部top，底部bottom，左侧left和右侧right属性定位。然而，这些属性无法工作，除非是先设定position属性。他们也有不同的工作方式，这取决于定位方法。</p>
<h3 id="2-16-2-z-index"><a href="#2-16-2-z-index" class="headerlink" title="2.16.2 z-index"></a>2.16.2 z-index</h3><p>元素的定位与文档流无关，所以它们可以覆盖页面上的其它元素</p>
<p>z-index属性指定了一个元素的堆叠顺序（哪个元素应该放在前面，或后面）</p>
<p>一个元素可以有正数或负数的堆叠顺序</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>:absolute;</span><br><span class="line">    <span class="attribute">left</span>:<span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">top</span>:<span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">z-index</span>:-<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-16-3-所有的CSS定位属性"><a href="#2-16-3-所有的CSS定位属性" class="headerlink" title="2.16.3 所有的CSS定位属性"></a>2.16.3 <strong>所有的CSS定位属性</strong></h3><table>
<thead>
<tr>
<th>bottom</th>
<th>定义了定位元素下外边距 边界与其包含块下边界之间的偏移。</th>
<th>autolength % inherit</th>
<th>2</th>
</tr>
</thead>
<tbody><tr>
<td>clip</td>
<td>剪辑一个绝对定位的元素</td>
<td>shape autoinherit</td>
<td>2</td>
</tr>
<tr>
<td>cursor</td>
<td>显示光标移动到指定的类型</td>
<td>url auto crosshair default pointer move e-resize ne-resize nw-resize n-resize se-resize sw-resize s-resize w-resize text wait help</td>
<td>2</td>
</tr>
<tr>
<td>left</td>
<td>定义了定位元素左外边距边界 与其包含块左边界之间的偏移。</td>
<td>auto length % inherit</td>
<td>2</td>
</tr>
<tr>
<td>overflow</td>
<td>设置当元素的内容溢出 其区域时发生的事情。</td>
<td>auto hidden scroll visible inherit</td>
<td>2</td>
</tr>
<tr>
<td>overflow-y</td>
<td>指定如何处理顶部/底部 边缘的内容溢出元素的内容区域</td>
<td>auto hidden scroll visible no-display no-content</td>
<td>2</td>
</tr>
<tr>
<td>overflow-x</td>
<td>指定如何处理右边/左边 边缘的内容溢出元素的内容区域</td>
<td>auto hidden scroll visible no-display no-content</td>
<td>2</td>
</tr>
<tr>
<td>position</td>
<td>指定元素的定位类型</td>
<td>absolute fixed relative static inherit</td>
<td>2</td>
</tr>
<tr>
<td>right</td>
<td>定义了定位元素右外边距边界 与其包含块右边界之间的偏移。</td>
<td>auto length % inherit</td>
<td>2</td>
</tr>
<tr>
<td>top</td>
<td>定义了一个定位元素的上外边距 边界与其包含块上边界之间的偏移。</td>
<td>auto length % inherit</td>
<td>2</td>
</tr>
<tr>
<td>z-index</td>
<td>设置元素的堆叠顺序</td>
<td>number auto inherit</td>
<td>2</td>
</tr>
</tbody></table>
<h2 id="2-17-CSS-Overflow"><a href="#2-17-CSS-Overflow" class="headerlink" title="2.17 CSS Overflow"></a>2.17 CSS Overflow</h2><p>CSS overflow 属性用于控制内容溢出元素框时显示的方式。</p>
<p>overflow属性有以下值：</p>
<table>
<thead>
<tr>
<th>visible</th>
<th>默认值。内容不会被修剪，会呈现在元素框之外。</th>
</tr>
</thead>
<tbody><tr>
<td>hidden</td>
<td>内容会被修剪，并且其余内容是不可见的。</td>
</tr>
<tr>
<td>scroll</td>
<td>内容会被修剪，但是浏览器会显示滚动条以便查看其余的内容。</td>
</tr>
<tr>
<td>auto</td>
<td>如果内容被修剪，则浏览器会显示滚动条以便查看其余的内容。</td>
</tr>
<tr>
<td>inherit</td>
<td>规定应该从父元素继承 overflow 属性的值。</td>
</tr>
</tbody></table>
<p><strong>注意:</strong>overflow 属性只工作于指定高度的块元素上。</p>
<h2 id="2-18-CSS-Float（浮动）"><a href="#2-18-CSS-Float（浮动）" class="headerlink" title="2.18 CSS Float（浮动）"></a>2.18 CSS Float（浮动）</h2><p><strong>浮动的框可以向左或向右移动，直到它的外边缘碰到包含框或另一个浮动框的边框为止。</strong></p>
<p><strong>由于浮动框不在文档的普通流中，所以文档的普通流中的块框表现得就像浮动框不存在一样。</strong></p>
<p><strong>float语法：</strong><br>float : none | left |right</p>
<p><strong>参数值：</strong><br>none : 　对象不浮动<br><strong>left :</strong> 对象浮在左边<br><strong>right :</strong> 对象浮在右边</p>
<p>一个例子</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"divcss5"</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"divcss5_left"</span>&gt;</span>布局靠左浮动<span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"divcss5_right"</span>&gt;</span>布局靠右浮动<span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"clear"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- html注释：清除float产生浮动 --&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.divcss5</span>&#123; <span class="attribute">width</span>:<span class="number">400px</span>;<span class="attribute">padding</span>:<span class="number">10px</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#F00</span>&#125; </span><br><span class="line"><span class="selector-class">.divcss5_left</span>&#123; <span class="attribute">float</span>:left;<span class="attribute">width</span>:<span class="number">150px</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#00F</span>;<span class="attribute">height</span>:<span class="number">50px</span>&#125; </span><br><span class="line"><span class="selector-class">.divcss5_right</span>&#123; <span class="attribute">float</span>:right;<span class="attribute">width</span>:<span class="number">150px</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#00F</span>;<span class="attribute">height</span>:<span class="number">50px</span>&#125; </span><br><span class="line"><span class="selector-class">.clear</span>&#123; <span class="attribute">clear</span>:both&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-18-1-清除浮动的方法（最常用的4种）"><a href="#2-18-1-清除浮动的方法（最常用的4种）" class="headerlink" title="2.18.1 清除浮动的方法（最常用的4种）"></a>2.18.1 清除浮动的方法（最常用的4种）</h3><ol>
<li>额外标签法（在最后一个浮动标签后，新加一个标签，给其设置clear：both；）（不推荐）</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.fahter</span>&#123;</span></span><br><span class="line">        width: 400px;</span><br><span class="line">        border: 1px solid deeppink;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.big</span>&#123;</span></span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 200px;</span><br><span class="line">        background: darkorange;</span><br><span class="line">        float: left;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.small</span>&#123;</span></span><br><span class="line">        width: 120px;</span><br><span class="line">        height: 120px;</span><br><span class="line">        background: darkmagenta;</span><br><span class="line">        float: left;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.footer</span>&#123;</span></span><br><span class="line">        width: 900px;</span><br><span class="line">        height: 100px;</span><br><span class="line">        background: darkslateblue;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.clear</span>&#123;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">clear</span><span class="selector-pseudo">:both</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"fahter"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"big"</span>&gt;</span>big<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"small"</span>&gt;</span>small<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"clear"</span>&gt;</span>额外标签法<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"footer"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>优点：通俗易懂，方便</p>
<p>缺点：添加无意义标签，语义化差</p>
<p>不建议使用。</p>
<ol start="2">
<li>父级添加overflow属性（父元素添加overflow:hidden）（不推荐）</li>
</ol>
<p>通过触发BFC方式，实现清除浮动</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">.fahter&#123;</span><br><span class="line">    width: 400px;</span><br><span class="line">    border: 1px solid deeppink;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>优点：代码简洁</p>
<p>缺点：内容增多的时候容易造成不会自动换行导致内容被隐藏掉，无法显示要溢出的元素</p>
<p>不推荐使用</p>
<ol start="3">
<li>使用after伪元素清除浮动（推荐使用）</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">    .clearfix:after&#123;/*伪元素是行内元素 正常浏览器清除浮动方法*/</span><br><span class="line">        content: "";</span><br><span class="line">        display: block;</span><br><span class="line">        height: 0;</span><br><span class="line">        clear:both;</span><br><span class="line">        visibility: hidden;</span><br><span class="line">    &#125;</span><br><span class="line">    .clearfix&#123;</span><br><span class="line">        *zoom: 1;/*ie6清除浮动的方式 *号只有IE6-IE7执行，其他浏览器不执行*/</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"fahter clearfix"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"big"</span>&gt;</span>big<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"small"</span>&gt;</span>small<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;div class="clear"&gt;额外标签法&lt;/div&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"footer"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>优点：符合闭合浮动思想，结构语义化正确</p>
<p>缺点：ie6-7不支持伪元素：after，使用zoom:1触发hasLayout.</p>
<p>推荐使用</p>
<ol start="4">
<li><p>使用before和after双伪元素清除浮动</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">    .clearfix:after,.clearfix:before&#123;</span><br><span class="line">       content: "";</span><br><span class="line">       display: table;</span><br><span class="line">   &#125;</span><br><span class="line">   .clearfix:after&#123;</span><br><span class="line">       clear: both;</span><br><span class="line">   &#125;</span><br><span class="line">   .clearfix&#123;</span><br><span class="line">       *zoom: 1;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"fahter clearfix"</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"big"</span>&gt;</span>big<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"small"</span>&gt;</span>small<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"footer"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>优点：代码更简洁</p>
<p>缺点：用zoom:1触发hasLayout.</p>
<p>推荐使用</p>
</li>
</ol>
<h2 id="2-19-CSS-居中"><a href="#2-19-CSS-居中" class="headerlink" title="2.19 CSS 居中"></a>2.19 CSS 居中</h2><ol>
<li><p><strong>text-align:center方式</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">　　<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"center_text"</span>&gt;</span></span><br><span class="line">    123</span><br><span class="line">　　<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">center</span>&#123;</span><br><span class="line">　　<span class="attribute">text-align</span>:center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">center_text</span>&#123;</span><br><span class="line">　　<span class="attribute">display</span>:inline-block;</span><br><span class="line">　　<span class="attribute">width</span>:<span class="number">500px</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这种方式可以水平居中块级元素中的行内元素，如inline，inline-block；</p>
<p>但是如果用来居中块级元素中的块级元素时，如div中的div，一旦内层的div有自己的宽度，这种方法就会失效。只能让里面div的文字等内容居中，而div仍然是左对齐的。</p>
</li>
<li><p><strong>margin:0 auto方式</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">　　<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"center_text"</span>&gt;</span></span><br><span class="line">    我是块级元素，我是块级元素，我给自己设了display：block</span><br><span class="line">　　<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">center_text</span>&#123;</span><br><span class="line">　　<span class="attribute">display</span>:block;</span><br><span class="line">　　<span class="attribute">width</span>:<span class="number">500px</span>;</span><br><span class="line">    margin：0 auto；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这种对齐方式要求内部元素(.content_text)是块级元素，并且不能脱离文档流（如设置position:absolute）,否则无效。</p>
</li>
<li><p><strong>脱离文档流的居中方式</strong>。<br> 这种通常应用在自定义弹框当中，把背景层设置成透明灰色，内容居中显示在最前面。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"mask"</span>&gt;</span></span><br><span class="line">　　<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span>　　　　我是要居中的板块</span><br><span class="line">　　<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.mask</span>&#123;</span><br><span class="line">　　<span class="attribute">display</span>: block;</span><br><span class="line">　　<span class="attribute">position</span>: fixed;</span><br><span class="line">　　<span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">　　<span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">　　<span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">　　<span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">　　<span class="attribute">background</span>: <span class="number">#000</span>;</span><br><span class="line">　　<span class="attribute">filter</span>: <span class="built_in">alpha</span>(opacity=<span class="number">30</span>);</span><br><span class="line">　　<span class="attribute">-ms-filter</span>: <span class="string">"alpha(opacity=30)"</span>;</span><br><span class="line">　　<span class="attribute">opacity</span>: .<span class="number">3</span>;</span><br><span class="line">　　<span class="attribute">z-index</span>: <span class="number">10000</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.center</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">_position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">666px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: -<span class="number">333px</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: -<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">10001</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">2px</span> <span class="number">2px</span> <span class="number">4px</span> <span class="number">#A0A0A0</span>, -<span class="number">2px</span> -<span class="number">2px</span> <span class="number">4px</span> <span class="number">#A0A0A0</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://images2015.cnblogs.com/blog/686372/201612/686372-20161204153957881-866313590.png" alt="">这种居中方式，把内部div设置宽高之后，再设置top、left各为50%，设置完之后，这里是按照左端居中的，接着我们使用负边距的方式调整，将margin-top设置为负的高度的一半，margin-left设置为负的宽度的一半，就可以居中了。</p>
<p>这种方式还有一种居中方法就是设置margin：-（内部div高度的一半） auto；这用就不用设置left的值了。</p>
<ol start="4">
<li><p><strong>display:table-cell</strong><br>display:table-cell配合width，text-align:center,vertical-align:middle<code>让大小不固定元素垂直居中,这个方式将要对其的元素设置成为一个td，</code>float、``absolute等属性都会影响它的实现，不响应margin属性;</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: table;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">background-color</span>: aqua;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: table-cell;</span><br><span class="line">    <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



</li>
</ol>
</li>
</ol>
<ol start="5">
<li><p><strong>垂直居中</strong><br>行内元素的垂直居中把height和line-height的值设置成一样的即可。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">　　<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"center_text"</span>&gt;</span></span><br><span class="line">　　　　我是要居中的内容　　</span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">center</span> &#123;</span><br><span class="line">　　height：40px;</span><br><span class="line">　　<span class="selector-tag">line-heigth</span>: 40<span class="selector-tag">px</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>使用css3的translate水平垂直居中元素</strong> </p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">　　<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"center_text"</span>&gt;</span></span><br><span class="line">　　　　我是要居中的内容　</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.center</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">500px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.center_text</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>, -<span class="number">50%</span>);</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">600px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这种方式将脱离文档流的元素，设置top：50%，left：50%，然后使用transform来向左向上偏移半个内元素的宽和高。</p>
</li>
<li><p><strong>使用css3计算的方式居中元素calc</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">　　<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"center_text"</span>&gt;</span></span><br><span class="line">　　　　我是要居中的内容</span><br><span class="line">	  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.center</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">1000px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.center_text</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="built_in">calc</span>(<span class="number">50%</span> - <span class="number">50px</span>);</span><br><span class="line">    <span class="attribute">left</span>: <span class="built_in">calc</span>(<span class="number">50%</span> - <span class="number">150px</span>);</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



</li>
</ol>
<h2 id="2-20-CSS-伪类"><a href="#2-20-CSS-伪类" class="headerlink" title="2.20 CSS 伪类"></a>2.20 CSS 伪类</h2><p>CSS伪类是用来添加一些选择器的特殊效果。</p>
<p>语法</p>
<p><code>selector:pseudo-class {property:value;}</code></p>
<p>CSS类也可以使用伪类：</p>
<p><code>selector.class:pseudo-class {property:value;}</code></p>
<h3 id="2-20-1-anchor伪类"><a href="#2-20-1-anchor伪类" class="headerlink" title="2.20.1 anchor伪类"></a>2.20.1 anchor伪类</h3><p>在支持 CSS 的浏览器中，链接的不同状态都可以以不同的方式显示</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a:link &#123;color:#FF0000;&#125; &#x2F;* 未访问的链接 *&#x2F;</span><br><span class="line">a:visited &#123;color:#00FF00;&#125; &#x2F;* 已访问的链接 *&#x2F;</span><br><span class="line">a:hover &#123;color:#FF00FF;&#125; &#x2F;* 鼠标划过链接 *&#x2F;</span><br><span class="line">a:active &#123;color:#0000FF;&#125; &#x2F;* 已选中的链接 *&#x2F;</span><br></pre></td></tr></table></figure>

<p><strong>注意：</strong> 在CSS定义中，a:hover 必须被置于 a:link 和 a:visited 之后，才是有效的。</p>
<p><strong>注意：</strong> 在 CSS 定义中，a:active 必须被置于 a:hover 之后，才是有效的。</p>
<p><strong>注意：</strong>伪类的名称不区分大小写。</p>
<h3 id="2-20-2-伪类和CSS类"><a href="#2-20-2-伪类和CSS类" class="headerlink" title="2.20.2 伪类和CSS类"></a>2.20.2 伪类和CSS类</h3><p>伪类可以与 CSS 类配合使用：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">a.red:visited &#123;color:#FF0000;&#125;</span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"red"</span> <span class="attr">href</span>=<span class="string">"css-syntax.html"</span>&gt;</span>CSS 语法<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-20-3-CSS-first-child-伪类"><a href="#2-20-3-CSS-first-child-伪类" class="headerlink" title="2.20.3 CSS :first-child 伪类"></a>2.20.3 CSS :first-child 伪类</h3><p>您可以使用 :first-child 伪类来选择父元素的第一个子元素。</p>
<blockquote>
<p>注意：在IE8的之前版本必须声明&lt;!DOCTYPE&gt; ，这样 :first-child 才能生效。</p>
</blockquote>
<p><code>匹配第一个 &lt;p&gt; 元素</code></p>
<p>在下面的例子中，选择器匹配作为任何元素的第一个子元素的 <p> 元素：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">:first-child</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>匹配所有 &lt;p&gt; 元素中的第一个 &lt;i&gt; 元素</code></p>
<p>在下面的例子中，选择相匹配的所有 <p>元素的第一个 <i> 元素：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &gt; <span class="selector-tag">i</span><span class="selector-pseudo">:first-child</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>:blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>匹配所有作为第一个子元素的 &lt;p&gt; 元素中的所有 &lt;i&gt; 元素</code></p>
<p>在下面的例子中，选择器匹配所有作为元素的第一个子元素的 <p> 元素中的所有 <i> 元素：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">:first-child</span> <span class="selector-tag">i</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>:blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>CSS - :lang 伪类</p>
<p>:lang 伪类使你有能力为不同的语言定义特殊的规则</p>
<p><strong>注意</strong>：IE8必须声明 &lt;!DOCTYPE&gt;才能支持;lang伪类。</p>
<p>在下面的例子中，:lang 类为属性值为 no 的q元素定义引号的类型：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">q</span><span class="selector-pseudo">:lang(no)</span> &#123;<span class="attribute">quotes</span>: <span class="string">"~"</span> <span class="string">"~"</span>;&#125;</span><br></pre></td></tr></table></figure>



<p><strong>所有CSS伪类/元素</strong></p>
<table>
<thead>
<tr>
<th>:checked</th>
<th>input:checked</th>
<th>选择所有选中的表单元素</th>
</tr>
</thead>
<tbody><tr>
<td>:disabled</td>
<td>input:disabled</td>
<td>选择所有禁用的表单元素</td>
</tr>
<tr>
<td>:empty</td>
<td>p:empty</td>
<td>选择所有没有子元素的p元素</td>
</tr>
<tr>
<td>:enabled</td>
<td>input:enabled</td>
<td>选择所有启用的表单元素</td>
</tr>
<tr>
<td>:first-of-type</td>
<td>p:first-of-type</td>
<td>选择的每个 p 元素是其父元素的第一个 p 元素</td>
</tr>
<tr>
<td>:in-range</td>
<td>input:in-range</td>
<td>选择元素指定范围内的值</td>
</tr>
<tr>
<td>:invalid</td>
<td>input:invalid</td>
<td>选择所有无效的元素</td>
</tr>
<tr>
<td>:last-child</td>
<td>p:last-child</td>
<td>选择所有p元素的最后一个子元素</td>
</tr>
<tr>
<td>:last-of-type</td>
<td>p:last-of-type</td>
<td>选择每个p元素是其母元素的最后一个p元素</td>
</tr>
<tr>
<td>:not(selector)</td>
<td>:not(p)</td>
<td>选择所有p以外的元素</td>
</tr>
<tr>
<td>:nth-child(n)</td>
<td>p:nth-child(2)</td>
<td>选择所有 p 元素的父元素的第二个子元素</td>
</tr>
<tr>
<td>:nth-last-child(n)</td>
<td>p:nth-last-child(2)</td>
<td>选择所有p元素倒数的第二个子元素</td>
</tr>
<tr>
<td>:nth-last-of-type(n)</td>
<td>p:nth-last-of-type(2)</td>
<td>选择所有p元素倒数的第二个为p的子元素</td>
</tr>
<tr>
<td>:nth-of-type(n)</td>
<td>p:nth-of-type(2)</td>
<td>选择所有p元素第二个为p的子元素</td>
</tr>
<tr>
<td>:only-of-type</td>
<td>p:only-of-type</td>
<td>选择所有仅有一个子元素为p的元素</td>
</tr>
<tr>
<td>:only-child</td>
<td>p:only-child</td>
<td>选择所有仅有一个子元素的p元素</td>
</tr>
<tr>
<td>:optional</td>
<td>input:optional</td>
<td>选择没有”required”的元素属性</td>
</tr>
<tr>
<td>:out-of-range</td>
<td>input:out-of-range</td>
<td>选择指定范围以外的值的元素属性</td>
</tr>
<tr>
<td>:read-only</td>
<td>input:read-only</td>
<td>选择只读属性的元素属性</td>
</tr>
<tr>
<td>:read-write</td>
<td>input:read-write</td>
<td>选择没有只读属性的元素属性</td>
</tr>
<tr>
<td>:required</td>
<td>input:required</td>
<td>选择有”required”属性指定的元素属性</td>
</tr>
<tr>
<td>:root</td>
<td>root</td>
<td>选择文档的根元素</td>
</tr>
<tr>
<td>:target</td>
<td>#news:target</td>
<td>选择当前活动#news元素(点击URL包含锚的名字)</td>
</tr>
<tr>
<td>:valid</td>
<td>input:valid</td>
<td>选择所有有效值的属性</td>
</tr>
<tr>
<td>:link</td>
<td>a:link</td>
<td>选择所有未访问链接</td>
</tr>
<tr>
<td>:visited</td>
<td>a:visited</td>
<td>选择所有访问过的链接</td>
</tr>
<tr>
<td>:active</td>
<td>a:active</td>
<td>选择正在活动链接</td>
</tr>
<tr>
<td>:hover</td>
<td>a:hover</td>
<td>把鼠标放在链接上的状态</td>
</tr>
<tr>
<td>:focus</td>
<td>input:focus</td>
<td>选择元素输入后具有焦点</td>
</tr>
<tr>
<td>:first-letter</td>
<td>p:first-letter</td>
<td>选择每个元素的第一个字母</td>
</tr>
<tr>
<td>:first-line</td>
<td>p:first-line</td>
<td>选择每个元素的第一行</td>
</tr>
<tr>
<td>:first-child</td>
<td>p:first-child</td>
<td>选择器匹配属于任意元素的第一个子元素的元素</td>
</tr>
<tr>
<td>:before</td>
<td>p:before</td>
<td>在每个元素之前插入内容</td>
</tr>
<tr>
<td>:after</td>
<td>p:after</td>
<td>在每个元素之后插入内容</td>
</tr>
<tr>
<td>:lang(language)</td>
<td>p:lang(it)</td>
<td>为元素的lang属性选择一个开始值</td>
</tr>
</tbody></table>
<h2 id="2-21-CSS-伪元素"><a href="#2-21-CSS-伪元素" class="headerlink" title="2.21 CSS 伪元素"></a>2.21 CSS 伪元素</h2><p>CSS伪元素是用来添加一些选择器的特殊效果。</p>
<p><strong>伪元素的语法：</strong></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">selector</span><span class="selector-pseudo">:pseudo-element</span> &#123;<span class="attribute">property</span>:value;&#125;</span><br></pre></td></tr></table></figure>

<p><strong>CSS类也可以使用伪元素：</strong></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">selector</span><span class="selector-class">.class</span><span class="selector-pseudo">:pseudo-element</span> &#123;<span class="attribute">property</span>:value;&#125;</span><br></pre></td></tr></table></figure>

<p><strong>:first-line 伪元素</strong></p>
<p>“first-line” 伪元素用于向文本的首行设置特殊样式。</p>
<p>在下面的例子中，浏览器会根据 “first-line” 伪元素中的样式对 p 元素的第一行文本进行格式化：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">:first-line</span> &#123;    <span class="attribute">color</span>:<span class="number">#ff0000</span>;    <span class="attribute">font-variant</span>:small-caps;&#125;</span><br></pre></td></tr></table></figure>

<p><strong>注意：</strong>“first-line” 伪元素只能用于块级元素。</p>
<p><strong>注意：</strong> 下面的属性可应用于 “first-line” 伪元素：</p>
<ul>
<li>font properties</li>
<li>color properties </li>
<li>background properties</li>
<li>word-spacing</li>
<li>letter-spacing</li>
<li>text-decoration</li>
<li>vertical-align</li>
<li>text-transform</li>
<li>line-height</li>
<li>clear</li>
</ul>
<p><strong>:first-letter 伪元素</strong></p>
<p>“first-letter” 伪元素用于向文本的首字母设置特殊样式：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">:first-letter</span> &#123;    <span class="attribute">color</span>:<span class="number">#ff0000</span>;    <span class="attribute">font-size</span>:xx-large;&#125;</span><br></pre></td></tr></table></figure>

<p><strong>注意：</strong> “first-letter” 伪元素只能用于块级元素。</p>
<p><strong>注意：</strong> 下面的属性可应用于 “first-letter” 伪元素： </p>
<ul>
<li>font properties</li>
<li>color properties </li>
<li>background properties</li>
<li>margin properties</li>
<li>padding properties</li>
<li>border properties</li>
<li>text-decoration</li>
<li>vertical-align (only if “float” is “none”)</li>
<li>text-transform</li>
<li>line-height</li>
<li>float</li>
<li>clear</li>
</ul>
<p><strong>伪元素和CSS类</strong></p>
<p>伪元素可以结合CSS类： </p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">p.article:first-letter &#123;color:#ff0000;&#125;&lt;p class="article"&gt;文章段落&lt;/p&gt;</span><br></pre></td></tr></table></figure>

<p>上面的例子会使所有 class 为 article 的段落的首字母变为红色。</p>
<p><strong>多个伪元素</strong></p>
<p>可以结合多个伪元素来使用。</p>
<p>在下面的例子中，段落的第一个字母将显示为红色，其字体大小为 xx-large。第一行中的其余文本将为蓝色，并以小型大写字母显示。</p>
<p>段落中的其余文本将以默认字体大小和颜色来显示：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">:first-letter</span>&#123;    </span><br><span class="line">  <span class="attribute">color</span>:<span class="number">#ff0000</span>;    </span><br><span class="line">  <span class="attribute">font-size</span>:xx-large;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">:first-line</span> &#123;    </span><br><span class="line">  <span class="attribute">color</span>:<span class="number">#0000ff</span>;    </span><br><span class="line">  <span class="attribute">font-variant</span>:small-caps;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>CSS - :before 伪元素</strong></p>
<p>“:before” 伪元素可以在元素的内容前面插入新内容。</p>
<p>下面的例子在每个 <h1>元素前面插入一幅图片：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">h1</span><span class="selector-pseudo">:before</span> &#123; </span><br><span class="line"> <span class="attribute">content</span>:<span class="built_in">url</span>(smiley.gif);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>CSS - :after 伪元素</strong></p>
<p>“:after” 伪元素可以在元素的内容之后插入新内容。</p>
<p>下面的例子在每个 <h1> 元素后面插入一幅图片：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">h1</span><span class="selector-pseudo">:after</span> &#123; </span><br><span class="line">  <span class="attribute">content</span>:<span class="built_in">url</span>(smiley.gif);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>所有CSS伪类/元素</strong></p>
<table>
<thead>
<tr>
<th align="left">选择器</th>
<th align="left">示例</th>
<th align="left">示例说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left">:link</td>
<td align="left">a:link</td>
<td align="left">选择所有未访问链接</td>
</tr>
<tr>
<td align="left">:visited</td>
<td align="left">a:visited</td>
<td align="left">选择所有访问过的链接</td>
</tr>
<tr>
<td align="left">:active</td>
<td align="left">a:active</td>
<td align="left">选择正在活动链接</td>
</tr>
<tr>
<td align="left">:hover</td>
<td align="left">a:hover</td>
<td align="left">把鼠标放在链接上的状态</td>
</tr>
<tr>
<td align="left">:focus</td>
<td align="left">input:focus</td>
<td align="left">选择元素输入后具有焦点</td>
</tr>
<tr>
<td align="left">:first-letter</td>
<td align="left">p:first-letter</td>
<td align="left">选择每个元素的第一个字母</td>
</tr>
<tr>
<td align="left">:first-line</td>
<td align="left">p:first-line</td>
<td align="left">选择每个元素的第一行</td>
</tr>
<tr>
<td align="left">:first-child</td>
<td align="left">p:first-child</td>
<td align="left">选择器匹配属于任意元素的第一个子元素的 &lt;]p&gt; 元素</td>
</tr>
<tr>
<td align="left">:before</td>
<td align="left">p:before</td>
<td align="left">在每个元素之前插入内容</td>
</tr>
<tr>
<td align="left">:after</td>
<td align="left">p:after</td>
<td align="left">在每个元素之后插入内容</td>
</tr>
<tr>
<td align="left">:lang(language)</td>
<td align="left">p:lang(it)</td>
<td align="left">为元素的lang属性选择一个开始值</td>
</tr>
</tbody></table>
<h2 id="2-22-CSS-导航栏"><a href="#2-22-CSS-导航栏" class="headerlink" title="2.22  CSS 导航栏"></a>2.22  CSS 导航栏</h2><p>作为标准的HTML基础一个导航栏是必须的</p>
<p>。在我们的例子中我们将建立一个标准的HTML列表导航栏。</p>
<p>导航条基本上是一个链接列表，所以使用 <ul> 和 <li>元素非常有意义：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#home"</span>&gt;</span>主页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#news"</span>&gt;</span>新闻<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#contact"</span>&gt;</span>联系<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#about"</span>&gt;</span>关于<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>现在，让我们从列表中删除边距和填充：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">ul</span> &#123;</span><br><span class="line">    <span class="attribute">list-style-type</span>: none;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>例子解析：</p>
<ul>
<li>list-style-type:none - 移除列表前小标志。一个导航栏并不需要列表标记</li>
<li>移除浏览器的默认设置将边距和填充设置为0</li>
</ul>
<p>上面的例子中的代码是垂直和水平导航栏使用的标准代码。</p>
<h3 id="2-22-1-垂直导航栏"><a href="#2-22-1-垂直导航栏" class="headerlink" title="2.22.1 垂直导航栏"></a>2.22.1 垂直导航栏</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"./test.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"vertical"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>技术01<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>技术02<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>技术03<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>技术04<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>技术05<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>技术06<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>技术07<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>技术08<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>技术09<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>技术10<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>技术11<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>技术12<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>技术13<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>技术14<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>技术15<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>技术16<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>技术17<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>技术18<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>技术19<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>技术20<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">html</span>,</span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">ul</span><span class="selector-class">.vertical</span> &#123;</span><br><span class="line">    <span class="attribute">list-style-type</span>: none;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">25%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: auto;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f1f1f1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">ul</span><span class="selector-class">.vertical</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block; </span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#000</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">8px</span> <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">ul</span><span class="selector-class">.vertical</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#555</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">ul</span><span class="selector-class">.vertical</span> <span class="selector-tag">li</span><span class="selector-pseudo">:last-child</span> &#123;</span><br><span class="line">    <span class="attribute">border-bottom</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">ul</span><span class="selector-class">.vertical</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#555</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.active</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#4CAF50</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-22-2-水平导航栏"><a href="#2-22-2-水平导航栏" class="headerlink" title="2.22.2 水平导航栏"></a>2.22.2 水平导航栏</h3><p>有两种方法创建横向导航栏。使用<strong>内联(inline)</strong>或<strong>浮动(float)</strong>的列表项。</p>
<p>这两种方法都很好，但如果你想导航链接具有相同的大小，你必须使用浮动的方法。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        * &#123;</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">        &#125;</span><br><span class="line">        html,</span><br><span class="line">        body &#123;</span><br><span class="line">            height: 100%;</span><br><span class="line">            overflow: auto;</span><br><span class="line">        &#125;</span><br><span class="line">        ul &#123;</span><br><span class="line">            list-style-type: none;</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#333</span>;</span></span><br><span class="line">            overflow: hidden;</span><br><span class="line">            width: 100%;</span><br><span class="line">            position: fixed;</span><br><span class="line">            top: 0;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ul li &#123;</span><br><span class="line">            float: left;</span><br><span class="line"><span class="css">            <span class="selector-tag">border-right</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#bbb</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:last-child</span> &#123;</span></span><br><span class="line">            border-right: none;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ul li a &#123;</span><br><span class="line">            display: block;</span><br><span class="line">            height: 60px;</span><br><span class="line">            box-sizing: border-box;</span><br><span class="line">            padding: 0 16px;</span><br><span class="line">            line-height: 60px;</span><br><span class="line">            color: white;</span><br><span class="line">            text-decoration: none;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.content</span> &#123;</span></span><br><span class="line">            height: 2000px;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#bbb</span>;</span></span><br><span class="line">            margin-top: 60px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.active</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#4caf54</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>导航项01<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>导航项02<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>导航项03<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>导航项04<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">style</span>=<span class="string">"float: right;"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"active"</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>导航项05<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">    content</span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="2-23-CSS-下拉菜单"><a href="#2-23-CSS-下拉菜单" class="headerlink" title="2.23 CSS 下拉菜单"></a>2.23 CSS 下拉菜单</h2><p>使用 CSS 创建一个鼠标移动上去后显示下拉菜单的效果。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.dropdown</span> &#123;</span></span><br><span class="line">            position: relative;</span><br><span class="line">            display: inline-block;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.dropdown</span> <span class="selector-class">.dropdown-content</span> &#123;</span></span><br><span class="line">            visibility: collapse;</span><br><span class="line">            position: absolute;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#f9f9f9</span>;</span></span><br><span class="line">            width: 100%;</span><br><span class="line"><span class="css">            <span class="selector-tag">box-shadow</span>: 0<span class="selector-tag">px</span> 8<span class="selector-tag">px</span> 16<span class="selector-tag">px</span> 0<span class="selector-tag">px</span> <span class="selector-tag">rgba</span>(0, 0, 0, <span class="selector-class">.2</span>);</span></span><br><span class="line">            text-align: center;</span><br><span class="line">            z-index: 1;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.dropdown</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.dropdown-content</span> &#123;</span></span><br><span class="line">            visibility: visible;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.dropdown</span> <span class="selector-class">.dropdown-content</span> <span class="selector-tag">ul</span> &#123;</span></span><br><span class="line">            list-style-type: none;</span><br><span class="line">            padding: 0;</span><br><span class="line">            margin: 0;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.dropdown</span> <span class="selector-class">.dropdown-content</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line">            cursor: pointer;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.dropdown</span> <span class="selector-class">.dropdown-content</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line">            color: blue;</span><br><span class="line">            text-decoration: underline;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.addEventListener(<span class="string">'DOMContentLoaded'</span>, () =&gt; &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> lis = <span class="built_in">document</span>.getElementsByTagName(<span class="string">'li'</span>)</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">for</span> (<span class="keyword">const</span> li of lis) &#123;</span></span><br><span class="line"><span class="actionscript">                li.addEventListener(<span class="string">'click'</span>, () =&gt; &#123;</span></span><br><span class="line">                    alert(li.textContent)</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"dropdown"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span>&gt;</span>悬浮我<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"dropdown-content"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>item1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>item2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>item3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>item4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>item5<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>item6<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="2-24-CSS-提示工具-Tooltip"><a href="#2-24-CSS-提示工具-Tooltip" class="headerlink" title="2.24 CSS 提示工具(Tooltip)"></a>2.24 CSS 提示工具(Tooltip)</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        body &#123;</span><br><span class="line">            padding: 60px;</span><br><span class="line">        &#125;</span><br><span class="line">        div &#123;</span><br><span class="line">            margin: 20px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="comment">/* Tooltip 容器 */</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.tooltip</span> &#123;</span></span><br><span class="line">            position: relative;</span><br><span class="line">            display: inline-block;</span><br><span class="line"><span class="css">            <span class="selector-tag">border-bottom</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">dotted</span> <span class="selector-tag">black</span>; <span class="comment">/* 悬停元素上显示点线 */</span></span></span><br><span class="line">        &#125;</span><br><span class="line">         </span><br><span class="line"><span class="css">        <span class="comment">/* Tooltip 文本 */</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.tooltip</span> <span class="selector-class">.tooltiptext</span> &#123;</span></span><br><span class="line">            visibility: hidden;</span><br><span class="line">            width: 120px;</span><br><span class="line">            background-color: black;</span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line">            text-align: center;</span><br><span class="line">            padding: 5px 0;</span><br><span class="line">            border-radius: 6px;</span><br><span class="line">         </span><br><span class="line"><span class="css">            <span class="comment">/* 定位 */</span></span></span><br><span class="line">            position: absolute;</span><br><span class="line">            z-index: 1;</span><br><span class="line">        &#125;</span><br><span class="line">         </span><br><span class="line"><span class="css">        <span class="comment">/* 鼠标移动上去后显示提示框 */</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.tooltip</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.tooltiptext</span> &#123;</span></span><br><span class="line">            visibility: visible;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.tooltip</span><span class="selector-class">.right</span> <span class="selector-class">.tooltiptext</span> &#123;</span></span><br><span class="line">            top: -5px;</span><br><span class="line">            left: 105%; </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.tooltip</span><span class="selector-class">.left</span> <span class="selector-class">.tooltiptext</span> &#123;</span></span><br><span class="line">            top: -5px;</span><br><span class="line">            right: 105%; </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.tooltip</span><span class="selector-class">.top</span> <span class="selector-class">.tooltiptext</span> &#123;</span></span><br><span class="line">            width: 120px;</span><br><span class="line">            bottom: 100%;</span><br><span class="line">            left: 50%; </span><br><span class="line"><span class="css">            <span class="selector-tag">margin-left</span>: <span class="selector-tag">-60px</span>; <span class="comment">/* 使用一半宽度 (120/2 = 60) 来居中提示工具 */</span></span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.tooltip</span><span class="selector-class">.bottom</span> <span class="selector-class">.tooltiptext</span> &#123;</span></span><br><span class="line">            width: 120px;</span><br><span class="line">            top: 100%;</span><br><span class="line">            left: 50%; </span><br><span class="line"><span class="css">            <span class="selector-tag">margin-left</span>: <span class="selector-tag">-60px</span>; <span class="comment">/* 使用一半宽度 (120/2 = 60) 来居中提示工具 */</span></span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="comment">/* 顶部提示框/底部箭头 */</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.tooltip</span><span class="selector-class">.top</span> <span class="selector-class">.tooltiptext</span><span class="selector-pseudo">::after</span> &#123;</span></span><br><span class="line">            content: " ";</span><br><span class="line">            position: absolute;</span><br><span class="line"><span class="css">            <span class="selector-tag">top</span>: 100%; <span class="comment">/* 提示工具底部 */</span></span></span><br><span class="line">            left: 50%;</span><br><span class="line">            margin-left: -5px;</span><br><span class="line">            border-width: 5px;</span><br><span class="line">            border-style: solid;</span><br><span class="line">            border-color: black transparent transparent transparent;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="comment">/* 底部提示框/顶部箭头 */</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.tooltip</span><span class="selector-class">.bottom</span> <span class="selector-class">.tooltiptext</span><span class="selector-pseudo">::after</span> &#123;</span></span><br><span class="line">            content: " ";</span><br><span class="line">            position: absolute;</span><br><span class="line"><span class="css">            <span class="selector-tag">bottom</span>: 100%;  <span class="comment">/* 提示工具头部 */</span></span></span><br><span class="line">            left: 50%;</span><br><span class="line">            margin-left: -5px;</span><br><span class="line">            border-width: 5px;</span><br><span class="line">            border-style: solid;</span><br><span class="line">            border-color: transparent transparent black transparent;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="comment">/* 右侧提示框/左侧箭头 */</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.tooltip</span><span class="selector-class">.right</span> <span class="selector-class">.tooltiptext</span><span class="selector-pseudo">::after</span> &#123;</span></span><br><span class="line">            content: " ";</span><br><span class="line">            position: absolute;</span><br><span class="line">            right: 100%;</span><br><span class="line">            top: 50%;</span><br><span class="line">            margin-top: -5px;</span><br><span class="line">            border-width: 5px;</span><br><span class="line">            border-style: solid;</span><br><span class="line">            border-color: transparent black transparent transparent;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="comment">/*  左侧提示框/右侧箭头 */</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.tooltip</span><span class="selector-class">.left</span> <span class="selector-class">.tooltiptext</span><span class="selector-pseudo">::after</span> &#123;</span></span><br><span class="line">            content: " ";</span><br><span class="line">            position: absolute;</span><br><span class="line">            top: 50%;</span><br><span class="line"><span class="css">            <span class="selector-tag">left</span>: 100%; <span class="comment">/* 提示工具右侧 */</span></span></span><br><span class="line">            margin-top: -5px;</span><br><span class="line">            border-width: 5px;</span><br><span class="line">            border-style: solid;</span><br><span class="line">            border-color: transparent transparent transparent black;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.tooltip</span> <span class="selector-class">.tooltiptext</span> &#123;</span></span><br><span class="line">            opacity: 0;</span><br><span class="line">            transition: opacity 1s;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.tooltip</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.tooltiptext</span> &#123;</span></span><br><span class="line">            opacity: 1;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tooltip top"</span>&gt;</span>顶部提示框</span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"tooltiptext"</span>&gt;</span>提示文本<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tooltip bottom"</span>&gt;</span>底部提示框</span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"tooltiptext"</span>&gt;</span>提示文本<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tooltip right"</span>&gt;</span>右侧提示框</span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"tooltiptext"</span>&gt;</span>提示文本<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tooltip left"</span>&gt;</span>左侧提示框</span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"tooltiptext"</span>&gt;</span>提示文本<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="2-25-CSS-图像透明-不透明"><a href="#2-25-CSS-图像透明-不透明" class="headerlink" title="2.25 CSS 图像透明/不透明"></a>2.25 CSS 图像透明/不透明</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        img &#123;</span><br><span class="line"><span class="css">            <span class="selector-tag">opacity</span>: 0<span class="selector-class">.5</span>;</span></span><br><span class="line">            filter: alpha(opacity=50); /*for ie8 and earlier*/</span><br><span class="line">            border-radius: 5px;</span><br><span class="line">            transition: ease opacity 1s;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-tag">img</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line">            opacity: 1;</span><br><span class="line">            filter: alpha(opacity=100); /*for ie8 and earlier*/</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">figure</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">figcaption</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>带有透明效果的图片<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">figcaption</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://dss2.bdstatic.com/70cFvnSh_Q1YnxGkpoWK1HF6hhy/it/u=3252521864,872614242&amp;fm=26&amp;gp=0.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">figure</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="2-26-CSS-精灵图-雪碧图"><a href="#2-26-CSS-精灵图-雪碧图" class="headerlink" title="2.26 CSS 精灵图/雪碧图"></a>2.26 CSS 精灵图/雪碧图</h2><p>精灵图/雪碧图就是图像拼合也就是单个图像的集合。有许多图像的网页可能需要很长的时间来加载和生成多个服务器的请求。使用图像拼合会降低服务器的请求数量，并节省带宽。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#navlist</span> &#123;</span></span><br><span class="line">            position: relative;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#navlist</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line">                margin: 0;</span><br><span class="line">                padding: 0;</span><br><span class="line">                list-style: none;</span><br><span class="line">                display: inline-block;</span><br><span class="line">                height: 44px;</span><br><span class="line">                line-height: 44px;</span><br><span class="line">                text-align: center;</span><br><span class="line">                cursor: pointer;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#navlist</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line">            height: 44px;</span><br><span class="line">            width: 46px;</span><br><span class="line">            display: block;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-tag">ul</span> &gt; <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(1)</span> &#123;</span></span><br><span class="line">            background: url('./img_navsprites.gif') 0 0;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-tag">ul</span> &gt; <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(1)</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line">            background: url('img_navsprites_hover.gif') 0 -45px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-tag">ul</span> &gt; <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(2)</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background</span><span class="selector-pseudo">:url('img_navsprites.gif')</span> <span class="selector-tag">-47px</span> 0;</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">nav</span> <span class="attr">id</span>=<span class="string">"navlist"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span>&gt;</span>1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span>&gt;</span>2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span>&gt;</span>3<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span>&gt;</span>4<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="2-27-CSS-媒体类型-media-规则"><a href="#2-27-CSS-媒体类型-media-规则" class="headerlink" title="2.27 CSS 媒体类型@media 规则"></a>2.27 CSS 媒体类型@media 规则</h2><p>在下面的例子告诉我们浏览器屏幕上显示一个 14 像素的 Verdana 字体样式。但是如果页面打印，将是 10 个像素的 Times 字体。请注意，font-weight 在屏幕上和纸上设置为粗体：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@media</span> screen</span><br><span class="line">&#123;</span><br><span class="line">    <span class="selector-tag">p</span><span class="selector-class">.test</span> &#123;<span class="attribute">font-family</span>:verdana,sans-serif;<span class="attribute">font-size</span>:<span class="number">14px</span>;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@media</span> print</span><br><span class="line">&#123;</span><br><span class="line">    <span class="selector-tag">p</span><span class="selector-class">.test</span> &#123;<span class="attribute">font-family</span>:times,serif;<span class="attribute">font-size</span>:<span class="number">10px</span>;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@media</span> screen,print</span><br><span class="line">&#123;</span><br><span class="line">    <span class="selector-tag">p</span><span class="selector-class">.test</span> &#123;<span class="attribute">font-weight</span>:bold;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>其他媒体类型</p>
<table>
<thead>
<tr>
<th>all</th>
<th>用于所有的媒体设备。</th>
</tr>
</thead>
<tbody><tr>
<td>aural</td>
<td>用于语音和音频合成器。</td>
</tr>
<tr>
<td>braille</td>
<td>用于盲人用点字法触觉回馈设备。</td>
</tr>
<tr>
<td>embossed</td>
<td>用于分页的盲人用点字法打印机。</td>
</tr>
<tr>
<td>handheld</td>
<td>用于小的手持的设备。</td>
</tr>
<tr>
<td>print</td>
<td>用于打印机。</td>
</tr>
<tr>
<td>projection</td>
<td>用于方案展示，比如幻灯片。</td>
</tr>
<tr>
<td>screen</td>
<td>用于电脑显示器。</td>
</tr>
<tr>
<td>tty</td>
<td>用于使用固定密度字母栅格的媒体，比如电传打字机和终端。</td>
</tr>
<tr>
<td>tv</td>
<td>用于电视机类型的设备。</td>
</tr>
</tbody></table>
<h1 id="三-CSS3新增特性总结"><a href="#三-CSS3新增特性总结" class="headerlink" title="三. CSS3新增特性总结"></a>三. CSS3新增特性总结</h1><h2 id="1-CSS3简介"><a href="#1-CSS3简介" class="headerlink" title="1.CSS3简介"></a>1.CSS3简介</h2><p>CSS3是<a href="https://baike.baidu.com/item/CSS/5457" target="_blank" rel="noopener">CSS</a>（层叠样式表）技术的升级版本，于1999年开始制订，2001年5月23日W3C完成了CSS3的工作草案，主要包括盒子模型、列表模块、<a href="https://baike.baidu.com/item/超链接/97857" target="_blank" rel="noopener">超链接</a>方式、语言模块、背景和边框、文字特效、多栏布局等模块</p>
<h2 id="2-过渡"><a href="#2-过渡" class="headerlink" title="2.过渡"></a>2.过渡</h2><p>过渡，是我在项目里面用得最多的一个特性了！也相信是很多人用得最多的一个例子！我平常使用就是想让一些交互效果（主要是hover动画），变得生动一些，不会显得那么生硬！好了，下面进入正文！</p>
<p>引用菜鸟教程的说法：CSS3 过渡是元素从一种样式逐渐改变为另一种的效果。要实现这一点，必须规定两项内容：指定要添加效果的CSS属性指定效果的持续时间。</p>
<h3 id="2-1语法"><a href="#2-1语法" class="headerlink" title="2-1语法"></a>2-1语法</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">transition： CSS属性，花费时间，效果曲线(默认ease)，延迟时间(默认0)复制代码</span><br></pre></td></tr></table></figure>

<p>栗子1</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*宽度从原始值到制定值的一个过渡，运动曲线ease,运动时间0.5秒，0.2秒后执行过渡*&#x2F;</span><br><span class="line">transition：width,.5s,ease,.2s复制代码</span><br></pre></td></tr></table></figure>

<p>栗子2</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*所有属性从原始值到制定值的一个过渡，运动曲线ease,运动时间0.5秒*&#x2F;</span><br><span class="line">transition：all,.5s</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure>

<p>上面栗子是简写模式，也可以分开写各个属性（这个在下面就不再重复了）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">transition-property: width;</span><br><span class="line">transition-duration: 1s;</span><br><span class="line">transition-timing-function: linear;</span><br><span class="line">transition-delay: 2s;</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure>

<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="comment">/* 文本颜色过渡 */</span></span></span><br><span class="line">        p &#123;</span><br><span class="line">            transition-property: color;</span><br><span class="line">            transition-delay: 0ms;</span><br><span class="line"><span class="css">            <span class="selector-tag">transition-timing-function</span>: <span class="selector-tag">cubic-bezier</span>(0<span class="selector-class">.075</span>, 0<span class="selector-class">.82</span>, 0<span class="selector-class">.165</span>, 1);</span></span><br><span class="line">            transition-duration: 1s;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-tag">p</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line">            color: aqua;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="comment">/* 导航栏下拉菜单过滤 */</span></span></span><br><span class="line">        ul &#123;</span><br><span class="line">            list-style: none;</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.demo-ui</span> &gt; <span class="selector-tag">li</span> &#123;</span></span><br><span class="line">           float: left; </span><br><span class="line">           background-color: antiquewhite;</span><br><span class="line">           text-align: center;</span><br><span class="line">           position: relative;</span><br><span class="line">           cursor: pointer;</span><br><span class="line">           min-width: 120px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.demo-ui</span> &gt; <span class="selector-tag">li</span><span class="selector-pseudo">:hover</span> &gt;<span class="selector-tag">ul</span> &#123;</span></span><br><span class="line">            transform: scaleY(1);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.demo-ui</span> &gt; <span class="selector-tag">li</span> &gt; <span class="selector-tag">ul</span> &#123;</span></span><br><span class="line">            position: absolute;</span><br><span class="line"><span class="css">            <span class="selector-tag">transition</span>: <span class="selector-tag">all</span> <span class="selector-class">.5s</span>;</span></span><br><span class="line">            transform-origin: 0 0;</span><br><span class="line">            transform: scaleY(0);</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.demo-ui</span> &gt; <span class="selector-tag">li</span> &gt; <span class="selector-tag">ul</span> &gt; <span class="selector-tag">li</span> &#123;</span></span><br><span class="line">            display: block;</span><br><span class="line">            padding: 12px 16px;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">border-color</span>: <span class="selector-id">#000</span>;</span></span><br><span class="line">            border-width: 1px;</span><br><span class="line">            border-style: dashed;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>文本颜色过渡效果<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            Lorem ipsum dolor sit amet consectetur adipisicing elit. Et dignissimos tempore fugiat natus ipsa</span><br><span class="line">            voluptatibus, repellendus similique. Quisquam iste, ut animi recusandae illum vero fugiat molestiae</span><br><span class="line">            voluptatem magnam culpa tenetur.Deserunt, dolorum. Facere non et consectetur modi maiores, mollitia,</span><br><span class="line">            molestias excepturi architecto tenetur laborum quae obcaecati? Placeat ratione, ipsa possimus voluptatum</span><br><span class="line">            quam sed maiores exercitationem, eius fugit sit sint voluptatem.</span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>下拉菜单过渡效果<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"demo-ui"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                nav1</span><br><span class="line">                <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>child-nav1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>child-nav2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>child-nav3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                nav2</span><br><span class="line">                <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>child-nav1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>child-nav2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>child-nav3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                nav3</span><br><span class="line">                <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>child-nav1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>child-nav2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>child-nav3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">    <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="3-动画"><a href="#3-动画" class="headerlink" title="3.动画"></a>3.动画</h2><p>动画这个平常用的也很多，主要是做一个预设的动画。和一些页面交互的动画效果，结果和过渡应该一样，让页面不会那么生硬！</p>
<h3 id="3-1-语法"><a href="#3-1-语法" class="headerlink" title="3-1.语法"></a>3-1.语法</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">animation</span>：动画名称，一个周期花费时间，运动曲线（默认<span class="selector-tag">ease</span>），动画延迟（默认0），播放次数（默认1），是否反向播放动画（默认<span class="selector-tag">normal</span>），是否暂停动画（默认<span class="selector-tag">running</span>）复制代码</span><br></pre></td></tr></table></figure>

<p>栗子1</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*执行一次logo2-line动画，运动时间2秒，运动曲线为 linear*/</span></span><br><span class="line"><span class="selector-tag">animation</span>: <span class="selector-tag">logo2-line</span> 2<span class="selector-tag">s</span> <span class="selector-tag">linear</span>;复制代码</span><br></pre></td></tr></table></figure>

<p>栗子2</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*2秒后开始执行一次logo2-line动画，运动时间2秒，运动曲线为 linear*/</span></span><br><span class="line"><span class="selector-tag">animation</span>: <span class="selector-tag">logo2-line</span> 2<span class="selector-tag">s</span> <span class="selector-tag">linear</span> 2<span class="selector-tag">s</span>;复制代码</span><br></pre></td></tr></table></figure>

<p>栗子3</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*无限执行logo2-line动画，每次运动时间2秒，运动曲线为 linear，并且执行反向动画*/</span></span><br><span class="line"><span class="selector-tag">animation</span>: <span class="selector-tag">logo2-line</span> 2<span class="selector-tag">s</span> <span class="selector-tag">linear</span> <span class="selector-tag">alternate</span> <span class="selector-tag">infinite</span>;复制代码</span><br></pre></td></tr></table></figure>

<p>还有一个重要属性</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">animation-fill-mode : none | forwards | backwards | both;</span><br><span class="line"><span class="comment">/*none：不改变默认行为。    </span></span><br><span class="line"><span class="comment">forwards ：当动画完成后，保持最后一个属性值（在最后一个关键帧中定义）。    </span></span><br><span class="line"><span class="comment">backwards：在 animation-delay 所指定的一段时间内，在动画显示之前，应用开始属性值（在第一个关键帧中定义）。 </span></span><br><span class="line"><span class="comment">both：向前和向后填充模式都被应用。  */</span>      复制代码</span><br></pre></td></tr></table></figure>

<h3 id="3-2-logo展示动画"><a href="#3-2-logo展示动画" class="headerlink" title="3-2.logo展示动画"></a>3-2.logo展示动画</h3><p><img src="https://user-gold-cdn.xitu.io/2017/11/15/15fbf406b0855a99?imageslim" alt="img"></p>
<p>这个是我用公司logo写的动画，没那么精细</p>
<p>代码如下</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"reset.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-class">.logo-box</span>&#123;</span></span><br><span class="line">    width: 600px;</span><br><span class="line">    margin: 100px auto;</span><br><span class="line">    font-size: 0;</span><br><span class="line">    position: relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.logo-box</span> <span class="selector-tag">div</span>&#123;</span></span><br><span class="line">    display: inline-block;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.logo-box</span> <span class="selector-class">.logo-text</span>&#123;</span></span><br><span class="line">    margin-left: 10px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.logo-box</span> <span class="selector-class">.logo1</span>&#123;</span></span><br><span class="line">    animation: logo1 1s ease-in 2s;</span><br><span class="line"><span class="css">    <span class="selector-tag">animation-fill-mode</span><span class="selector-pseudo">:backwards</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.logo-box</span> <span class="selector-class">.logo-text</span>&#123;</span></span><br><span class="line">    animation: logoText 1s ease-in 3s;</span><br><span class="line"><span class="css">    <span class="selector-tag">animation-fill-mode</span><span class="selector-pseudo">:backwards</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.logo-box</span> <span class="selector-class">.logo2</span>&#123;</span></span><br><span class="line">    position: absolute;</span><br><span class="line">    top: 20px;</span><br><span class="line">    left: 20px;</span><br><span class="line">    animation: logo2-middle 2s ease-in;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.logo-box</span> <span class="selector-class">.logo2</span> <span class="selector-tag">img</span>&#123;</span></span><br><span class="line">    animation: logo2-line 2s linear;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="keyword">@keyframes</span> logo1 &#123;</span></span><br><span class="line">    0%&#123;</span><br><span class="line"><span class="css">        <span class="selector-tag">transform</span><span class="selector-pseudo">:rotate(180deg)</span>;</span></span><br><span class="line">        opacity: 0;</span><br><span class="line">    &#125;</span><br><span class="line">    100%&#123;</span><br><span class="line"><span class="css">        <span class="selector-tag">transform</span><span class="selector-pseudo">:rotate(0deg)</span>;</span></span><br><span class="line">        opacity: 1;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="keyword">@keyframes</span> logoText &#123;</span></span><br><span class="line">    0%&#123;</span><br><span class="line"><span class="css">        <span class="selector-tag">transform</span><span class="selector-pseudo">:translateX(30px)</span>;</span></span><br><span class="line">        opacity: 0;</span><br><span class="line">    &#125;</span><br><span class="line">    100%&#123;</span><br><span class="line"><span class="css">        <span class="selector-tag">transform</span><span class="selector-pseudo">:translateX(0)</span>;</span></span><br><span class="line">        opacity: 1;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="keyword">@keyframes</span> logo2-line &#123;</span></span><br><span class="line"><span class="css">    0% &#123; <span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">200px</span>)&#125;</span></span><br><span class="line"><span class="css">    25% &#123; <span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">150px</span>)&#125;</span></span><br><span class="line"><span class="css">    50% &#123; <span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">100px</span>)&#125;</span></span><br><span class="line"><span class="css">    75% &#123; <span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">50px</span>)&#125;</span></span><br><span class="line"><span class="css">    100% &#123; <span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">0</span>); &#125;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="keyword">@keyframes</span> logo2-middle &#123;</span></span><br><span class="line"><span class="css">    0% &#123; <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">0</span>);     &#125;</span></span><br><span class="line"><span class="css">    25% &#123; <span class="attribute">transform</span>: <span class="built_in">translateY</span>(-<span class="number">100px</span>);     &#125;</span></span><br><span class="line"><span class="css">    50% &#123; <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">0</span>);     &#125;</span></span><br><span class="line"><span class="css">    75% &#123; <span class="attribute">transform</span>: <span class="built_in">translateY</span>(-<span class="number">50px</span>);     &#125;</span></span><br><span class="line"><span class="css">    100% &#123; <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">0</span>); &#125;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"logo-box"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"logo1"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"logo1.jpg"</span>/&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"logo2"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"logo2.jpg"</span>/&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"logo-text"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"logo3.jpg"</span>/&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wraper"</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>下面让大家看一个专业级别的</p>
<p><img src="https://user-gold-cdn.xitu.io/2017/11/15/15fbf406a3af6c0a?imageslim" alt="img"></p>
<p>代码如下</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    body &#123;</span><br><span class="line">        font-family: Arial,"Helvetica Neue",Helvetica,sans-serif;</span><br><span class="line">        overflow: hidden;</span><br><span class="line"><span class="css">        <span class="selector-tag">background</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.center</span> &#123;</span></span><br><span class="line">        margin: 80px auto;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.so</span> &#123;</span></span><br><span class="line">        display: block;</span><br><span class="line">        width: 500px;</span><br><span class="line">        height: 156px;</span><br><span class="line"><span class="css">        <span class="selector-tag">background</span>: <span class="selector-id">#ffffff</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.so</span> <span class="selector-class">.inner</span> &#123;</span></span><br><span class="line">        width: 500px;</span><br><span class="line">        height: 156px;</span><br><span class="line">        position: absolute;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.so</span> <span class="selector-class">.inner</span> * &#123;</span></span><br><span class="line">        position: absolute;</span><br><span class="line">        animation-iteration-count: infinite;</span><br><span class="line"><span class="css">        <span class="selector-tag">animation-duration</span>: 3<span class="selector-class">.5s</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.so</span> <span class="selector-class">.inner</span> <span class="selector-class">.name</span> &#123;</span></span><br><span class="line">        position: absolute;</span><br><span class="line">        font-size: 54px;</span><br><span class="line">        left: 130px;</span><br><span class="line">        top: 95px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.so</span> <span class="selector-class">.inner</span> <span class="selector-class">.name</span> <span class="selector-class">.b</span> &#123;</span></span><br><span class="line">        font-weight: bold;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.so</span> <span class="selector-class">.inner</span> <span class="selector-class">.stack-box</span> &#123;</span></span><br><span class="line">        top: 100px;</span><br><span class="line">        width: 115px;</span><br><span class="line">        height: 56px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.so</span> <span class="selector-class">.inner</span> <span class="selector-class">.box</span> &#123;</span></span><br><span class="line">        width: 115px;</span><br><span class="line">        height: 56px;</span><br><span class="line">        left: 0px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.so</span> <span class="selector-class">.inner</span> <span class="selector-class">.box</span> <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">background</span>: <span class="selector-id">#BCBBBB</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.so</span> <span class="selector-class">.inner</span> <span class="selector-class">.box</span> <span class="selector-class">.bottom</span> &#123;</span></span><br><span class="line">        bottom: 0px;</span><br><span class="line">        left: 0px;</span><br><span class="line">        width: 115px;</span><br><span class="line">        height: 12px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.so</span> <span class="selector-class">.inner</span> <span class="selector-class">.box</span> <span class="selector-class">.left</span> &#123;</span></span><br><span class="line">        bottom: 11px;</span><br><span class="line">        left: 0px;</span><br><span class="line">        width: 12px;</span><br><span class="line">        height: 34px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.so</span> <span class="selector-class">.inner</span> <span class="selector-class">.box</span> <span class="selector-class">.right</span> &#123;</span></span><br><span class="line">        bottom: 11px;</span><br><span class="line">        left: 103px;</span><br><span class="line">        width: 12px;</span><br><span class="line">        height: 34px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.so</span> <span class="selector-class">.inner</span> <span class="selector-class">.box</span> <span class="selector-class">.top</span> &#123;</span></span><br><span class="line">        top: 0px;</span><br><span class="line">        left: 0px;</span><br><span class="line">        width: 0;</span><br><span class="line">        height: 12px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.so</span> <span class="selector-class">.inner</span> <span class="selector-class">.stack</span> &#123;</span></span><br><span class="line">        left: 22px;</span><br><span class="line">        top: 22px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.so</span> <span class="selector-class">.inner</span> <span class="selector-class">.stack</span> <span class="selector-class">.inner-item</span> &#123;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">background</span>: <span class="selector-id">#F48024</span>;</span></span><br><span class="line">        width: 71px;</span><br><span class="line">        height: 12px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.so</span> <span class="selector-class">.inner</span> <span class="selector-class">.stack</span> <span class="selector-class">.item</span> &#123;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">transition</span>: <span class="selector-tag">transform</span> 0<span class="selector-class">.3s</span>;</span></span><br><span class="line">        width: 291px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.so</span> <span class="selector-class">.inner</span> <span class="selector-class">.stack</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(1)</span> &#123;</span></span><br><span class="line">        transform: rotate(0deg);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.so</span> <span class="selector-class">.inner</span> <span class="selector-class">.stack</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(2)</span> &#123;</span></span><br><span class="line">        transform: rotate(12deg);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.so</span> <span class="selector-class">.inner</span> <span class="selector-class">.stack</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(3)</span> &#123;</span></span><br><span class="line">        transform: rotate(24deg);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.so</span> <span class="selector-class">.inner</span> <span class="selector-class">.stack</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(4)</span> &#123;</span></span><br><span class="line">        transform: rotate(36deg);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.so</span> <span class="selector-class">.inner</span> <span class="selector-class">.stack</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(5)</span> &#123;</span></span><br><span class="line">        transform: rotate(48deg);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.so</span> <span class="selector-class">.inner</span> <span class="selector-class">.box</span> &#123;</span></span><br><span class="line">        animation-name: box;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.so</span> <span class="selector-class">.inner</span> <span class="selector-class">.box</span> <span class="selector-class">.top</span> &#123;</span></span><br><span class="line">        animation-name: box-top;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.so</span> <span class="selector-class">.inner</span> <span class="selector-class">.box</span> <span class="selector-class">.left</span> &#123;</span></span><br><span class="line">        animation-name: box-left;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.so</span> <span class="selector-class">.inner</span> <span class="selector-class">.box</span> <span class="selector-class">.right</span> &#123;</span></span><br><span class="line">        animation-name: box-right;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.so</span> <span class="selector-class">.inner</span> <span class="selector-class">.box</span> <span class="selector-class">.bottom</span> &#123;</span></span><br><span class="line">        animation-name: box-bottom;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.so</span> <span class="selector-class">.inner</span> <span class="selector-class">.stack-box</span> &#123;</span></span><br><span class="line">        animation-name: stack-box;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.so</span> <span class="selector-class">.inner</span> <span class="selector-class">.stack</span> &#123;</span></span><br><span class="line">        animation-name: stack;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.so</span> <span class="selector-class">.inner</span> <span class="selector-class">.stack</span> <span class="selector-class">.inner-item</span> &#123;</span></span><br><span class="line">        animation-name: stack-items;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.so</span> <span class="selector-class">.inner</span> <span class="selector-class">.stack</span> <span class="selector-class">.item</span><span class="selector-pseudo">:nth-child(1)</span> &#123;</span></span><br><span class="line">        animation-name: stack-item-1;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.so</span> <span class="selector-class">.inner</span> <span class="selector-class">.stack</span> <span class="selector-class">.item</span><span class="selector-pseudo">:nth-child(2)</span> &#123;</span></span><br><span class="line">        animation-name: stack-item-2;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.so</span> <span class="selector-class">.inner</span> <span class="selector-class">.stack</span> <span class="selector-class">.item</span><span class="selector-pseudo">:nth-child(3)</span> &#123;</span></span><br><span class="line">        animation-name: stack-item-3;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.so</span> <span class="selector-class">.inner</span> <span class="selector-class">.stack</span> <span class="selector-class">.item</span><span class="selector-pseudo">:nth-child(4)</span> &#123;</span></span><br><span class="line">        animation-name: stack-item-4;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.so</span> <span class="selector-class">.inner</span> <span class="selector-class">.stack</span> <span class="selector-class">.item</span><span class="selector-pseudo">:nth-child(5)</span> &#123;</span></span><br><span class="line">        animation-name: stack-item-5;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="keyword">@keyframes</span> stack &#123;</span></span><br><span class="line">        0% &#123;</span><br><span class="line">            left: 22px;</span><br><span class="line">        &#125;</span><br><span class="line">        15% &#123;</span><br><span class="line">            left: 22px;</span><br><span class="line">        &#125;</span><br><span class="line">        30% &#123;</span><br><span class="line">            left: 52px;</span><br><span class="line">        &#125;</span><br><span class="line">        50% &#123;</span><br><span class="line">            left: 52px;</span><br><span class="line">        &#125;</span><br><span class="line">        80% &#123;</span><br><span class="line">            left: 22px;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="keyword">@keyframes</span> stack-item-<span class="number">1</span> &#123;</span></span><br><span class="line">        0% &#123;</span><br><span class="line">            transform: rotate(12deg * 0);</span><br><span class="line">        &#125;</span><br><span class="line">        10% &#123;</span><br><span class="line">            transform: rotate(0deg);</span><br><span class="line">        &#125;</span><br><span class="line">        50% &#123;</span><br><span class="line">            transform: rotate(0deg);</span><br><span class="line">        &#125;</span><br><span class="line">        54% &#123;</span><br><span class="line">            transform: rotate(0deg);</span><br><span class="line">        &#125;</span><br><span class="line">        92% &#123;</span><br><span class="line">            transform: rotate(12deg * 0);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="keyword">@keyframes</span> stack-item-<span class="number">2</span> &#123;</span></span><br><span class="line">        0% &#123;</span><br><span class="line">            transform: rotate(12deg * 1);</span><br><span class="line">        &#125;</span><br><span class="line">        10% &#123;</span><br><span class="line">            transform: rotate(0deg);</span><br><span class="line">        &#125;</span><br><span class="line">        50% &#123;</span><br><span class="line">            transform: rotate(0deg);</span><br><span class="line">        &#125;</span><br><span class="line">        54% &#123;</span><br><span class="line">            transform: rotate(0deg);</span><br><span class="line">        &#125;</span><br><span class="line">        92% &#123;</span><br><span class="line">            transform: rotate(12deg * 1);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="keyword">@keyframes</span> stack-item-<span class="number">3</span> &#123;</span></span><br><span class="line">        0% &#123;</span><br><span class="line">            transform: rotate(12deg * 2);</span><br><span class="line">        &#125;</span><br><span class="line">        10% &#123;</span><br><span class="line">            transform: rotate(0deg);</span><br><span class="line">        &#125;</span><br><span class="line">        50% &#123;</span><br><span class="line">            transform: rotate(0deg);</span><br><span class="line">        &#125;</span><br><span class="line">        54% &#123;</span><br><span class="line">            transform: rotate(0deg);</span><br><span class="line">        &#125;</span><br><span class="line">        92% &#123;</span><br><span class="line">            transform: rotate(12deg * 2);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="keyword">@keyframes</span> stack-item-<span class="number">4</span> &#123;</span></span><br><span class="line">        0% &#123;</span><br><span class="line">            transform: rotate(12deg * 3);</span><br><span class="line">        &#125;</span><br><span class="line">        10% &#123;</span><br><span class="line">            transform: rotate(0deg);</span><br><span class="line">        &#125;</span><br><span class="line">        50% &#123;</span><br><span class="line">            transform: rotate(0deg);</span><br><span class="line">        &#125;</span><br><span class="line">        54% &#123;</span><br><span class="line">            transform: rotate(0deg);</span><br><span class="line">        &#125;</span><br><span class="line">        92% &#123;</span><br><span class="line">            transform: rotate(12deg * 3);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="keyword">@keyframes</span> stack-item-<span class="number">5</span> &#123;</span></span><br><span class="line">        0% &#123;</span><br><span class="line">            transform: rotate(12deg * 4);</span><br><span class="line">        &#125;</span><br><span class="line">        10% &#123;</span><br><span class="line">            transform: rotate(0deg);</span><br><span class="line">        &#125;</span><br><span class="line">        50% &#123;</span><br><span class="line">            transform: rotate(0deg);</span><br><span class="line">        &#125;</span><br><span class="line">        54% &#123;</span><br><span class="line">            transform: rotate(0deg);</span><br><span class="line">        &#125;</span><br><span class="line">        92% &#123;</span><br><span class="line">            transform: rotate(12deg * 4);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="keyword">@keyframes</span> stack-items &#123;</span></span><br><span class="line">        0% &#123;</span><br><span class="line">            width: 71px;</span><br><span class="line">        &#125;</span><br><span class="line">        15% &#123;</span><br><span class="line">            width: 71px;</span><br><span class="line">        &#125;</span><br><span class="line">        30% &#123;</span><br><span class="line">            width: 12px;</span><br><span class="line">        &#125;</span><br><span class="line">        50% &#123;</span><br><span class="line">            width: 12px;</span><br><span class="line">        &#125;</span><br><span class="line">        80% &#123;</span><br><span class="line">            width: 71px;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="keyword">@keyframes</span> box &#123;</span></span><br><span class="line">        0% &#123;</span><br><span class="line">            left: 0;</span><br><span class="line">        &#125;</span><br><span class="line">        15% &#123;</span><br><span class="line">            left: 0;</span><br><span class="line">        &#125;</span><br><span class="line">        30% &#123;</span><br><span class="line">            left: 30px;</span><br><span class="line">        &#125;</span><br><span class="line">        50% &#123;</span><br><span class="line">            left: 30px;</span><br><span class="line">        &#125;</span><br><span class="line">        80% &#123;</span><br><span class="line">            left: 0;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="keyword">@keyframes</span> box-top &#123;</span></span><br><span class="line">        0% &#123;</span><br><span class="line">            width: 0;</span><br><span class="line">        &#125;</span><br><span class="line">        6% &#123;</span><br><span class="line">            width: 0;</span><br><span class="line">        &#125;</span><br><span class="line">        15% &#123;</span><br><span class="line">            width: 115px;</span><br><span class="line">        &#125;</span><br><span class="line">        30% &#123;</span><br><span class="line">            width: 56px;</span><br><span class="line">        &#125;</span><br><span class="line">        50% &#123;</span><br><span class="line">            width: 56px;</span><br><span class="line">        &#125;</span><br><span class="line">        59% &#123;</span><br><span class="line">            width: 0;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="keyword">@keyframes</span> box-bottom &#123;</span></span><br><span class="line">        0% &#123;</span><br><span class="line">            width: 115px;</span><br><span class="line">        &#125;</span><br><span class="line">        15% &#123;</span><br><span class="line">            width: 115px;</span><br><span class="line">        &#125;</span><br><span class="line">        30% &#123;</span><br><span class="line">            width: 56px;</span><br><span class="line">        &#125;</span><br><span class="line">        50% &#123;</span><br><span class="line">            width: 56px;</span><br><span class="line">        &#125;</span><br><span class="line">        80% &#123;</span><br><span class="line">            width: 115px;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="keyword">@keyframes</span> box-right &#123;</span></span><br><span class="line">        15% &#123;</span><br><span class="line">            left: 103px;</span><br><span class="line">        &#125;</span><br><span class="line">        30% &#123;</span><br><span class="line">            left: 44px;</span><br><span class="line">        &#125;</span><br><span class="line">        50% &#123;</span><br><span class="line">            left: 44px;</span><br><span class="line">        &#125;</span><br><span class="line">        80% &#123;</span><br><span class="line">            left: 103px;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="keyword">@keyframes</span> stack-box &#123;</span></span><br><span class="line">        0% &#123;</span><br><span class="line">            transform: rotate(0deg);</span><br><span class="line">        &#125;</span><br><span class="line">        30% &#123;</span><br><span class="line">            transform: rotate(0deg);</span><br><span class="line">        &#125;</span><br><span class="line">        40% &#123;</span><br><span class="line">            transform: rotate(135deg);</span><br><span class="line">        &#125;</span><br><span class="line">        50% &#123;</span><br><span class="line">            transform: rotate(135deg);</span><br><span class="line">        &#125;</span><br><span class="line">        83% &#123;</span><br><span class="line">            transform: rotate(360deg);</span><br><span class="line">        &#125;</span><br><span class="line">        100% &#123;</span><br><span class="line">            transform: rotate(360deg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"so center"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"inner"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"stack-box"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"stack"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"inner-item"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"inner-item"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"inner-item"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"inner-item"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"inner-item"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"bottom"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"top"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"name"</span>&gt;</span></span><br><span class="line">            stack<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"b"</span>&gt;</span>overflow<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-3-loading效果"><a href="#3-3-loading效果" class="headerlink" title="3-3.loading效果"></a>3-3.loading效果</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.loading-box</span> &#123;</span></span><br><span class="line">            position: absolute;</span><br><span class="line">            top: 0;</span><br><span class="line">            left: 0;</span><br><span class="line">            right: 0;</span><br><span class="line">            bottom: 0;</span><br><span class="line">            margin: auto;</span><br><span class="line">            overflow: hidden;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#ddd</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.loading-box</span> <span class="selector-class">.loading-dot</span> &#123;</span></span><br><span class="line">            height: 12px;</span><br><span class="line">            width: 12px;</span><br><span class="line">            opacity: 0;</span><br><span class="line">            border-radius: 50%;</span><br><span class="line"><span class="css">            <span class="selector-tag">background</span>: <span class="selector-id">#666</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#4b9cdb</span>;</span></span><br><span class="line">            display: inline-block;</span><br><span class="line">            margin: 0 10px;</span><br><span class="line">            animation-name: loading;</span><br><span class="line">            animation-duration: 4s;</span><br><span class="line">            animation-iteration-count: infinite;</span><br><span class="line">            animation-timing-function: ease;</span><br><span class="line">            transform: translateX(-300px);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.loading-box</span> <span class="selector-class">.loading-dot</span><span class="selector-pseudo">:nth-child(1)</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">animation-delay</span>: <span class="selector-class">.8s</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.loading-box</span> <span class="selector-class">.loading-dot</span><span class="selector-pseudo">:nth-child(2)</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">animation-delay</span>: <span class="selector-class">.7s</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.loading-box</span> <span class="selector-class">.loading-dot</span><span class="selector-pseudo">:nth-child(3)</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">animation-delay</span>: <span class="selector-class">.6s</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.loading-box</span> <span class="selector-class">.loading-dot</span><span class="selector-pseudo">:nth-child(4)</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">animation-delay</span>: <span class="selector-class">.5s</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.loading-box</span> <span class="selector-class">.loading-dot</span><span class="selector-pseudo">:nth-child(5)</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">animation-delay</span>: <span class="selector-class">.4s</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.loading-box</span> <span class="selector-class">.loading-dot</span><span class="selector-pseudo">:nth-child(6)</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">animation-delay</span>: <span class="selector-class">.3s</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.loading-box</span> <span class="selector-class">.loading-dot</span><span class="selector-pseudo">:nth-child(7)</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">animation-delay</span>: <span class="selector-class">.2s</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.loading-box</span> <span class="selector-class">.loading-dot</span><span class="selector-pseudo">:nth-child(8)</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">animation-delay</span>: <span class="selector-class">.1s</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="keyword">@keyframes</span> loading &#123;</span></span><br><span class="line">            40% &#123;</span><br><span class="line">                transform: translateX(0);</span><br><span class="line"><span class="css">                <span class="selector-tag">opacity</span>: <span class="selector-class">.8</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line">            100% &#123;</span><br><span class="line">                transform: translateX(300px);</span><br><span class="line">                opacity: 0;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"loading-box"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"loading-dot"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"loading-dot"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"loading-dot"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"loading-dot"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"loading-dot"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"loading-dot"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"loading-dot"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"loading-dot"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><a href="http://www.html5tricks.com/demo/css3-loading-cool-styles/index.html" target="_blank" rel="noopener">css3-loading</a></p>
<h3 id="3-4-音乐震动条"><a href="#3-4-音乐震动条" class="headerlink" title="3-4.音乐震动条"></a>3-4.音乐震动条</h3><p>代码如下</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>纯CSS3模拟跳动的音符效果<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    *&#123;<span class="attribute">margin</span>:<span class="number">0</span>;<span class="attribute">padding</span>:<span class="number">0</span>;<span class="attribute">list-style</span>: none;&#125;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">body</span>&#123;<span class="attribute">background-color</span>: <span class="number">#efefef</span>;&#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.demo-music</span> &#123;</span></span><br><span class="line">      position: absolute;</span><br><span class="line">      width: 100%;</span><br><span class="line">      height: 200px;</span><br><span class="line">      top: 120px;</span><br><span class="line"><span class="css">      <span class="selector-tag">zoom</span>: 1<span class="selector-class">.5</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.demo-music</span> <span class="selector-class">.music</span> &#123;</span></span><br><span class="line">      width: 80px;</span><br><span class="line">      height: 50px;</span><br><span class="line">      top: 50%;</span><br><span class="line">      left: 50%;</span><br><span class="line">      -webkit-transform: translate(-40px, -25px);</span><br><span class="line">      transform: translate(-40px, -25px);</span><br><span class="line">      position: absolute;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.demo-music</span> <span class="selector-id">#waves</span> &#123;</span></span><br><span class="line">      width: 80px;</span><br><span class="line">      height: 50px;</span><br><span class="line">      position: absolute;</span><br><span class="line">      top: 12px;</span><br><span class="line">      left: 12px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.demo-music</span> <span class="selector-id">#waves</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line">      position: relative;</span><br><span class="line">      float: left;</span><br><span class="line">      height: 100%;</span><br><span class="line">      width: 12%;</span><br><span class="line">      overflow: hidden;</span><br><span class="line">      margin-right: 1px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.demo-music</span> <span class="selector-id">#waves</span> <span class="selector-tag">li</span> <span class="selector-tag">span</span> &#123;</span></span><br><span class="line">      position: absolute;</span><br><span class="line">      bottom: 0;</span><br><span class="line">      display: block;</span><br><span class="line">      height: 100%;</span><br><span class="line">      width: 100px;</span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-id">#09f</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.demo-music</span> <span class="selector-id">#waves</span> <span class="selector-class">.li1</span> <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">animation</span>: <span class="selector-tag">waves</span> 0<span class="selector-class">.8s</span> <span class="selector-tag">linear</span> 0<span class="selector-tag">s</span> <span class="selector-tag">infinite</span> <span class="selector-tag">alternate</span>;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">-webkit-animation</span>: <span class="selector-tag">waves</span> 0<span class="selector-class">.8s</span> <span class="selector-tag">linear</span> 0<span class="selector-tag">s</span> <span class="selector-tag">infinite</span> <span class="selector-tag">alternate</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.demo-music</span> <span class="selector-id">#waves</span> <span class="selector-class">.li2</span> <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">animation</span>: <span class="selector-tag">waves</span> 0<span class="selector-class">.9s</span> <span class="selector-tag">linear</span> 0<span class="selector-tag">s</span> <span class="selector-tag">infinite</span> <span class="selector-tag">alternate</span>;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">-webkit-animation</span>: <span class="selector-tag">waves</span> 0<span class="selector-class">.9s</span> <span class="selector-tag">linear</span> 0<span class="selector-tag">s</span> <span class="selector-tag">infinite</span> <span class="selector-tag">alternate</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.demo-music</span> <span class="selector-id">#waves</span> <span class="selector-class">.li3</span> <span class="selector-tag">span</span> &#123;</span></span><br><span class="line">      animation: waves 1s linear 0s infinite alternate;</span><br><span class="line">      -webkit-animation: waves 1s linear 0s infinite alternate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.demo-music</span> <span class="selector-id">#waves</span> <span class="selector-class">.li4</span> <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">animation</span>: <span class="selector-tag">waves</span> 0<span class="selector-class">.8s</span> <span class="selector-tag">linear</span> 0<span class="selector-tag">s</span> <span class="selector-tag">infinite</span> <span class="selector-tag">alternate</span>;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">-webkit-animation</span>: <span class="selector-tag">waves</span> 0<span class="selector-class">.8s</span> <span class="selector-tag">linear</span> 0<span class="selector-tag">s</span> <span class="selector-tag">infinite</span> <span class="selector-tag">alternate</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.demo-music</span> <span class="selector-id">#waves</span> <span class="selector-class">.li5</span> <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">animation</span>: <span class="selector-tag">waves</span> 0<span class="selector-class">.7s</span> <span class="selector-tag">linear</span> 0<span class="selector-tag">s</span> <span class="selector-tag">infinite</span> <span class="selector-tag">alternate</span>;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">-webkit-animation</span>: <span class="selector-tag">waves</span> 0<span class="selector-class">.7s</span> <span class="selector-tag">linear</span> 0<span class="selector-tag">s</span> <span class="selector-tag">infinite</span> <span class="selector-tag">alternate</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.demo-music</span> <span class="selector-id">#waves</span> <span class="selector-class">.li6</span> <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">animation</span>: <span class="selector-tag">waves</span> 0<span class="selector-class">.8s</span> <span class="selector-tag">linear</span> 0<span class="selector-tag">s</span> <span class="selector-tag">infinite</span> <span class="selector-tag">alternate</span>;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">-webkit-animation</span>: <span class="selector-tag">waves</span> 0<span class="selector-class">.8s</span> <span class="selector-tag">linear</span> 0<span class="selector-tag">s</span> <span class="selector-tag">infinite</span> <span class="selector-tag">alternate</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="keyword">@-webkit-keyframes</span> waves &#123;</span></span><br><span class="line">      10% &#123;</span><br><span class="line">        height: 20%;</span><br><span class="line">      &#125;</span><br><span class="line">      20% &#123;</span><br><span class="line">        height: 60%;</span><br><span class="line">      &#125;</span><br><span class="line">      40% &#123;</span><br><span class="line">        height: 40%;</span><br><span class="line">      &#125;</span><br><span class="line">      50% &#123;</span><br><span class="line">        height: 100%;</span><br><span class="line">      &#125;</span><br><span class="line">      100% &#123;</span><br><span class="line">        height: 50%;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="keyword">@keyframes</span> waves &#123;</span></span><br><span class="line">      10% &#123;</span><br><span class="line">        height: 20%;</span><br><span class="line">      &#125;</span><br><span class="line">      20% &#123;</span><br><span class="line">        height: 60%;</span><br><span class="line">      &#125;</span><br><span class="line">      40% &#123;</span><br><span class="line">        height: 40%;</span><br><span class="line">      &#125;</span><br><span class="line">      50% &#123;</span><br><span class="line">        height: 100%;</span><br><span class="line">      &#125;</span><br><span class="line">      100% &#123;</span><br><span class="line">        height: 50%;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"demo-music"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"music"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"waves"</span> <span class="attr">class</span>=<span class="string">"movement"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"li1"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"ani-li"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"li2"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"ani-li"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"li3"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"ani-li"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"li4"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"ani-li"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"li5"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"ani-li"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"li6"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"ani-li"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"music-state"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="4-形状转换"><a href="#4-形状转换" class="headerlink" title="4.形状转换"></a>4.形状转换</h2><p>这一部分，分2d转换和3d转换。</p>
<p><img src="https://pic002.cnblogs.com/images/2012/436120/2012083014431464.jpg" alt=""></p>
<p>rotate判断：</p>
<p>　　<strong>正向轴对着眼睛，顺时针则旋转角度为正，逆时针则旋转角度为负。</strong></p>
<p>　　或者用左手法则也行：<strong>伸出左手，大拇指指向正轴方向，四个手指的指向即是旋转正向，但务必记住是左手！</strong></p>
<p><strong>注：rotate后三维坐标轴也会跟着改变</strong></p>
<p>旋转的动画效果</p>
<p><a href="http://www.100sucai.com/demos.php?id=1551760986" target="_blank" rel="noopener">http://www.100sucai.com/demos.php?id=1551760986</a></p>
<h3 id="4-1-语法"><a href="#4-1-语法" class="headerlink" title="4-1.语法"></a>4-1.语法</h3><p>transform:适用于2D或3D转换的元素<br>transform-origin：转换元素的位置（围绕那个点进行转换）。默认(x,y,z)：(50%,50%,0)</p>
<h3 id="4-2-实例"><a href="#4-2-实例" class="headerlink" title="4-2.实例"></a>4-2.实例</h3><p>transform:rotate(30deg);  旋转30弧度</p>
<p>transform:translate(30px,30px);  平移x: 30px ,y: 30px</p>
<p>transform:scale(.8); 缩放0.8倍</p>
<p>transform: skew(10deg,10deg); 倾斜x轴方向: 10弧度， y方向10弧度</p>
<p>transform:rotateX(180deg); 沿x方向旋转180弧度</p>
<p>transform:rotateY(180deg); 沿y轴方向旋转180弧度</p>
<p>transform:rotate3d(10,10,10,90deg); 使元素在这三个纬度中移动,也可以分开写，如：translateX(length),translateY(length), translateZ(length)。注意z轴的值只能为px</p>
<p>画一个立方体</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span> </span><br><span class="line"><span class="css"><span class="selector-class">.main</span>&#123;</span></span><br><span class="line">	height: 500px;</span><br><span class="line">	width: 500px;</span><br><span class="line">	position: absolute;</span><br><span class="line">	left: 50%;</span><br><span class="line">	top: 50%;</span><br><span class="line"><span class="css">	<span class="selector-tag">border</span><span class="selector-pseudo">:0px</span> <span class="selector-tag">solid</span> <span class="selector-tag">black</span>;</span></span><br><span class="line">	transform: translate(-50%,-50%) rotateX(45deg) rotateY(45deg);</span><br><span class="line">	transform-style: preserve-3d;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="css"><span class="selector-class">.main</span> <span class="selector-tag">div</span>&#123;</span></span><br><span class="line">	position: absolute;</span><br><span class="line">	left: 50%;</span><br><span class="line">	top: 50%;</span><br><span class="line">	height: 250px;</span><br><span class="line">	width: 250px;</span><br><span class="line">	display: flex;</span><br><span class="line">	justify-content: center;</span><br><span class="line">	align-items: center;</span><br><span class="line">	font-size: 60px;</span><br><span class="line">	font-weight: bold;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="css"><span class="selector-class">.main</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line">	transform: translate(-50%,-50%)  rotateX(145deg) rotateY(45deg) rotateZ(105deg);</span><br><span class="line">	transition: all 5s;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="css"><span class="selector-class">.face1</span>&#123;</span></span><br><span class="line">	background-color: pink;</span><br><span class="line"><span class="css">	<span class="selector-tag">transform</span><span class="selector-pseudo">:translate(-50</span>%,<span class="selector-tag">-50</span>%) <span class="selector-tag">translateY</span>(<span class="selector-tag">-125px</span>) <span class="selector-tag">rotateX</span>(90<span class="selector-tag">deg</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="css"><span class="selector-class">.face2</span>&#123;</span></span><br><span class="line">	background-color: red;</span><br><span class="line"><span class="css">	<span class="selector-tag">transform</span><span class="selector-pseudo">:translate(-50</span>%,<span class="selector-tag">-50</span>%) <span class="selector-tag">translateX</span>(<span class="selector-tag">-125px</span>) <span class="selector-tag">rotateY</span>(90<span class="selector-tag">deg</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="css"><span class="selector-class">.face3</span>&#123;</span></span><br><span class="line">	background-color: blue;</span><br><span class="line"><span class="css">	<span class="selector-tag">transform</span><span class="selector-pseudo">:translate(-50</span>%,<span class="selector-tag">-50</span>%) <span class="selector-tag">translateZ</span>(<span class="selector-tag">-125px</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="css"><span class="selector-class">.face4</span>&#123;</span></span><br><span class="line">	background-color: yellow;</span><br><span class="line"><span class="css">	<span class="selector-tag">transform</span><span class="selector-pseudo">:translate(-50</span>%,<span class="selector-tag">-50</span>%) <span class="selector-tag">translateY</span>(125<span class="selector-tag">px</span>) <span class="selector-tag">rotateX</span>(90<span class="selector-tag">deg</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="css"><span class="selector-class">.face5</span>&#123;</span></span><br><span class="line">	background-color: green;</span><br><span class="line"><span class="css">	<span class="selector-tag">transform</span><span class="selector-pseudo">:translate(-50</span>%,<span class="selector-tag">-50</span>%) <span class="selector-tag">translateX</span>(125<span class="selector-tag">px</span>) <span class="selector-tag">rotateY</span>(90<span class="selector-tag">deg</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="css"><span class="selector-class">.face6</span>&#123;</span></span><br><span class="line">	background-color: orange;</span><br><span class="line"><span class="css">	<span class="selector-tag">transform</span><span class="selector-pseudo">:translate(-50</span>%,<span class="selector-tag">-50</span>%) <span class="selector-tag">translateZ</span>(125<span class="selector-tag">px</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"face1"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"face2"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"face3"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"face4"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"face5"</span>&gt;</span>5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"face6"</span>&gt;</span>6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>上述效果更复杂的例子</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#ul</span> &#123;</span></span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            margin: 100px auto;</span><br><span class="line">            position: relative;</span><br><span class="line">            transform-style: preserve-3d;</span><br><span class="line">            -webkit-</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-id">#ul</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            position: absolute;</span><br><span class="line">            text-align: center;</span><br><span class="line">            line-height: 200px;</span><br><span class="line">            font-size: 80px;</span><br><span class="line">            font-weight: bold;</span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(1)</span> &#123;</span></span><br><span class="line">            background: rgba(255, 0, 0, 1);</span><br><span class="line">            -webkit-transform: rotateX(90deg) translateZ(100px);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(2)</span> &#123;</span></span><br><span class="line">            background: rgba(0, 255, 255, 1);</span><br><span class="line">            -webkit-transform: rotateX(270deg) translateZ(100px);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(3)</span> &#123;</span></span><br><span class="line">            background: rgba(255, 0, 255, 1);</span><br><span class="line">            -webkit-transform: rotateY(90deg) translateZ(100px);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(4)</span> &#123;</span></span><br><span class="line">            background: rgba(0, 255, 0, 1);</span><br><span class="line">            -webkit-transform: rotateY(270deg) translateZ(100px);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(5)</span> &#123;</span></span><br><span class="line">            background: rgba(200, 200, 0, 1);</span><br><span class="line">            -webkit-transform: translateZ(-100px);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(6)</span> &#123;</span></span><br><span class="line">            background: rgba(0, 0, 255, 1);</span><br><span class="line">            -webkit-transform: translateZ(100px);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.button</span> &#123;</span></span><br><span class="line">            width: 200px;</span><br><span class="line">            margin: 20px auto;</span><br><span class="line">            position: relative;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        input &#123;</span><br><span class="line">            width: 50px;</span><br><span class="line">            height: 30px;</span><br><span class="line">            position: absolute;</span><br><span class="line">            cursor: pointer;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-tag">input</span><span class="selector-pseudo">:nth-child(1)</span> &#123;</span></span><br><span class="line">            left: 100px;</span><br><span class="line">            top: 0;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-tag">input</span><span class="selector-pseudo">:nth-child(2)</span> &#123;</span></span><br><span class="line">            left: 200px;</span><br><span class="line">            top: 50px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-tag">input</span><span class="selector-pseudo">:nth-child(3)</span> &#123;</span></span><br><span class="line">            left: 0px;</span><br><span class="line">            top: 50px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-tag">input</span><span class="selector-pseudo">:nth-child(4)</span> &#123;</span></span><br><span class="line">            left: 100px;</span><br><span class="line">            top: 100px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-tag">input</span><span class="selector-pseudo">:nth-child(5)</span> &#123;</span></span><br><span class="line">            left: 100px;</span><br><span class="line">            top: 50px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="keyword">@keyframes</span> run &#123;</span></span><br><span class="line">            0% &#123;</span><br><span class="line">                -webkit-transform: rotateX(0deg) rotateY(0deg);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            100% &#123;</span><br><span class="line">                -webkit-transform: rotateX(360deg) rotateY(360deg);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"ul"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>5<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>6<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"button"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"上"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"右"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"左"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"下"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"重置"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> ul = <span class="built_in">document</span>.getElementById(<span class="string">'ul'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> inputs = <span class="built_in">document</span>.getElementsByTagName(<span class="string">'input'</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> x = <span class="number">0</span>, y = <span class="number">0</span>;</span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            ul.style.webkitTransition = <span class="string">'-webkit-transform 3s linear'</span>;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">if</span> (inputs[<span class="number">0</span>] == <span class="keyword">this</span>) &#123;</span></span><br><span class="line">                x += 90;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="keyword">if</span> (inputs[<span class="number">1</span>] == <span class="keyword">this</span>) &#123;</span></span><br><span class="line">                y += 90;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="keyword">if</span> (inputs[<span class="number">2</span>] == <span class="keyword">this</span>) &#123;</span></span><br><span class="line">                y -= 90;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="keyword">if</span> (inputs[<span class="number">3</span>] == <span class="keyword">this</span>) &#123;</span></span><br><span class="line">                x -= 90;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="keyword">if</span> (inputs[<span class="number">4</span>] == <span class="keyword">this</span>) &#123;</span></span><br><span class="line">                x = 0;</span><br><span class="line">                y = 0;</span><br><span class="line"><span class="actionscript">                ul.style.webkitTransition = <span class="string">'-webkit-transform 0.1s linear'</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            ul.style.webkitTransform = <span class="string">"rotateX("</span> + x + <span class="string">"deg) rotateY("</span> + y + <span class="string">"deg)"</span>; <span class="comment">//变换效果（沿X轴和Y轴旋转）</span></span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; inputs.length; i++) &#123;</span></span><br><span class="line">            inputs[i].onclick = run;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.addEventListener(<span class="string">'keydown'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">            ul.style.webkitTransition = <span class="string">'-webkit-transform 3s linear'</span>;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">switch</span> (e.keyCode) &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">case</span> <span class="number">37</span>: y -= <span class="number">90</span>;    <span class="comment">//左箭头</span></span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">break</span>;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">case</span> <span class="number">38</span>: x += <span class="number">90</span>;    <span class="comment">//上箭头</span></span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">break</span>;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">case</span> <span class="number">39</span>: y += <span class="number">90</span>;    <span class="comment">//下箭头</span></span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">break</span>;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">case</span> <span class="number">40</span>: x -= <span class="number">90</span>;    <span class="comment">//右箭头</span></span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">break</span>;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">case</span> <span class="number">13</span>: x = <span class="number">0</span>; y = <span class="number">0</span>;    <span class="comment">//回车 （当回车时，迅速转回初始状态）</span></span></span><br><span class="line"><span class="actionscript">                    ul.style.webkitTransition = <span class="string">'-webkit-transform 0.1s linear'</span>;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">break</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            ul.style.webkitTransform = <span class="string">"rotateX("</span> + x + <span class="string">"deg) rotateY("</span> + y + <span class="string">"deg)"</span>; <span class="comment">//变换效果（沿X轴和Y轴旋转）</span></span></span><br><span class="line"><span class="actionscript">        &#125;, <span class="literal">false</span>);</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="4-3-三维透视距离perspective属性"><a href="#4-3-三维透视距离perspective属性" class="headerlink" title="4.3 三维透视距离perspective属性"></a>4.3 三维透视距离perspective属性</h3><p>perspective 属性定义 3D 元素距视图的距离，以像素计。该属性允许您改变 3D 元素查看 3D 元素的视图。</p>
<p>当为元素定义 perspective 属性时，其子元素会获得透视效果，而不是元素本身。</p>
<p>perspective CSS属性确定了z=0平面与用户之间的距离，以便为3d定位的元素提供一些透视图。每个带有z&gt;0的三维元素变得更大;每个z&lt;0的3d元素变得更小。效果的强度由该属性的值决定。</p>
<p><strong>注释：</strong>perspective 属性只影响 3D 转换元素。</p>
<p><strong>提示：</strong>请与 <a href="https://www.w3school.com.cn/cssref/pr_perspective-origin.asp" target="_blank" rel="noopener">perspective-origin</a> 属性一同使用该属性，这样您就能够改变 3D 元素的底部位置。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">perspective: number|none;</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="left">值</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><em>number</em></td>
<td align="left">元素距离视图的距离，以像素计。</td>
</tr>
<tr>
<td align="left">none</td>
<td align="left">默认值。与 0 相同。不设置透视。</td>
</tr>
</tbody></table>
<h2 id="5-选择器"><a href="#5-选择器" class="headerlink" title="5.选择器"></a>5.选择器</h2><p>css3提供的选择器可以让我们的开发，更加方便！</p>
<p>参见1.3节或者<a href="https://www.w3school.com.cn/cssref/css_selectors.asp" target="_blank" rel="noopener">https://www.w3school.com.cn/cssref/css_selectors.asp</a></p>
<h2 id="6-阴影"><a href="#6-阴影" class="headerlink" title="6.阴影"></a>6.阴影</h2><p>以前没有css3的时候，或者需要兼容低版本浏览器的时候，阴影只能用图片实现，但是现在不需要，css3就提供了！</p>
<h3 id="6-1-语法"><a href="#6-1-语法" class="headerlink" title="6-1.语法"></a>6-1.语法</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">box-shadow</span>: 水平阴影的位置 垂直阴影的位置 模糊距离 阴影的大小 阴影的颜色 阴影开始方向（默认是从里往外，设置<span class="selector-tag">inset</span>就是从外往里）;</span><br></pre></td></tr></table></figure>

<h3 id="6-1-栗子"><a href="#6-1-栗子" class="headerlink" title="6-1.栗子"></a>6-1.栗子</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span> </span><br><span class="line">div</span><br><span class="line">&#123;</span><br><span class="line"><span class="css">    <span class="selector-tag">width</span><span class="selector-pseudo">:300px</span>;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">height</span><span class="selector-pseudo">:100px</span>;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">background</span>:<span class="selector-id">#09f</span>;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">box-shadow</span>: 10<span class="selector-tag">px</span> 10<span class="selector-tag">px</span> 5<span class="selector-tag">px</span> <span class="selector-id">#888888</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="7-边框"><a href="#7-边框" class="headerlink" title="7.边框"></a>7.边框</h2><h3 id="7-1-边框图片"><a href="#7-1-边框图片" class="headerlink" title="7-1.边框图片"></a>7-1.边框图片</h3><h4 id="7-1-1-语法"><a href="#7-1-1-语法" class="headerlink" title="7-1-1.语法"></a>7-1-1.语法</h4><p>border-image 属性是一个简写属性，用于设置以下属性：</p>
<ul>
<li>border-image-source</li>
<li>border-image-slice</li>
<li>border-image-width</li>
<li>border-image-outset</li>
<li>border-image-repeat</li>
</ul>
<table>
<thead>
<tr>
<th><em>border-image-source</em></th>
<th>用在边框的图片的路径。</th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><em>border-image-slice</em></td>
<td>图片边框向内偏移。</td>
<td></td>
</tr>
<tr>
<td><em>border-image-width</em></td>
<td>图片边框的宽度。</td>
<td></td>
</tr>
<tr>
<td><em>border-image-outset</em></td>
<td>边框图像区域超出边框的量。</td>
<td></td>
</tr>
<tr>
<td><em>border-image-repeat</em></td>
<td>图像边框是否应平铺(repeated)、铺满(rounded)或拉伸(stretched)。</td>
<td></td>
</tr>
</tbody></table>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* source | slice */</span></span><br><span class="line"><span class="selector-tag">border-image</span>: <span class="selector-tag">linear-gradient</span>(<span class="selector-tag">red</span>, <span class="selector-tag">blue</span>) 27;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* source | slice | repeat */</span></span><br><span class="line">border-image: url("/images/border.png") 27 space;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* source | slice | width */</span></span><br><span class="line">border-image: linear-gradient(red, blue) 27 / 35px;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* source | slice | width | outset | repeat */</span></span><br><span class="line">border-image: url("/images/border.png") 27 23 / 50px 30px / 1rem round space;</span><br></pre></td></tr></table></figure>

<h4 id="7-1-2-栗子"><a href="#7-1-2-栗子" class="headerlink" title="7-1-2.栗子"></a>7-1-2.栗子</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            border: 15px solid transparent;</span><br><span class="line">            border-image: url(https://www.runoob.com/images/border.png) 27 round;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="7-2-边框圆角"><a href="#7-2-边框圆角" class="headerlink" title="7-2.边框圆角"></a>7-2.边框圆角</h3><h4 id="7-2-1-语法"><a href="#7-2-1-语法" class="headerlink" title="7-2-1.语法"></a>7-2-1.语法</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">border-radius: n1,n2,n3,n4;</span><br><span class="line">border-radius: n1,n2,n3,n4&#x2F;n1,n2,n3,n4;</span><br><span class="line">&#x2F;*n1-n4四个值的顺序是：左上角，右上角，右下角，左下角。*&#x2F;</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure>

<h4 id="7-2-2-栗子"><a href="#7-2-2-栗子" class="headerlink" title="7-2-2.栗子"></a>7-2-2.栗子</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span> </span><br><span class="line">div</span><br><span class="line">&#123;</span><br><span class="line"><span class="css">    <span class="selector-tag">border</span><span class="selector-pseudo">:2px</span> <span class="selector-tag">solid</span> <span class="selector-id">#a1a1a1</span>;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">padding</span><span class="selector-pseudo">:10px</span> 40<span class="selector-tag">px</span>; </span></span><br><span class="line"><span class="css">    <span class="selector-tag">background</span>:<span class="selector-id">#dddddd</span>;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">text-align</span><span class="selector-pseudo">:center</span>;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">width</span><span class="selector-pseudo">:300px</span>;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">border-radius</span><span class="selector-pseudo">:25px</span> 0 25<span class="selector-tag">px</span> 0;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>border-radius<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="8-背景"><a href="#8-背景" class="headerlink" title="8.背景"></a>8.背景</h2><p>这一块主要讲css3提供背景的三个属性</p>
<h3 id="background-clip"><a href="#background-clip" class="headerlink" title="background-clip"></a>background-clip</h3><p>background-clip CSS属性设置元素的背景是否扩展到其边框框、填充框或内容框之下。</p>
<p>border-box<br>背景延伸到边界的外部边缘(但在z顺序中是在边界下面)。<br>padding-box<br>背景延伸到填充的外部边缘。边界下面没有背景。<br>Content-box<br>背景是在内容框内绘制的。<br>text<br>背景是在前景文本中绘制的。</p>
<h3 id="background-origin"><a href="#background-origin" class="headerlink" title="background-origin"></a>background-origin</h3><p>background-origin CSS属性设置背景的原点:从边框开始，在边框内，或在填充内</p>
<p>border-box<br>背景位置相对于边框框。<br>padding-box<br>背景位置相对于填充框。<br>content-box<br>背景位置相对于内容框。</p>
<h3 id="background-size"><a href="#background-size" class="headerlink" title="background-size"></a>background-size</h3><p>background-size CSS属性设置元素背景图像的大小。图像可以保留其自然大小、拉伸或约束以适应可用空间。</p>
<p><strong>contain</strong><br>在不裁剪或拉伸图像的情况下，使图像尽可能大。<br><strong>cover</strong><br>在不拉伸图像的情况下，将图像缩放到尽可能大的尺寸。如果图像的比例与元素不同，它会被垂直或水平裁剪，这样就不会留下空白。<br><strong>auto</strong><br>将背景图像按相应的方向缩放，以保持其固有比例。<br><length><br>将相应维度中的图像拉伸到指定的长度。不允许有负值。<br>&lt; percentage&gt;百分比<br>将相应尺寸的图像拉伸到背景定位区域的指定百分比。背景定位区域由background-origin的值(默认情况下，填充框)决定。但是，如果背景的background-attachment值是固定的，那么定位区域就是整个视口。不允许有负值。</p>
<h3 id="多张背景图"><a href="#多张背景图" class="headerlink" title="多张背景图"></a>多张背景图</h3><p>栗子</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#box</span> &#123;</span></span><br><span class="line">            width: 600px;</span><br><span class="line">            height: 600px;</span><br><span class="line"><span class="css">            <span class="selector-tag">border</span>: 15<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-tag">rgba</span>(0,0,0,<span class="selector-class">.3</span>);</span></span><br><span class="line">            padding: 20px;</span><br><span class="line">            background: top / contain no-repeat url(https://dss2.bdstatic.com/70cFvnSh_Q1YnxGkpoWK1HF6hhy/it/u=3252521864,872614242&amp;fm=26&amp;gp=0.jpg),</span><br><span class="line">            bottom / contain no-repeat url(https://ss0.bdstatic.com/70cFuHSh_Q1YnxGkpoWK1HF6hhy/it/u=2853553659,1775735885&amp;fm=26&amp;gp=0.jpg);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="9-倒影box-reflect"><a href="#9-倒影box-reflect" class="headerlink" title="9.倒影box-reflect"></a>9.倒影box-reflect</h2><p>比如我们要实现下述效果</p>
<p><img src="https://www.w3cplus.com/sites/default/files/styles/print_image/public/blogs/2014/1405/box-reflect-1.jpg" alt=""></p>
<p>在早前要实现这样的效果我们都必须借助于类似于Photoshop这样的制作图软件来实现，然后通过引入一张image。那么除了图片，我们有没有别的方法能实现呢？值得庆幸的是，到目前为之，CSS3有一个属性<code>box-reflect</code>可以实现。那么今天我们要给大家介绍的就是这个属性的应用。</p>
<h3 id="9-1-语法"><a href="#9-1-语法" class="headerlink" title="9.1 语法"></a>9.1 语法</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">box-reflect：none | &lt;direction&gt; &lt;offset&gt;? &lt;mask-box-image&gt;?</span><br></pre></td></tr></table></figure>

<p>由于此属性并不是W3C标准属性，在具体使用之时，还是需要添加浏览器的私有属性，根据浏览器的兼容性，使用<code>box-reflect</code>时需要添加<code>-webkit</code>和前缀：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">-webkit-box-reflect：none | &lt;direction&gt; &lt;offset&gt;? &lt;mask-box-image&gt;?</span><br><span class="line">box-reflect：none | &lt;direction&gt; &lt;offset&gt;? &lt;mask-box-image&gt;?</span><br></pre></td></tr></table></figure>

<p>可惜的是在Firefox下并不支持这个属性，不过值得庆幸的是，在Firefox下可以通过<a href="https://developer.mozilla.org/en/CSS/-moz-element" target="_blank" rel="noopener"><code>-moz-element()</code></a>来模拟实现</p>
<p>其主要包括以下几个属性值：</p>
<ul>
<li><p><strong><code>none</code>:</strong>此值为<code>box-reflect</code>默认值，表示无倒影效果；</p>
</li>
<li><direction>

<p>此值表示</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">box-reflect</span><br></pre></td></tr></table></figure>

<p>生成倒影的方向，主要包括以下几个值：</p>
<ul>
<li><strong><code>above</code>:</strong>表示生成的倒影在对象（原图）的上方；</li>
<li><strong><code>below</code>:</strong>表示生成的倒影在对象（原图）的下方；</li>
<li><strong><code>left</code>:</strong>表示生成的倒影在对象(原图)的左侧；</li>
<li><strong><code>right</code>:</strong>表示生成的倒影在对象(原图)的右侧；</li>
</ul>
</li>
<li><p><offset> 用来设置生成倒影与对象（原图）之间的间距，其取值可以是固定的像素值，也可以是百分比值，如：</p>
<ul>
<li><strong>:</strong>使用长度值来设置生成的倒影与原图之间的间距，只要是CSS中的长度单位都可以，此值可以使用负值；</li>
<li><strong>:</strong>使用百分比来设置生成的倒影与原图之间的间距，此值也可以使用负值</li>
</ul>
</li>
<li><p><strong><mask-box-image></strong>用来设置倒影的遮罩效果，可以是背景图片，也可以是渐变生成的背景图像。</p>
</li>
</ul>
<h3 id="9-2-倒影的方向"><a href="#9-2-倒影的方向" class="headerlink" title="9.2 倒影的方向"></a>9.2 倒影的方向</h3><p><code>box-reflect</code>倒影方向跟我们CSS中的<code>margin</code>和<code>padding</code>类似，包括上、右、下、和左四个方向，每个方向都可以使用关键词来定义。下面我们能过简单的示例向大家演示这样的效果</p>
<p><strong>倒影在对象的上方</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.box-reflect</span> &#123;</span></span><br><span class="line">            position: absolute;</span><br><span class="line">            top: 50%;</span><br><span class="line">            left: 50%;</span><br><span class="line">            transform: translate(-50%, -50%);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.box-reflect</span> <span class="selector-tag">img</span> &#123; <span class="attribute">-webkit-box-reflect</span>: above; <span class="attribute">box-reflect</span>: above; &#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-reflect"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://img4.imgtn.bdimg.com/it/u=2853553659,1775735885&amp;fm=26&amp;gp=0.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">height</span>=<span class="string">"200"</span>/&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>倒影使用图片遮罩</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.box-reflect</span> &#123;</span></span><br><span class="line">            position: absolute;</span><br><span class="line">            top: 50%;</span><br><span class="line">            left: 50%;</span><br><span class="line">            transform: translate(-50%, -50%);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.box-reflect</span> <span class="selector-tag">img</span> &#123; </span></span><br><span class="line">            -webkit-box-reflect: above 0 url(https://user-gold-cdn.xitu.io/2017/11/15/15fbf409f492ec3e?imageView2/0/w/1280/h/960/format/webp/ignore-error/1); </span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-reflect"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://img4.imgtn.bdimg.com/it/u=2853553659,1775735885&amp;fm=26&amp;gp=0.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">height</span>=<span class="string">"200"</span>/&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="10-文字"><a href="#10-文字" class="headerlink" title="10.文字"></a>10.文字</h2><h3 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h3><p><strong>word-break</strong></p>
<p>word-break CSS属性设置换行符是否出现在文本会溢出其内容框的地方。</p>
<p><strong>normal</strong><br>使用默认的换行规则。<br><strong>break-all</strong><br>为了防止溢出，应该在任何两个字符之间插入断字(不包括中文/日文/韩文文本)。<br><strong>keep-all</strong><br>中文/日文/韩文(CJK)文本不应使用断字。非cjk文本行为与正常情况相同。<br><strong>break-word</strong><br>与word-break: normal和overflow-wrap: anywhere具有相同的效果，而与overflow-wrap属性的实际值无关。</p>
<h3 id="超出省略号"><a href="#超出省略号" class="headerlink" title="超出省略号"></a>超出省略号</h3><p>这个其实有三行代码，禁止换行，超出隐藏，超出省略号<br>html</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div&gt;This is some long text that will not fit in the box&lt;&#x2F;div&gt;复制代码</span><br></pre></td></tr></table></figure>

<p>css</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">200px</span>; </span><br><span class="line">    <span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#000000</span>;</span><br><span class="line">    <span class="attribute">overflow</span>:hidden;</span><br><span class="line">    <span class="attribute">white-space</span>:nowrap; </span><br><span class="line">    <span class="attribute">text-overflow</span>:ellipsis;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="多行超出省略号"><a href="#多行超出省略号" class="headerlink" title="多行超出省略号"></a>多行超出省略号</h3><p>超出省略号。这个对于大家来说，不难！但是以前如果是多行超出省略号，就只能用js模拟！现在css3提供了多行省略号的方法！遗憾就是这个暂时只支持webkit浏览器！</p>
<p>代码如下</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span>    </span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span> </span><br><span class="line">div</span><br><span class="line">&#123;</span><br><span class="line"><span class="css">    <span class="selector-tag">width</span><span class="selector-pseudo">:400px</span>;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">margin</span><span class="selector-pseudo">:0</span> <span class="selector-tag">auto</span>;</span></span><br><span class="line">    overflow : hidden;</span><br><span class="line"><span class="css">    <span class="selector-tag">border</span><span class="selector-pseudo">:1px</span> <span class="selector-tag">solid</span> <span class="selector-id">#ccc</span>;</span></span><br><span class="line">    text-overflow: ellipsis;</span><br><span class="line">    display: -webkit-box;</span><br><span class="line">    -webkit-line-clamp: 2;</span><br><span class="line">    -webkit-box-orient: vertical;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>这里将会超出隐藏这里将会超出隐藏这里将会超出隐藏这里将会超出隐藏这里将会超出隐藏这里将会超出隐藏这里将会超出隐藏这里将会超出隐藏这里将会超出隐藏这里将会超出隐藏这里将会超出隐藏这里将会超出隐藏这里将会超出隐藏这里将会超出隐藏这里将会超出隐藏这里将会超出隐藏这里将会超出隐藏这里将会超出隐藏这里将会超出隐藏这里将会超出隐藏这里将会超出隐藏这里将会超出隐藏这里将会超出隐藏这里将会超出隐藏这里将会超出隐藏这里将会超出隐藏这里将会超出隐藏这里将会超出隐藏这里将会超出隐藏这里将会超出隐藏这里将会超出隐藏这里将会超出隐藏这里将会超出隐藏这里将会超出隐藏这里将会超出隐藏这里将会超出隐藏这里将会超出隐藏<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>这样发现边框贴着难看，要撑开一点，但是撑开上下边框不要使用padding</p>
<p>正确姿势是这样写</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        p &#123;</span><br><span class="line">            display: -webkit-box;</span><br><span class="line">            -webkit-line-clamp: 5;</span><br><span class="line">            -webkit-box-orient: vertical;</span><br><span class="line">            overflow: hidden;</span><br><span class="line">            text-overflow: ellipsis;</span><br><span class="line"><span class="css">            <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-tag">rgba</span>(0, 0, 0, <span class="selector-class">.3</span>);</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#555</span>;</span></span><br><span class="line">            padding: 0 20px;</span><br><span class="line">            line-height: 30px;</span><br><span class="line">            height: 150px;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        Lorem ipsum dolor, sit amet consectetur adipisicing elit. Laudantium, nam minima? Adipisci laboriosam accusantium molestias numquam necessitatibus ullam vero dolorem excepturi reiciendis voluptate veniam, animi tempora, at blanditiis autem perferendis?</span><br><span class="line">        Odio natus accusantium at obcaecati sequi dolor reiciendis minus quisquam pariatur, enim magnam explicabo, alias ratione aliquid minima ea doloribus quae repellendus excepturi perspiciatis id expedita iusto mollitia! Magni, labore?</span><br><span class="line">        Mollitia sed magnam, minus facere veritatis praesentium quia error animi rerum perferendis dolores cupiditate et voluptates dolore nostrum maiores a sequi repudiandae cumque earum veniam vero soluta. Nisi, quae vitae!</span><br><span class="line">        Mollitia placeat quod enim quia aperiam ab hic iste incidunt nostrum velit pariatur, inventore doloremque. Sit explicabo quaerat perferendis dolorum rem. Vel alias possimus laboriosam quidem distinctio natus commodi molestias.</span><br><span class="line">        Assumenda, rem alias maiores quidem dolore ratione aliquid aspernatur at! Inventore deserunt corrupti quo repellendus laboriosam sit aliquam nulla non magni cum ipsum, voluptatibus officia ab commodi assumenda asperiores fuga.</span><br><span class="line">        Voluptates, velit dolor? Ut debitis perferendis ducimus natus eligendi molestiae dolores porro facere eveniet, nisi sunt quo! Rem eum ad eius, deleniti hic pariatur earum mollitia animi maiores rerum perferendis!</span><br><span class="line">        Excepturi eaque illum at quibusdam dolore voluptatum recusandae ducimus accusantium corrupti, vero quos atque nam suscipit, officiis perspiciatis quaerat a. Et rerum nulla quod expedita id est libero officiis voluptate?</span><br><span class="line">        Doloremque consequuntur sit tempore, ratione commodi praesentium magnam magni ex a, facere quae, et assumenda eligendi culpa aperiam! Officiis soluta iure aspernatur libero esse voluptas provident quod consequatur nulla impedit.</span><br><span class="line">        Quo non, veniam nemo labore corrupti voluptas adipisci laboriosam nisi obcaecati eaque laborum facere sed accusantium? Vitae, quidem reiciendis. Maxime amet dicta iusto quisquam alias assumenda ullam labore quibusdam deleniti!</span><br><span class="line">        Odit dolores, enim et libero quo magni, reprehenderit eos quidem esse similique explicabo! Possimus ex, harum, quod temporibus numquam itaque perspiciatis quia inventore perferendis adipisci voluptatem rem quae alias sunt!</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="文字阴影"><a href="#文字阴影" class="headerlink" title="文字阴影"></a>文字阴影</h3><p>语法：text-shadow:水平阴影，垂直阴影，模糊的距离，以及阴影的颜色。<br>栗子：<code>text-shadow: 0 0 10px #f00;</code></p>
<h2 id="11-颜色"><a href="#11-颜色" class="headerlink" title="11.颜色"></a>11.颜色</h2><p>这个其实就是css3提供了新的颜色表示方法。</p>
<h3 id="rgba"><a href="#rgba" class="headerlink" title="rgba"></a>rgba</h3><p>一个是rgba（rgb为颜色值，a为透明度）</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">color</span>: <span class="selector-tag">rgba</span>(255,00,00,1);</span><br><span class="line"><span class="selector-tag">background</span>: <span class="selector-tag">rgba</span>(00,00,00,<span class="selector-class">.5</span>);</span><br></pre></td></tr></table></figure>

<h3 id="hsla"><a href="#hsla" class="headerlink" title="hsla"></a>hsla</h3><p>h:色相”，“s：饱和度”，“l：亮度”，“a：透明度”</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">color: hsla( 112, 72%, 33%, 0.68);</span><br><span class="line">background-color: hsla( 49, 65%, 60%, 0.68);复制代码</span><br></pre></td></tr></table></figure>

<h2 id="12-渐变"><a href="#12-渐变" class="headerlink" title="12.渐变"></a>12.渐变</h2><p>css3的渐变可以说是一大亮点，提供了<strong>线性渐变</strong>，<strong>径向渐变</strong><br>渐变这一部分，由于用法灵活，功能也强大，这个写起来很长，写一点又感觉没什么意思，我这里贴几个链接教程给大家，在文章我不多说了，毕竟我也是从那几个地方学的，他们写得也是比我好，比我详细！</p>
<p><a href="http://dev.w3.org/csswg/css3-images/" target="_blank" rel="noopener">CSS3 Gradient</a>分为<a href="http://lists.w3.org/Archives/Public/www-style/2011Apr/0083.html" target="_blank" rel="noopener">linear-gradient</a>(线性渐变)和<a href="http://lists.w3.org/Archives/Public/www-style/2011Feb/0537.html" target="_blank" rel="noopener">radial-gradient</a>(径向渐变)。而我们今天主要是针对线性渐变来剖析其具体的用法。为了更好的应用<a href="http://dev.w3.org/csswg/css3-images/" target="_blank" rel="noopener">CSS3 Gradient</a>,我们需要先了解一下目前的几种现代浏览器的内核，主流内容主要有<a href="http://www.mozilla.org/" target="_blank" rel="noopener">Mozilla</a>（Gecko）（熟悉的有Firefox，Flock等浏览器）、<a href="http://www.webkit.org/" target="_blank" rel="noopener">WebKit</a>（熟悉的有Safari、Chrome等浏览器）、<a href="http://www.opera.com/" target="_blank" rel="noopener">Opera</a>(presto)（Opera浏览器）、Trident（讨厌的IE浏览器）。本文照常忽略IE不管，我们主要看看在Mozilla、Webkit、Opera下的应用，当然在IE下也可以实现，他需要通过IE特有的滤镜来实现。</p>
<h3 id="12-1-线性渐变在Mozilla下的应用"><a href="#12-1-线性渐变在Mozilla下的应用" class="headerlink" title="12.1 线性渐变在Mozilla下的应用"></a>12.1 <strong>线性渐变在Mozilla下的应用</strong></h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">-moz-linear-gradient</span>( <span class="selector-attr">[&lt;point&gt; || &lt;angle&gt;,]</span>? &lt;<span class="selector-tag">stop</span>&gt;, &lt;<span class="selector-tag">stop</span>&gt; <span class="selector-attr">[, &lt;stop&gt;]</span>* )</span><br></pre></td></tr></table></figure>

<p><strong>参数：</strong>其共有三个参数，第一个参数表示线性渐变的方向，top是从上到下、left是从左到右，如果定义成left top，那就是从左上角到右下角。第二个和第三个参数分别是起点颜色和终点颜色。你还可以在它们之间插入更多的参数，表示多种颜色的渐变。如图所示：</p>
<p><img src="http://www.w3cplus.com/sites/default/files/moz-gradient.png" alt="img"></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.linear-box</span> &#123;</span></span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            background: -moz-linear-gradient(left top, red, green);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"linear-box"</span>&gt;</span></span><br><span class="line">        linear-gradient</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="12-2-线性渐变在Webkit下的应用"><a href="#12-2-线性渐变在Webkit下的应用" class="headerlink" title="12.2 线性渐变在Webkit下的应用"></a>12.2 <strong>线性渐变在Webkit下的应用</strong></h3><p><strong>语法：</strong></p>
<p><img src="http://www.w3cplus.com/sites/default/files/webkit-gradient.png" alt="img"></p>
<p><img src="http://www.w3cplus.com/sites/default/files/wekit-gradient-new.png" alt="img"></p>
<p>参数：**-webkit-gradient是webkit引擎对渐变的实现参数，一共有五个。第一个参数表示渐变类型（type），可以是linear（线性渐变）或者radial（径向渐变）。第二个参数和第三个参数，都是一对值，分别表示渐变起点和终点。这对值可以用坐标形式表示，也可以用关键值表示，比如 left top（左上角）和left bottom（左下角）。第四个和第五个参数，分别是两个color-stop函数。color-stop函数接受两个参数，第一个表示渐变的位置，0为起点，0.5为中点，1为结束点；第二个表示该点的颜色。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">background</span>: <span class="selector-tag">-webkit-gradient</span>(<span class="selector-tag">linear</span>,<span class="selector-tag">center</span> <span class="selector-tag">top</span>,<span class="selector-tag">center</span> <span class="selector-tag">bottom</span>,<span class="selector-tag">from</span>(<span class="selector-id">#ccc</span>), <span class="selector-tag">to</span>(<span class="selector-id">#000</span>));</span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">-webkit-linear-gradient</span>(<span class="selector-tag">top</span>,<span class="selector-id">#ccc</span>,<span class="selector-id">#000</span>);</span><br></pre></td></tr></table></figure>

<h3 id="12-3-线性渐变在Opera下的应用"><a href="#12-3-线性渐变在Opera下的应用" class="headerlink" title="12.3 线性渐变在Opera下的应用"></a>12.3 <strong>线性渐变在Opera下的应用</strong></h3><p>参数：-o-linear-gradient有三个参数。第一个参数表示线性渐变的方向，top是从上到下、left是从左到右，如果定义成left top，那就是从左上角到右下角。第二个和第三个参数分别是起点颜色和终点颜色。你还可以在它们之间插入更多的参数，表示多种颜色的渐变。（注：Opera支持的版本有限，本例测试都是在Opera11.1版本下，后面不在提示），如图所示：</p>
<p><img src="http://www.w3cplus.com/sites/default/files/opera-gradient.png" alt="img"></p>
<p>示例：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">background</span>: <span class="selector-tag">-o-linear-gradient</span>(<span class="selector-tag">top</span>,<span class="selector-id">#ccc</span>, <span class="selector-id">#000</span>);</span><br></pre></td></tr></table></figure>

<h3 id="12-4-线性渐变在Trident-IE-下的应用"><a href="#12-4-线性渐变在Trident-IE-下的应用" class="headerlink" title="12.4 线性渐变在Trident (IE)下的应用"></a>12.4 <strong>线性渐变在Trident (IE)下的应用</strong></h3><p><strong>语法：</strong></p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">filter: progid:DXImageTransform.Microsoft.gradient(GradientType=0, startColorstr=#1471da, endColorstr=#1C85FB);/*IE&lt;9&gt;*/</span><br><span class="line">-ms-filter: "progid:DXImageTransform.Microsoft.gradient (GradientType=0, startColorstr=#1471da, endColorstr=#1C85FB)";/*IE8+*/</span><br></pre></td></tr></table></figure>

<p>IE依靠滤镜实现渐变。startColorstr表示起点的颜色，endColorstr表示终点颜色。GradientType表示渐变类型，0为缺省值，表示垂直渐变，1表示水平渐变。如图所示：</p>
<p><img src="http://www.w3cplus.com/sites/default/files/ie-gradient-filter.png" alt="img"></p>
<h3 id="12-5-重复线性渐变"><a href="#12-5-重复线性渐变" class="headerlink" title="12.5 重复线性渐变"></a>12.5 重复线性渐变</h3><p>使用repeating-linear-gradient来实现重复线性渐变</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">repeating-linear-gradient</span>(-<span class="number">45deg</span>,</span><br><span class="line">      transparent,</span><br><span class="line">      transparent <span class="number">20px</span>,</span><br><span class="line">      black <span class="number">20px</span>,</span><br><span class="line">      black <span class="number">40px</span>);</span><br><span class="line">  <span class="comment">/* with multiple color stop lengths */</span></span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">repeating-linear-gradient</span>(-<span class="number">45deg</span>, </span><br><span class="line">      transparent <span class="number">0</span> <span class="number">20px</span>, </span><br><span class="line">      black <span class="number">20px</span> <span class="number">40px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="12-6-径向渐变"><a href="#12-6-径向渐变" class="headerlink" title="12.6 径向渐变"></a>12.6 径向渐变</h3><p>CSS3径向渐变是圆形或椭圆形渐变。颜色不再沿着一条直线轴变化，而是从一个起点朝所有方向混合。</p>
<p>radial-gradient() 参数的组成部分主要包括五大部分：<strong>形状、大小、圆心位置、颜色和颜色位置</strong>。</p>
<p>接下来我将以具体实例对这五大部分逐一进行讲解。首先，定义一个200*150的矩形：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">width: 200px; height: 150px;</span><br></pre></td></tr></table></figure>

<h4 id="一、传入两个或多个颜色参数"><a href="#一、传入两个或多个颜色参数" class="headerlink" title="一、传入两个或多个颜色参数"></a>一、传入两个或多个颜色参数</h4><p>同样以红色到黄色渐变为例：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">background</span>: <span class="selector-tag">radial-gradient</span>(<span class="selector-id">#f00</span>,<span class="selector-id">#ff0</span>);</span><br></pre></td></tr></table></figure>

<p>显示效果很简单，就是一个以矩形中心点为圆心、矩形宽高为横纵向直径、颜色由红到黄向外的渐变</p>
<p>当然，与线性渐变类似的，同样可以传入更多的颜色参数，例如：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">background</span>: <span class="selector-tag">radial-gradient</span>(<span class="selector-id">#f00</span>,<span class="selector-id">#ff0</span>,<span class="selector-id">#0f0</span>);</span><br></pre></td></tr></table></figure>

<h4 id="二、传入颜色位置参数"><a href="#二、传入颜色位置参数" class="headerlink" title="二、传入颜色位置参数"></a>二、传入颜色位置参数</h4><p>该参数紧跟与颜色值之后，例如：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">radial-gradient</span>(<span class="selector-id">#f00</span> 0,<span class="selector-id">#ff0</span> 100%);</span><br></pre></td></tr></table></figure>

<p>以上效果同图一，同样可以类比线性渐变，具体不再赘述。</p>
<h4 id="三、传入渐变形状参数"><a href="#三、传入渐变形状参数" class="headerlink" title="三、传入渐变形状参数"></a>三、传入渐变形状参数</h4><p>渐变形状有两种：圆（<code>cicle</code>）和椭圆（<code>ellipse</code>）。例如：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">background</span>: <span class="selector-tag">radial-gradient</span>(<span class="selector-tag">circle</span>,<span class="selector-id">#f00</span> 0,<span class="selector-id">#ff0</span> 100%);</span><br></pre></td></tr></table></figure>

<p>显示效果是一个圆形状的渐变：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">background</span>: <span class="selector-tag">radial-gradient</span>(<span class="selector-tag">ellipse</span>,<span class="selector-id">#f00</span> 0,<span class="selector-id">#ff0</span> 100%);</span><br></pre></td></tr></table></figure>

<p>显示效果是一个椭圆形状的渐变：</p>
<h4 id="四、传入渐变大小参数"><a href="#四、传入渐变大小参数" class="headerlink" title="四、传入渐变大小参数"></a>四、传入渐变大小参数</h4><h5 id="1-具体数值（或百分比）"><a href="#1-具体数值（或百分比）" class="headerlink" title="1. 具体数值（或百分比）"></a>1. 具体数值（或百分比）</h5><p>除了可以像上述显式地声明渐变形状，我们也可以通过传入渐变大小参数来确定形状，例如：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">background</span>: <span class="selector-tag">radial-gradient</span>(60<span class="selector-tag">px</span>,<span class="selector-id">#f00</span> 0,<span class="selector-id">#ff0</span> 100%);</span><br></pre></td></tr></table></figure>

<p>此处只传入一个大小参数，则表示该渐变形状为圆，并且<strong>半径</strong>大小为60px</p>
<p>若传入两个大小不同的参数，则表示该渐变形状为椭圆，例如：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">background</span>: <span class="selector-tag">radial-gradient</span>(50% 60<span class="selector-tag">px</span>,<span class="selector-id">#f00</span> 0,<span class="selector-id">#ff0</span> 100%);</span><br></pre></td></tr></table></figure>

<p>效果为长半轴为100px（元素宽度的50%）、短半轴为60px的椭圆形渐变</p>
<p>我们也可以在声明渐变形状的同时在其后紧跟渐变大小，中间用空格隔开</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">background</span>: <span class="selector-tag">radial-gradient</span>(<span class="selector-tag">circle</span> 60<span class="selector-tag">px</span>,<span class="selector-id">#f00</span> 0,<span class="selector-id">#ff0</span> 100%);</span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">background</span>: <span class="selector-tag">radial-gradient</span>(<span class="selector-tag">ellipse</span> 50% 60<span class="selector-tag">px</span>,<span class="selector-id">#f00</span> 0,<span class="selector-id">#ff0</span> 100%);</span><br></pre></td></tr></table></figure>

<p>需要特别注意的是，<strong>若渐变形状为圆形，则该渐变大小不能为百分数，而椭圆既可以为具体数值也可以为百分数</strong>，个人认为或许是因为圆形半径若为百分数的话就无法确定是以元素的宽为标准还是以高为标准了。</p>
<h5 id="2-大小声明"><a href="#2-大小声明" class="headerlink" title="2. 大小声明"></a>2. 大小声明</h5><p>一共有以下四种：</p>
<blockquote>
<p>closest-side （指定径向渐变的半径长度为从圆心到离圆心最近的边）<br> closest-corner （指定径向渐变的半径长度为从圆心到离圆心最近的角）<br> farthest-side （指定径向渐变的半径长度为从圆心到离圆心最远的边）<br> farthest-corner （指定径向渐变的半径长度为从圆心到离圆心最远的角）</p>
</blockquote>
<p>以 <code>closest-side</code> 为例：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">background</span>: <span class="selector-tag">radial-gradient</span>(<span class="selector-tag">circle</span> <span class="selector-tag">closest-side</span>,<span class="selector-id">#f00</span> 0,<span class="selector-id">#ff0</span> 100%);</span><br></pre></td></tr></table></figure>

<h4 id="五、传入渐变圆心位置参数"><a href="#五、传入渐变圆心位置参数" class="headerlink" title="五、传入渐变圆心位置参数"></a>五、传入渐变圆心位置参数</h4><h5 id="1-具体数值（或百分数）"><a href="#1-具体数值（或百分数）" class="headerlink" title="1. 具体数值（或百分数）"></a>1. 具体数值（或百分数）</h5><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">background</span>: <span class="selector-tag">radial-gradient</span>(<span class="selector-tag">circle</span> <span class="selector-tag">farthest-side</span> <span class="selector-tag">at</span> 0 0,<span class="selector-id">#f00</span> 0%,<span class="selector-id">#ff0</span> 100%);</span><br></pre></td></tr></table></figure>

<p>效果为圆心位置位于元素左上角，半径为元素宽度的圆形渐变</p>
<h5 id="2-方位名称"><a href="#2-方位名称" class="headerlink" title="2. 方位名称"></a>2. 方位名称</h5><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">background</span>: <span class="selector-tag">radial-gradient</span>(<span class="selector-tag">circle</span> <span class="selector-tag">closest-side</span> <span class="selector-tag">at</span> <span class="selector-tag">center</span>,<span class="selector-id">#f00</span> 0,<span class="selector-id">#ff0</span> 100%);</span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">background</span>: <span class="selector-tag">radial-gradient</span>(<span class="selector-tag">circle</span> <span class="selector-tag">farthest-side</span> <span class="selector-tag">at</span> <span class="selector-tag">top</span> <span class="selector-tag">left</span>,<span class="selector-id">#f00</span> 0,<span class="selector-id">#ff0</span> 100%);</span><br></pre></td></tr></table></figure>

<p><strong>注意：</strong> 圆心位置参数一定要置于<code>radial-gradient()</code>第一个参数的末尾，顺序千万不能放反了哦~~</p>
<h4 id="六、重复渐变"><a href="#六、重复渐变" class="headerlink" title="六、重复渐变"></a>六、重复渐变</h4><p>虽然上面已经讲完径向渐变的五大组成部分，但是，与线性渐变一样，径向渐变也同样还存在着重复渐变，我们可以用<code>repeating-radial-gradient()</code>来实现。例如：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">background</span>: <span class="selector-tag">repeating-radial-gradient</span>(<span class="selector-tag">circle</span> <span class="selector-tag">at</span> <span class="selector-tag">center</span>,<span class="selector-id">#f00</span> 0,<span class="selector-id">#f00</span> 10%,<span class="selector-id">#ff0</span> 10%,<span class="selector-id">#ff0</span> 20%);</span><br></pre></td></tr></table></figure>

<h2 id="13-Filter（滤镜）"><a href="#13-Filter（滤镜）" class="headerlink" title="13.Filter（滤镜）"></a>13.Filter（滤镜）</h2><p>css3的滤镜filter属性，可以对网页中的图片进行类似Photoshop图片处理的效果。</p>
<p>浏览器支持情况：只有IE浏览器不支持filter（滤镜）属性，为了兼容低版本的safari和google浏览器，需要加上前缀-webkit-</p>
<p><strong>filter（滤镜）属性现在规范中支持的效果有：</strong></p>
<ol>
<li>grayscale 灰度（值为0-1之间的小数）</li>
</ol>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">filter</span><span class="selector-pseudo">:grayscale(1)</span>; </span><br><span class="line"></span><br><span class="line"><span class="selector-tag">-webkit-filter</span><span class="selector-pseudo">:grayscale(1)</span>;</span><br></pre></td></tr></table></figure>

<p>0表示灰度为0%，显示原图，1 表示灰度为100%灰色。</p>
<ol start="2">
<li>sepia 褐色（值为0-1之间的小数）</li>
</ol>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">filter</span><span class="selector-pseudo">:sepia(1)</span>; </span><br><span class="line"></span><br><span class="line"><span class="selector-tag">-webkit-filter</span><span class="selector-pseudo">:sepia(1)</span>;</span><br></pre></td></tr></table></figure>

<p>0表示褐色度为0%，显示原图，1 表示褐色度为100%显示褐色。</p>
<ol start="3">
<li>saturate 饱和度（值为num）</li>
</ol>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">filter</span><span class="selector-pseudo">:saturate(1.8)</span>;</span><br><span class="line"></span><br><span class="line"> <span class="selector-tag">-webkit-filter</span><span class="selector-pseudo">:saturate(1.8)</span>;</span><br></pre></td></tr></table></figure>

<p>0表示饱和为0，图片显示黑白色，0.5表示饱和度为原图的一半，1表示饱和度等于原图，数值大于1表示饱和度加强。</p>
<ol start="4">
<li>hue-rotate 色相旋转（值为angle）角度deg</li>
</ol>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">filter</span><span class="selector-pseudo">:hue-rotate(60deg)</span>;</span><br><span class="line"></span><br><span class="line"> <span class="selector-tag">-webkit-filter</span><span class="selector-pseudo">:hue-rotate(60deg)</span>;</span><br></pre></td></tr></table></figure>

<p>表示色相旋转的具体角度。</p>
<ol start="5">
<li>invert 反色（值为0-1之间的小数）</li>
</ol>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">filter</span><span class="selector-pseudo">:invert(1)</span>; </span><br><span class="line"></span><br><span class="line"><span class="selector-tag">-webkit-filter</span><span class="selector-pseudo">:invert(1)</span>;</span><br></pre></td></tr></table></figure>

<p>0表示不反色显示原图，1表示100%完全反色。</p>
<ol start="6">
<li>opacity 透明度（值为0-1之间的小数）</li>
</ol>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">filter</span><span class="selector-pseudo">:opacity(0.5)</span>; </span><br><span class="line"></span><br><span class="line"><span class="selector-tag">-webkit-filter</span><span class="selector-pseudo">:opacity(0.5)</span>;</span><br></pre></td></tr></table></figure>

<p>0表示完全透明，0.5表示半透明，1表示100%完全不透明。</p>
<ol start="7">
<li>brightness 亮度（值为num）</li>
</ol>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">filter</span><span class="selector-pseudo">:brightness(2)</span>; </span><br><span class="line"></span><br><span class="line"><span class="selector-tag">-webkit-filter</span><span class="selector-pseudo">:brightness(2)</span>;</span><br></pre></td></tr></table></figure>

<p>0表示亮度为0，显示黑色，0.5表示亮度为原图的一半，1表示原图亮度，数值大于1表示亮度加强。</p>
<ol start="8">
<li>contrast 对比度（值为num）</li>
</ol>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">filter</span><span class="selector-pseudo">:contrast(1.8)</span>; </span><br><span class="line"></span><br><span class="line"><span class="selector-tag">-webkit-filter</span><span class="selector-pseudo">:contrast(1.8)</span>;</span><br></pre></td></tr></table></figure>

<p>0表示对比度为0，为纯色，0.5表示对比度为原图的一半，1为原图对比度，数值大于1，值越大，对比度越强。</p>
<ol start="9">
<li>blur 模糊（值为length）</li>
</ol>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">filter</span><span class="selector-pseudo">:blur(5px)</span>; </span><br><span class="line"></span><br><span class="line"><span class="selector-tag">-webkit-filter</span><span class="selector-pseudo">:blur(5px)</span>;</span><br></pre></td></tr></table></figure>

<p>表示虚化程度像素值。</p>
<ol start="10">
<li>drop-shadow 阴影</li>
</ol>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">filter</span><span class="selector-pseudo">:drop-shadow(0</span> 0 10<span class="selector-tag">px</span> <span class="selector-id">#000</span>);</span><br><span class="line"></span><br><span class="line"> <span class="selector-tag">-webkit-filter</span><span class="selector-pseudo">:drop-shadow(0</span> 0 10<span class="selector-tag">px</span> <span class="selector-id">#000</span>);</span><br></pre></td></tr></table></figure>

<p>和css3 box-shadow属性值一致。多个属性值可以写一起，用空格隔开，类似transform多属性写法</p>
<h2 id="14-弹性布局-FlexBox"><a href="#14-弹性布局-FlexBox" class="headerlink" title="14.弹性布局(FlexBox)"></a>14.弹性布局(FlexBox)</h2><p>Flex 是 Flexible Box 的缩写，意为”弹性布局”，用来为盒状模型提供最大的灵活性。</p>
<p>任何一个容器都可以指定为 Flex 布局。</p>
<blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</blockquote>
<p>行内元素也可以使用 Flex 布局。</p>
<blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-flex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</blockquote>
<p>Webkit 内核的浏览器，必须加上<code>-webkit</code>前缀。</p>
<blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: -webkit-flex; <span class="comment">/* Safari */</span></span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</blockquote>
<p>注意，设为 Flex 布局以后，子元素的<code>float</code>、<code>clear</code>和<code>vertical-align</code>属性将失效。</p>
<h3 id="14-1-基本概念"><a href="#14-1-基本概念" class="headerlink" title="14.1 基本概念"></a>14.1 基本概念</h3><p>采用 Flex 布局的元素，称为 Flex 容器（flex container），简称”容器”。它的所有子元素自动成为容器成员，称为 Flex 项目（flex item），简称”项目”。</p>
<p><img src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015071004.png" alt="img"></p>
<p>容器默认存在两根轴：水平的主轴（main axis）和垂直的交叉轴（cross axis）。主轴的开始位置（与边框的交叉点）叫做<code>main start</code>，结束位置叫做<code>main end</code>；交叉轴的开始位置叫做<code>cross start</code>，结束位置叫做<code>cross end</code>。</p>
<p>项目默认沿主轴排列。单个项目占据的主轴空间叫做<code>main size</code>，占据的交叉轴空间叫做<code>cross size</code>。</p>
<h3 id="14-2-容器的属性"><a href="#14-2-容器的属性" class="headerlink" title="14.2 容器的属性"></a>14.2 容器的属性</h3><p>以下6个属性设置在容器上。</p>
<blockquote>
<ul>
<li>flex-direction</li>
<li>flex-wrap</li>
<li>flex-flow</li>
<li>justify-content</li>
<li>align-items</li>
<li>align-content</li>
</ul>
</blockquote>
<h4 id="14-2-1-flex-direction设置主轴方向"><a href="#14-2-1-flex-direction设置主轴方向" class="headerlink" title="14.2.1 flex-direction设置主轴方向"></a>14.2.1 flex-direction设置主轴方向</h4><p>它可能有4个值。</p>
<blockquote>
<ul>
<li><code>row</code>（默认值）：主轴为水平方向，起点在左端。</li>
<li><code>row-reverse</code>：主轴为水平方向，起点在右端。</li>
<li><code>column</code>：主轴为垂直方向，起点在上沿。</li>
<li><code>column-reverse</code>：主轴为垂直方向，起点在下沿。</li>
</ul>
</blockquote>
<p><img src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015071005.png" alt="img"></p>
<h4 id="14-2-3-flex-wrap设置flex布局的换行方式"><a href="#14-2-3-flex-wrap设置flex布局的换行方式" class="headerlink" title="14.2.3 flex-wrap设置flex布局的换行方式"></a>14.2.3 flex-wrap设置flex布局的换行方式</h4><p>默认情况下，项目都排在一条线（又称”轴线”）上。<code>flex-wrap</code>属性定义，如果一条轴线排不下，如何换行。</p>
<p><img src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015071006.png" alt="img"></p>
<blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">  <span class="attribute">flex-wrap</span>: nowrap | wrap | wrap-reverse;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</blockquote>
<p>它可能取三个值。</p>
<p>（1）<code>nowrap</code>（默认）：不换行。</p>
<p><img src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015071007.png" alt="img"></p>
<p>（2）<code>wrap</code>：换行，第一行在上方。</p>
<p><img src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015071008.jpg" alt="img"></p>
<p>（3）<code>wrap-reverse</code>：换行，第一行在下方。</p>
<p><img src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015071009.jpg" alt="img"></p>
<h4 id="14-2-4-flex-flow简写flex-direction和flex-wrap"><a href="#14-2-4-flex-flow简写flex-direction和flex-wrap" class="headerlink" title="14.2.4 flex-flow简写flex-direction和flex-wrap"></a>14.2.4 flex-flow简写flex-direction和flex-wrap</h4><p><code>flex-flow</code>属性是<code>flex-direction</code>属性和<code>flex-wrap</code>属性的简写形式，默认值为<code>row nowrap</code>。</p>
<h4 id="14-2-5-justify-content属性"><a href="#14-2-5-justify-content属性" class="headerlink" title="14.2.5 justify-content属性"></a>14.2.5 justify-content属性</h4><p><code>justify-content</code>属性定义了项目在主轴上的对齐方式。</p>
<blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">justify-content</span>: flex-start | flex-end | center | space-between | space-around;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</blockquote>
<p><img src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015071010.png" alt="img"></p>
<p>它可能取5个值，具体对齐方式与轴的方向有关。下面假设主轴为从左到右。</p>
<blockquote>
<ul>
<li><code>flex-start</code>（默认值）：左对齐</li>
<li><code>flex-end</code>：右对齐</li>
<li><code>center</code>： 居中</li>
<li><code>space-between</code>：两端对齐，项目之间的间隔都相等。</li>
<li><code>space-around</code>：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。</li>
</ul>
</blockquote>
<h4 id="14-2-6-align-items属性"><a href="#14-2-6-align-items属性" class="headerlink" title="14.2.6 align-items属性"></a>14.2.6 align-items属性</h4><p><code>align-items</code>属性定义项目在交叉轴上如何对齐。</p>
<blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">align-items</span>: flex-start | flex-end | center | baseline | stretch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</blockquote>
<p><img src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015071011.png" alt="img"></p>
<p>它可能取5个值。具体的对齐方式与交叉轴的方向有关，下面假设交叉轴从上到下。</p>
<blockquote>
<ul>
<li><code>flex-start</code>：交叉轴的起点对齐。</li>
<li><code>flex-end</code>：交叉轴的终点对齐。</li>
<li><code>center</code>：交叉轴的中点对齐。</li>
<li><code>baseline</code>: 项目的第一行文字的基线对齐。</li>
<li><code>stretch</code>（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。</li>
</ul>
</blockquote>
<h4 id="14-2-7-align-content属性"><a href="#14-2-7-align-content属性" class="headerlink" title="14.2.7 align-content属性"></a>14.2.7 align-content属性</h4><p><code>align-content</code>属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。</p>
<blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">align-content</span>: flex-start | flex-end | center | space-between | space-around | stretch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</blockquote>
<p><img src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015071012.png" alt="img"></p>
<p>该属性可能取6个值。</p>
<blockquote>
<ul>
<li><code>flex-start</code>：与交叉轴的起点对齐。</li>
<li><code>flex-end</code>：与交叉轴的终点对齐。</li>
<li><code>center</code>：与交叉轴的中点对齐。</li>
<li><code>space-between</code>：与交叉轴两端对齐，轴线之间的间隔平均分布。</li>
<li><code>space-around</code>：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。</li>
<li><code>stretch</code>（默认值）：轴线占满整个交叉轴。</li>
</ul>
</blockquote>
<p>多轴我的理解为：flex-flow 中有一个属性，nowrap 和 wrap 这表示当主轴一次性不能排下这么多元素的时候，采取的排序方法，wrap的意思就是一行排不下了，换到下一行来展示，如果下一行还是展示不下，就再换到下一行。</p>
<p>如果flex-flow设置为row的话，采用wrap方法展示了3行。那么就有3个主轴平行的，那么就属于多轴了。</p>
<h3 id="14-3-项目的属性"><a href="#14-3-项目的属性" class="headerlink" title="14.3 项目的属性"></a>14.3 项目的属性</h3><p>以下6个属性设置在项目上。</p>
<blockquote>
<ul>
<li><code>order</code></li>
<li><code>flex-grow</code></li>
<li><code>flex-shrink</code></li>
<li><code>flex-basis</code></li>
<li><code>flex</code></li>
<li><code>align-self</code></li>
</ul>
</blockquote>
<h5 id="14-3-1-order"><a href="#14-3-1-order" class="headerlink" title="14.3.1 order"></a>14.3.1 order</h5><p><code>order</code>属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。</p>
<blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">  <span class="attribute">order</span>: &lt;integer&gt;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</blockquote>
<p><img src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015071013.png" alt="img"></p>
<h5 id="14-3-2-fle-grow"><a href="#14-3-2-fle-grow" class="headerlink" title="14.3.2 fle-grow"></a>14.3.2 fle-grow</h5><p><code>flex-grow</code>属性定义项目的放大比例，默认为<code>0</code>，即如果存在剩余空间，也不放大。</p>
<blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">  <span class="attribute">flex-grow</span>: &lt;number&gt;; <span class="comment">/* default 0 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</blockquote>
<p><img src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015071014.png" alt="img"></p>
<p>如果所有项目的<code>flex-grow</code>属性都为1，则它们将等分剩余空间（如果有的话）。如果一个项目的<code>flex-grow</code>属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。</p>
<h5 id="14-3-3-flex-shrink"><a href="#14-3-3-flex-shrink" class="headerlink" title="14.3.3 flex-shrink"></a>14.3.3 flex-shrink</h5><p><code>flex-shrink</code>属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。</p>
<blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">  <span class="attribute">flex-shrink</span>: &lt;number&gt;; <span class="comment">/* default 1 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</blockquote>
<p><img src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015071015.jpg" alt="img"></p>
<p>如果所有项目的<code>flex-shrink</code>属性都为1，当空间不足时，都将等比例缩小。如果一个项目的<code>flex-shrink</code>属性为0，其他项目都为1，则空间不足时，前者不缩小。</p>
<p>负值对该属性无效。</p>
<h5 id="14-3-4-flex-basis"><a href="#14-3-4-flex-basis" class="headerlink" title="14.3.4 flex-basis"></a>14.3.4 flex-basis</h5><p><code>flex-basis</code>属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为<code>auto</code>，即项目的本来大小。</p>
<blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">  <span class="attribute">flex-basis</span>: &lt;length&gt; | auto; <span class="comment">/* default auto */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</blockquote>
<p>它可以设为跟<code>width</code>或<code>height</code>属性一样的值（比如350px），则项目将占据固定空间。</p>
<h5 id="14-3-5-flex属性"><a href="#14-3-5-flex属性" class="headerlink" title="14.3.5 flex属性"></a>14.3.5 flex属性</h5><p><code>flex</code>属性是<code>flex-grow</code>, <code>flex-shrink</code> 和 <code>flex-basis</code>的简写，默认值为<code>0 1 auto</code>。后两个属性可选。</p>
<blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">  <span class="attribute">flex</span>: none | [ &lt;<span class="string">'flex-grow'</span>&gt; &lt;<span class="string">'flex-shrink'</span>&gt;? || &lt;<span class="string">'flex-basis'</span>&gt; ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</blockquote>
<p>该属性有两个快捷值：<code>auto</code> (<code>1 1 auto</code>) 和 none (<code>0 0 auto</code>)。</p>
<p>建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。</p>
<h5 id="14-3-6-align-self"><a href="#14-3-6-align-self" class="headerlink" title="14.3.6 align-self"></a>14.3.6 align-self</h5><p><code>align-self</code>属性允许单个项目有与其他项目不一样的对齐方式，可覆盖<code>align-items</code>属性。默认值为<code>auto</code>，表示继承父元素的<code>align-items</code>属性，如果没有父元素，则等同于<code>stretch</code>。</p>
<blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">  <span class="attribute">align-self</span>: auto | flex-start | flex-end | center | baseline | stretch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</blockquote>
<p><img src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015071016.png" alt="img"></p>
<p>该属性可能取6个值，除了auto，其他都与align-items属性完全一致。</p>
<h2 id="15-网格布局-GridLayout"><a href="#15-网格布局-GridLayout" class="headerlink" title="15.网格布局(GridLayout)"></a>15.网格布局(GridLayout)</h2><p>CSS网格布局（又称“网格”），是一种<strong>二维网格布局系统</strong>。CSS在处理网页布局方面一直做的不是很好。一开始我们用的是table（表格）布局，然后用float(浮动)，position（定位）和inline-block（行内块）布局，但是这些方法本质上是hack，遗漏了很多功能，例如垂直居中。后来出了<a href="http://peale.cn/2016/11/30/2016_11_30_flex/#more" target="_blank" rel="noopener">flexbox(盒子布局)</a>，解决了很多布局问题，但是它仅仅是一维布局，而不是复杂的二维布局，实际上它们（flexbox与grid）能很好的配合使用。Grid布局是第一个专门为解决布局问题而创建的CSS模块,2012年11月06日成立<a href="https://www.w3.org/TR/css3-grid-layout/" target="_blank" rel="noopener">草案</a>。</p>
<p>目前浏览器还不支持Grid布局，IE10和IE11支持老的语法。如果你想体验Grid布局的强大，推荐使用开通过“体验新功能”的Chrome, Opera 或 Firefox， Chrome:打开浏览器，输入<a href="chrome://flags">chrome://flags</a>，找到”experimental web platform features”，启用并重启浏览器；Opera：输入<a href="opera://flags">opera://flags</a>，与Chrome一样；Firefox:输入layout.css.grid.enabled。</p>
<h3 id="15-1-重要术语"><a href="#15-1-重要术语" class="headerlink" title="15.1 重要术语"></a>15.1 重要术语</h3><p>1.<strong>网格容器（Grid Container）</strong></p>
<p>元素应用display:grid，它是其所有网格项的父元素。下面例子container就是网格容器。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item item-1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item item-2"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item item-3"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>2<strong>.网格项（Grid Item）</strong><br>网格容器的子元素，下面的item元素是网格项，但sub-item不是。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"sub-item"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>3.<strong>网格线（Grid Line）</strong></p>
<p>组成网格线的分界线。它们可以是列网格线（column grid lines），也可以是行网格线（row grid lines）并且居于行或列的任意一侧<br>![image-20200527115221947](/Users/liwei/Library/Application Support/typora-user-images/image-20200527115221947.png)</p>
<p>4.<strong>网格轨道（Grid Track）</strong><br>两个相邻的网格线之间为网格轨道。你可以认为它们是网格的列或行，下面在第二个和第三个网格线之间的黄色部分为网格轨道。</p>
<p>![image-20200527115203607](/Users/liwei/Library/Application Support/typora-user-images/image-20200527115203607.png)</p>
<ol start="5">
<li><p><strong>网格单元（Grid Cell）</strong><br> 两个相邻的列网格线和两个相邻的行网格线组成的是网格单元，它是最小的网格单元。下面行网格线1（row grid lines 1）、行网格线2（row grid lines 2）和列网格线2（column grid lines 2）、列网格线3（column grid lines 3）组成的黄色区域为网格单元。</p>
</li>
<li><p><strong>网格区（Grid Area）</strong><br> 网格区是由任意数量网格单元组成，下面行网格线1（row grid lines 1）、行网格线3（row grid lines 3）和列网格线1（column grid lines 1）、列网格线3（column grid lines3）组成的黄色区域为网格区。</p>
</li>
</ol>
<h3 id="15-2-容器属性"><a href="#15-2-容器属性" class="headerlink" title="15.2 容器属性"></a>15.2 容器属性</h3><p><strong>设置在网格容器上的属性</strong></p>
<ul>
<li>display</li>
<li>grid-template-columns</li>
<li>grid-template-rows</li>
<li>grid-template-areas</li>
<li>grid-column-gap</li>
<li>grid-row-gap</li>
<li>grid-gap</li>
<li>justify-items</li>
<li>align-items</li>
<li>justify-content</li>
<li>align-content</li>
<li>grid-auto-columns</li>
<li>grid-auto-rows</li>
<li>grid-auto-flow</li>
<li>grid</li>
</ul>
<h4 id="1-display"><a href="#1-display" class="headerlink" title="1. display"></a>1. display</h4><p>grid | inline-grid | subgrid;</p>
<p>属性值：</p>
<p> grid: 生成块级网格<br> inline-grid: 生成行内网格<br> subgrid: 如果网格容器本身是网格项（嵌套网格容器），此属性用来继承其父网格容器的列、行大小。</p>
<p>注：当元素设置了网格布局，<strong>column</strong>、<strong>float</strong>、<strong>clear</strong>、<strong>vertical-align</strong>属性无效。</p>
<h4 id="2-grid-template-columns和grid-template-rows"><a href="#2-grid-template-columns和grid-template-rows" class="headerlink" title="2. grid-template-columns和grid-template-rows"></a>2. grid-template-columns和grid-template-rows</h4><p> grid-template-rows: <track-size> … | <line-name> <track-size> … ;</p>
<p>设置行和列的大小，在行轨道或列轨道两边是网格线。</p>
<p>属性值：<br> track-size: 轨道大小，可以使用css长度，百分比或用分数（用fr单位）。<br> line-name: 网格线名字，你可以选择任何名字。</p>
<p>例子：<br> 当你设置行或列大小为auto时，网格会自动分配空间和网格线名称。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:grid;</span><br><span class="line">    <span class="attribute">grid-template-columns</span>: <span class="number">40px</span> <span class="number">50px</span> auto <span class="number">50px</span> <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">grid-template-rows</span>: <span class="number">25%</span> <span class="number">100px</span> auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="3-grid-numbers"><a href="#3-grid-numbers" class="headerlink" title="3. grid-numbers"></a>3. grid-numbers</h4><p>你也可以给网格线定义名字，注意名字需要写在[]里面。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:grid;</span><br><span class="line">    <span class="attribute">grid-template-columns</span>: [first] <span class="number">40px</span> [line2] <span class="number">50px</span> [line3] auto [col4-start] <span class="number">50px</span> [five] <span class="number">40px</span> [end];</span><br><span class="line">    <span class="attribute">grid-template-rows</span>: [row1-start] <span class="number">25%</span> [row1-end] <span class="number">100px</span> [third-line] auto [last-line];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="4-grid-names"><a href="#4-grid-names" class="headerlink" title="4.grid-names"></a>4.grid-names</h4><p>每条网格线可以有多个名字，例如上面行的第二条线有两个名字，分别是row1-end和row2-start。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:grid;</span><br><span class="line">    <span class="attribute">grid-template-rows</span>: [row1-start] <span class="number">25%</span> [row1-end row2-start] <span class="number">25%</span> [row2-end];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如果你定义包含重复部分，可以使用repeat()简化。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:grid;</span><br><span class="line">    <span class="attribute">grid-template-columns</span>: <span class="built_in">repeat</span>(<span class="number">3</span>, <span class="number">20px</span> [col-start]) <span class="number">5%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>上面等同于下面：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:grid;</span><br><span class="line">    <span class="attribute">grid-template-columns</span>: <span class="number">20px</span> [col-start] <span class="number">20px</span> [col-start] <span class="number">20px</span> [col-start] <span class="number">5%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>用fr单位可以将容器分为几等份，例如下面分成三等份。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:grid;</span><br><span class="line">    <span class="attribute">grid-template-columns</span>: <span class="number">1</span>fr <span class="number">1</span>fr <span class="number">1</span>fr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如果fr单位和实际值一起使用，设置fr的行或列将分(除了实际值)剩余部分。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:grid;</span><br><span class="line">    <span class="attribute">grid-template-columns</span>: <span class="number">1</span>fr <span class="number">50px</span> <span class="number">1</span>fr <span class="number">1</span>fr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="5-grid-template-areas"><a href="#5-grid-template-areas" class="headerlink" title="5.grid-template-areas"></a>5.grid-template-areas</h4><p>通过获取网格项中的grid-area属性值（名称），来定义网格模版。重复网格区（grid-area）名称将跨越网格单元格，‘.’代表空网格单元。</p>
<p>属性值：<br> grid-area-name: 网格项的grid-area属性值（名字）<br> ‘.’ : 空网格单元<br> none: 不定义网格区域</p>
<p>实例</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        * &#123;</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">        &#125;</span><br><span class="line">        body &#123;</span><br><span class="line">            overflow: hidden;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.container</span> &#123;</span></span><br><span class="line">            height: calc(100vh);</span><br><span class="line">            display: grid;</span><br><span class="line">            grid-gap: 15px;</span><br><span class="line">            justify-items: stretch;</span><br><span class="line">            align-items: center;</span><br><span class="line">            grid-template-rows: auto;</span><br><span class="line">            grid-template-columns: 240px auto auto;</span><br><span class="line">            grid-template-rows: 64px auto auto;</span><br><span class="line">            grid-template-areas: "header header header"</span><br><span class="line">                                "aside main main"</span><br><span class="line">                                "aside main main"</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.container</span> <span class="selector-class">.header</span> &#123;</span></span><br><span class="line">            grid-area: header;</span><br><span class="line">            text-align: center;</span><br><span class="line">            height: 64px;</span><br><span class="line">            line-height: 64px;</span><br><span class="line"><span class="css">            <span class="selector-tag">background</span>: <span class="selector-tag">-webkit-linear-gradient</span>(<span class="selector-tag">right</span>, <span class="selector-tag">rgb</span>(0, 162, 255), <span class="selector-id">#03A9F4</span>);</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line">            font-size: 24px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.container</span> <span class="selector-tag">aside</span> &#123;</span></span><br><span class="line">            grid-area: aside;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.container</span> <span class="selector-tag">aside</span> &#123;</span></span><br><span class="line">            overflow: auto;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.container</span> <span class="selector-tag">aside</span> <span class="selector-tag">ul</span> &#123;</span></span><br><span class="line">            list-style: none;</span><br><span class="line">            padding-top: 10px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.container</span> <span class="selector-tag">aside</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line">            padding: 12px 16px;</span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#555</span>;</span></span><br><span class="line">            cursor: pointer;</span><br><span class="line"><span class="css">            <span class="selector-tag">transition</span>: <span class="selector-tag">ease</span> <span class="selector-tag">all</span> <span class="selector-class">.3s</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">border-bottom</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#eee</span>;</span></span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.container</span> <span class="selector-tag">aside</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:last-child</span> &#123;</span></span><br><span class="line">            border-bottom: none;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.container</span> <span class="selector-tag">aside</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#03A9F4</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.container</span> <span class="selector-tag">main</span> &#123;</span></span><br><span class="line">            grid-area: main;</span><br><span class="line">            overflow: auto;</span><br><span class="line">            padding: 10px 20px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.container</span> <span class="selector-tag">main</span> <span class="selector-tag">article</span> <span class="selector-tag">h1</span> &#123;</span></span><br><span class="line">            cursor: pointer;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.container</span> <span class="selector-tag">main</span> <span class="selector-tag">article</span> <span class="selector-tag">h1</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span><span class="selector-pseudo">:cornflowerblue</span></span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.container</span> <span class="selector-tag">main</span> <span class="selector-tag">article</span> <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#555</span>;</span></span><br><span class="line">            font-family: Arial, Helvetica, sans-serif;</span><br><span class="line">            word-spacing: 3px;</span><br><span class="line">            line-height: 22px;</span><br><span class="line">            text-align: justify;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"header"</span>&gt;</span></span><br><span class="line">            网格布局练习实例</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aside</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>功能模块01<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>功能模块02<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>功能模块03<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>功能模块04<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>功能模块05<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>功能模块06<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>功能模块07<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>功能模块08<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>功能模块09<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>功能模块10<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>功能模块11<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>功能模块12<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>功能模块13<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>功能模块14<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>功能模块15<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>功能模块16<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>功能模块17<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>功能模块18<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>功能模块19<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>功能模块20<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;/<span class="name">aside</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">main</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">article</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h1</span>&gt;</span>article1<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">                    Lorem ipsum dolor sit amet consectetur adipisicing elit. Libero alias molestias aliquid minima amet sapiente ut eos? Commodi quos placeat neque ad voluptatum voluptatibus, suscipit inventore dignissimos, tempore reprehenderit doloribus.</span><br><span class="line">                    Rem quibusdam dolore sint corrupti exercitationem, fugiat, distinctio earum reprehenderit sit laudantium totam beatae necessitatibus voluptates quasi obcaecati tempora rerum ullam vel, eaque officiis minima ipsum id modi. Modi, est!</span><br><span class="line">                    Nam doloremque voluptatum laboriosam quod autem labore ut a cupiditate quia beatae minus, rerum quo eius, nobis illo totam laudantium? Reprehenderit et accusantium quae deleniti quod tempora eos dolorum similique!</span><br><span class="line">                <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">article</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h1</span>&gt;</span>article2<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">                    Lorem ipsum dolor sit amet consectetur adipisicing elit. Sit, facilis animi asperiores architecto magni reiciendis recusandae accusantium maiores aperiam quis porro! Dolores nam ex reiciendis quos autem facere ullam tempora.</span><br><span class="line">                    Reiciendis eum eligendi quia perferendis saepe aperiam tempora consectetur dignissimos! Sint asperiores sunt ab, nulla eius rem perferendis culpa eos? Nesciunt, nihil labore cumque nemo minima ipsa magni unde in.</span><br><span class="line">                    Atque aperiam consequuntur eius illum nulla perferendis omnis consequatur maxime, cupiditate quia aspernatur architecto repudiandae, id adipisci debitis? Illo quasi quidem fuga ex nesciunt quas qui magni assumenda officia porro.</span><br><span class="line">                    Distinctio exercitationem officiis quae dolor quaerat amet molestias error quod atque ipsa nesciunt libero, praesentium minus ut magnam natus, sint, repudiandae laboriosam? Eius dicta pariatur modi recusandae numquam exercitationem illo.</span><br><span class="line">                    Officia optio tempore asperiores iure. Ab in itaque accusantium quasi explicabo harum sed impedit ipsa eveniet fugit aperiam neque labore, nostrum consectetur voluptatem est totam rem asperiores alias commodi debitis.</span><br><span class="line">                <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="6-grid-column-gap和-grid-row-gap"><a href="#6-grid-column-gap和-grid-row-gap" class="headerlink" title="6. grid-column-gap和 grid-row-gap ;"></a>6. grid-column-gap和 grid-row-gap ;</h4><p>网格单元间距。</p>
<p>属性值：<br> line-size: 网格线间距,设置单位值。</p>
<p>例子：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:grid;</span><br><span class="line">    <span class="attribute">grid-template-columns</span>: <span class="number">100px</span> <span class="number">50px</span> <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">grid-template-rows</span>: <span class="number">80px</span> auto <span class="number">80px</span>; </span><br><span class="line">    <span class="attribute">grid-column-gap</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">grid-row-gap</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>注：间隔仅仅作用在网格单元之间，不作用在容器边缘。</p>
<h4 id="7-grid-gap"><a href="#7-grid-gap" class="headerlink" title="7.grid-gap"></a>7.grid-gap</h4><p>是grid-column-gap 和 grid-row-gap简写。</p>
<p>例子：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:grid;</span><br><span class="line">    <span class="attribute">grid-template-columns</span>: <span class="number">100px</span> <span class="number">50px</span> <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">grid-template-rows</span>: <span class="number">80px</span> auto <span class="number">80px</span>; </span><br><span class="line">    <span class="attribute">grid-gap</span>: <span class="number">10px</span> <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>注：如果只设置一个值，那么grid-column-gap 和 grid-row-gap都为那个值。</p>
<h4 id="8-justify-items"><a href="#8-justify-items" class="headerlink" title="8. justify-items"></a>8. justify-items</h4><p>start | end | center | stretch（默认） ;</p>
<p>垂直于列网格线对齐，适用于网格容器里的所有网格项。</p>
<p>属性值：<br> start:   左对齐。<br> end:     右对齐。<br> center:  居中对齐。<br> stretch: 填满（默认）。</p>
<p>例子：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:grid;</span><br><span class="line">    <span class="attribute">justify-items</span>: start;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:grid;</span><br><span class="line">    <span class="attribute">justify-items</span>: end;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:grid;</span><br><span class="line">    <span class="attribute">justify-items</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:grid;</span><br><span class="line">    <span class="attribute">justify-items</span>: stretch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="9-align-items"><a href="#9-align-items" class="headerlink" title="9. align-items"></a>9. align-items</h4><p>start | end | center | stretch ;</p>
<p>垂直于行网格线对齐，适用于网格容器里的所有网格项。</p>
<p>属性值：<br> start：  顶部对齐。<br> end：    底部对齐。<br> center： 居中对齐。<br> stretch：填满（默认）。</p>
<p>例子：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:grid;</span><br><span class="line">    <span class="attribute">align-items</span>: start;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:grid;</span><br><span class="line">    <span class="attribute">align-items</span>: end;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:grid;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:grid;</span><br><span class="line">    <span class="attribute">align-items</span>: stretch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="10-justify-content"><a href="#10-justify-content" class="headerlink" title="10. justify-content"></a>10. justify-content</h4><p>start | end | center | stretch | space-around | space-between | space-evenly ;</p>
<p>如果用像px非弹性单位定义的话，总网格区域大小有可能小于网格容器，这时候你可以设置网格的对齐方式（垂直于列网格线对齐）。</p>
<p>属性值：<br> start: 左对齐。<br> end: 右对齐。<br> center: 居中对齐。<br> stretch: 填满网格容器。<br> space-around: 网格项两边间距相等，网格项之间间隔是单侧的2倍。<br> space-between: 两边对齐，网格项之间间隔相等。<br> space-evenly: 网格项间隔相等。</p>
<p>例子：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:grid;</span><br><span class="line">    <span class="attribute">justify-content</span>: start;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:grid;</span><br><span class="line">    <span class="attribute">justify-content</span>: end;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:grid;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:grid;</span><br><span class="line">    <span class="attribute">justify-content</span>: stretch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:grid;</span><br><span class="line">    <span class="attribute">justify-content</span>: space-around;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:grid;</span><br><span class="line">    <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:grid;</span><br><span class="line">    <span class="attribute">justify-content</span>: space-evenly;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="11-align-content"><a href="#11-align-content" class="headerlink" title="11. align-content"></a>11. align-content</h4><p> start | end | center | stretch | space-around | space-between | space-evenly ;</p>
<p>如果用像px非弹性单位定义的话，总网格区域大小有可能小于网格容器，这时候你可以设置网格的对齐方式（垂直于行网格线对齐）。</p>
<p>属性值：<br> start: 顶部对齐。<br> end: 底部对齐。<br> center: 居中对齐。<br> stretch: 填满网格容器。<br> space-around: 网格项两边间距相等，网格项之间间隔是单侧的2倍。<br> space-between: 两边对齐，网格项之间间隔相等。<br> space-evenly: 网格项间隔相等。</p>
<p>例子：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:grid;</span><br><span class="line">    <span class="attribute">align-content</span>: start; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:grid;</span><br><span class="line">    <span class="attribute">align-content</span>: end; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:grid;</span><br><span class="line">    <span class="attribute">align-content</span>: center; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:grid;</span><br><span class="line">    <span class="attribute">align-content</span>: stretch; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:grid;</span><br><span class="line">    <span class="attribute">align-content</span>: space-around; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:grid;</span><br><span class="line">    <span class="attribute">align-content</span>: space-between; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:grid;</span><br><span class="line">    <span class="attribute">align-content</span>: space-evenly; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="12-grid-auto-columns和-grid-auto-rows"><a href="#12-grid-auto-columns和-grid-auto-rows" class="headerlink" title="12.grid-auto-columns和 grid-auto-rows"></a>12.grid-auto-columns和 grid-auto-rows</h4><p>自动生成隐式网格轨道（列和行），当你定位网格项超出网格容器范围时，将自动创建隐式网格轨道。</p>
<p>属性值：<br> track-size: 网格轨道大小,可以是固定值，百分比或者是分数（fr单位）。</p>
<p>为了说明隐式网格轨道是怎么创建的，我们先看下面列子：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:grid;</span><br><span class="line">    <span class="attribute">grid-template-columns</span>: <span class="number">60px</span> <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">grid-template-rows</span>: <span class="number">90px</span> <span class="number">90px</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>grid-auto</p>
<p>这是2✖️2的网格，但是我们来用grid-column 和 grid-row给网格项定位如下：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.item-a</span>&#123;</span><br><span class="line">    <span class="attribute">grid-column</span>: <span class="number">1</span> / <span class="number">2</span>;</span><br><span class="line">    <span class="attribute">grid-row</span>: <span class="number">2</span> / <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.item-b</span>&#123;</span><br><span class="line">    <span class="attribute">grid-column</span>: <span class="number">5</span> / <span class="number">6</span>;</span><br><span class="line">    <span class="attribute">grid-row</span>: <span class="number">2</span> / <span class="number">3</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>implicit-tracks</p>
<p>我们可以看出，网格项item-b定位在第五根列网格线（column line 5 ）和第六根列网格线（column line 6 ）之间。但是我们网格容器根本不存在这两条网格线，所以就用两个0宽度来填充。在这里我们可以用网格自动行（grid-auto-rows）和网格自动列（grid-auto-columns）来定义这些隐式轨道宽度。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:grid;</span><br><span class="line">    <span class="attribute">grid-auto-columns</span>: <span class="number">60px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="13-grid-auto-flow"><a href="#13-grid-auto-flow" class="headerlink" title="13. grid-auto-flow"></a>13. grid-auto-flow</h4><p>row（默认） | column | dense ;</p>
<p>在没有设置网格项的位置时，这个属性控制网格项怎样排列。</p>
<p>属性值：<br> row: 按照行依次从左到右排列。<br> column: 按照列依次从上到下排列。<br> dense: 按先后顺序排列。</p>
<p>来看看下面结构：</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;section <span class="class"><span class="keyword">class</span></span>=<span class="string">"container"</span>&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"item-a"</span>&gt;item-a&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div class="item-b"&gt;item-b&lt;/</span>div&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"item-c"</span>&gt;item-c&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div class="item-d"&gt;item-d&lt;/</span>div&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"item-e"</span>&gt;item-e&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>section&gt;</span><br></pre></td></tr></table></figure>

<p>下面定义5列2行网格，同时定义grid-auto-flow：row。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: grid;</span><br><span class="line">    <span class="attribute">grid-template-columns</span>: <span class="number">60px</span> <span class="number">60px</span> <span class="number">60px</span> <span class="number">60px</span> <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">grid-template-rows</span>: <span class="number">30px</span> <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">grid-auto-flow</span>: row;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>像下面布局网格项。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.item-a</span>&#123;</span><br><span class="line">    <span class="attribute">grid-column</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">grid-row</span>: <span class="number">1</span> / <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.item-e</span>&#123;</span><br><span class="line">    <span class="attribute">grid-column</span>: <span class="number">5</span>;</span><br><span class="line">    <span class="attribute">grid-row</span>: <span class="number">1</span> / <span class="number">3</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>由于我们设置了grid-auto-flow：row，item-b、item-c和item-d在行上是从左到右排列</p>
<h4 id="14-grid-template"><a href="#14-grid-template" class="headerlink" title="14. grid-template"></a>14. grid-template</h4><p>该属性是grid-template-columns, grid-template-rows和grid-template-areas的简写属性</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">grid-template</span>: </span><br><span class="line">            "<span class="selector-tag">a</span> <span class="selector-tag">a</span> <span class="selector-tag">a</span>" 40<span class="selector-tag">px</span></span><br><span class="line">            "<span class="selector-tag">b</span> <span class="selector-tag">c</span> <span class="selector-tag">c</span>" 40<span class="selector-tag">px</span></span><br><span class="line">            "b c c" 40px / 1fr 1fr 1fr;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">grid-template</span>: </span><br><span class="line">            "<span class="selector-tag">b</span> <span class="selector-tag">b</span> <span class="selector-tag">a</span>" <span class="selector-tag">auto</span></span><br><span class="line">            "<span class="selector-tag">b</span> <span class="selector-tag">b</span> <span class="selector-tag">c</span>" 2<span class="selector-tag">ch</span></span><br><span class="line">            "b b c" 1em / 20% 20px 1fr;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">grid-template</span>: </span><br><span class="line">            "<span class="selector-tag">a</span> <span class="selector-tag">a</span> ." <span class="selector-tag">minmax</span>(50<span class="selector-tag">px</span>, <span class="selector-tag">auto</span>)</span><br><span class="line">            "<span class="selector-tag">a</span> <span class="selector-tag">a</span> ." 80<span class="selector-tag">px</span></span><br><span class="line">            "b b c" auto / 2em 3em auto;</span><br></pre></td></tr></table></figure>

<h4 id="15-grid"><a href="#15-grid" class="headerlink" title="15. grid"></a>15. grid</h4><p>grid: none | <grid-template-rows> / <grid-template-columns> | <grid-auto-flow> [<grid-auto-rows> [ / <grid-auto-columns>] ];</p>
<p>是一种简写形式，设置网格容器所有属性。</p>
<p>属性值：<br> none: 设置为所有属性的默认值。<br> <grid-template-rows> / <grid-template-columns>: 设置行和列的值，其他属性为默认值。<br> <grid-auto-flow> [ <grid-auto-rows> [ / <grid-auto-columns>] ] : 设置网格自动流、网格自动行、网格自动列的值，其他未设置则为默认值。</p>
<p>例子1：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">grid</span>: <span class="number">200px</span> auto / <span class="number">1</span>fr auto <span class="number">1</span>fr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">等同于</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">grid-template-rows</span>: <span class="number">200px</span> auto;</span><br><span class="line">    <span class="attribute">grid-template-columns</span>: <span class="number">1</span>fr auto <span class="number">1</span>fr;</span><br><span class="line">    <span class="attribute">grid-template-areas</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>例子2：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">grid</span>: column <span class="number">1</span>fr / auto;</span><br><span class="line">&#125;</span><br><span class="line">等同于</span><br><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">grid-auto-flow</span>: column;</span><br><span class="line">    <span class="attribute">grid-auto-rows</span>: <span class="number">1</span>fr;</span><br><span class="line">    <span class="attribute">grid-auto-columns</span>: auto;</span><br></pre></td></tr></table></figure>

<p>grid属性更多的书写方法</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* &lt;'grid-template'&gt; values */</span></span><br><span class="line"><span class="selector-tag">grid</span>: <span class="selector-tag">none</span>;</span><br><span class="line"><span class="selector-tag">grid</span>: "<span class="selector-tag">a</span>" 100<span class="selector-tag">px</span> "<span class="selector-tag">b</span>" 1<span class="selector-tag">fr</span>;</span><br><span class="line"><span class="selector-tag">grid</span>: <span class="selector-attr">[linename1]</span> "<span class="selector-tag">a</span>" 100<span class="selector-tag">px</span> <span class="selector-attr">[linename2]</span>;</span><br><span class="line"><span class="selector-tag">grid</span>: "<span class="selector-tag">a</span>" 200<span class="selector-tag">px</span> "<span class="selector-tag">b</span>" <span class="selector-tag">min-content</span>;</span><br><span class="line"><span class="selector-tag">grid</span>: "<span class="selector-tag">a</span>" <span class="selector-tag">minmax</span>(100<span class="selector-tag">px</span>, <span class="selector-tag">max-content</span>) "<span class="selector-tag">b</span>" 20%;</span><br><span class="line">grid: 100px / 200px;</span><br><span class="line">grid: minmax(400px, min-content) / repeat(auto-fill, 50px);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* &lt;'grid-template-rows'&gt; /</span></span><br><span class="line"><span class="comment">   [ auto-flow &amp;&amp; dense? ] &lt;'grid-auto-columns'&gt;? values */</span></span><br><span class="line">grid: 200px / auto-flow;</span><br><span class="line">grid: 30% / auto-flow dense;</span><br><span class="line">grid: repeat(3, [line1 line2 line3] 200px) / auto-flow 300px;</span><br><span class="line">grid: [line1] minmax(20em, max-content) / auto-flow dense 40%;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* [ auto-flow &amp;&amp; dense? ] &lt;'grid-auto-rows'&gt;? /</span></span><br><span class="line"><span class="comment">   &lt;'grid-template-columns'&gt; values */</span></span><br><span class="line">grid: auto-flow / 200px;</span><br><span class="line">grid: auto-flow dense / 30%;</span><br><span class="line">grid: auto-flow 300px / repeat(3, [line1 line2 line3] 200px);</span><br><span class="line">grid: auto-flow dense 40% / [line1] minmax(20em, max-content);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Global values */</span></span><br><span class="line"><span class="selector-tag">grid</span>: <span class="selector-tag">inherit</span>;</span><br><span class="line"><span class="selector-tag">grid</span>: <span class="selector-tag">initial</span>;</span><br><span class="line"><span class="selector-tag">grid</span>: <span class="selector-tag">unset</span>;</span><br></pre></td></tr></table></figure>

<h4 id="16-使用-supports来判断浏览器是否支持grid布局"><a href="#16-使用-supports来判断浏览器是否支持grid布局" class="headerlink" title="16.使用@supports来判断浏览器是否支持grid布局"></a>16.使用@supports来判断浏览器是否支持grid布局</h4><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">@supports(display: grid) &#123;</span><br><span class="line">            <span class="selector-class">.container</span> &#123;</span><br><span class="line">                <span class="attribute">display</span>: grid;</span><br><span class="line">                <span class="attribute">grid</span>: <span class="string">"a a a"</span> <span class="number">100px</span> <span class="string">"b c c"</span> <span class="number">200px</span> <span class="string">"b c c"</span> <span class="built_in">minmax</span>(<span class="number">20em</span>, max-content) / <span class="number">1</span>fr <span class="number">1</span>fr <span class="number">1</span>fr;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="selector-class">.container</span> <span class="selector-class">.item-a</span> &#123;</span><br><span class="line">                <span class="attribute">grid-area</span>: a;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="selector-class">.container</span> <span class="selector-class">.item-b</span> &#123;</span><br><span class="line">                <span class="attribute">grid-area</span>: c;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>

<h4 id="17-win-8开始菜单效果"><a href="#17-win-8开始菜单效果" class="headerlink" title="17. win-8开始菜单效果"></a>17. win-8开始菜单效果</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.win-8</span> &#123;</span></span><br><span class="line">            display: grid;</span><br><span class="line">            grid-template-columns: 1fr 1fr 1fr;</span><br><span class="line">            grid-template-rows: 200px 200px 200px;</span><br><span class="line">            grid-template-areas: "a a b"</span><br><span class="line">                                 "a a c"</span><br><span class="line">                                 "d e c";</span><br><span class="line">            grid-gap: 6px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.win-8</span> <span class="selector-class">.red</span> &#123;</span></span><br><span class="line">            grid-area: a;</span><br><span class="line">            background-color: red;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.win-8</span> <span class="selector-class">.light-green</span> &#123;</span></span><br><span class="line">            grid-area: b;</span><br><span class="line">            background-color: chartreuse;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.win-8</span> <span class="selector-class">.dark-green</span> &#123;</span></span><br><span class="line">            grid-area: d;</span><br><span class="line">            background-color: green;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.win-8</span> <span class="selector-class">.orange</span> &#123;</span></span><br><span class="line">            grid-area: e;</span><br><span class="line">            background-color: orange;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.win-8</span> <span class="selector-class">.purple</span> &#123;</span></span><br><span class="line">            grid-area: c;</span><br><span class="line">            background-color: purple;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"win-8"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"red"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"light-green"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"dark-green"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"orange"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"purple"</span>&gt;</span>6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="16-多列布局"><a href="#16-多列布局" class="headerlink" title="16.多列布局"></a>16.多列布局</h2><table>
<thead>
<tr>
<th><a href="https://www.w3school.com.cn/cssref/pr_column-count.asp" target="_blank" rel="noopener">column-count</a></th>
<th>规定元素应该被分隔的列数。</th>
<th>3</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://www.w3school.com.cn/cssref/pr_column-fill.asp" target="_blank" rel="noopener">column-fill</a></td>
<td>规定如何填充列。</td>
<td>3</td>
</tr>
<tr>
<td><a href="https://www.w3school.com.cn/cssref/pr_column-gap.asp" target="_blank" rel="noopener">column-gap</a></td>
<td>规定列之间的间隔。</td>
<td>3</td>
</tr>
<tr>
<td><a href="https://www.w3school.com.cn/cssref/pr_column-rule.asp" target="_blank" rel="noopener">column-rule</a></td>
<td>设置所有 column-rule-* 属性的简写属性。</td>
<td>3</td>
</tr>
<tr>
<td><a href="https://www.w3school.com.cn/cssref/pr_column-rule-color.asp" target="_blank" rel="noopener">column-rule-color</a></td>
<td>规定列之间分割线的颜色。</td>
<td>3</td>
</tr>
<tr>
<td><a href="https://www.w3school.com.cn/cssref/pr_column-rule-style.asp" target="_blank" rel="noopener">column-rule-style</a></td>
<td>规定列之间分割线的样式。</td>
<td>3</td>
</tr>
<tr>
<td><a href="https://www.w3school.com.cn/cssref/pr_column-rule-width.asp" target="_blank" rel="noopener">column-rule-width</a></td>
<td>规定列之间分线的宽度。</td>
<td>3</td>
</tr>
<tr>
<td><a href="https://www.w3school.com.cn/cssref/pr_column-span.asp" target="_blank" rel="noopener">column-span</a></td>
<td>规定元素应该横跨的列数。</td>
<td>3</td>
</tr>
<tr>
<td><a href="https://www.w3school.com.cn/cssref/pr_column-width.asp" target="_blank" rel="noopener">column-width</a></td>
<td>规定列的宽度</td>
<td>3</td>
</tr>
<tr>
<td><a href="https://www.w3school.com.cn/cssref/pr_columns.asp" target="_blank" rel="noopener">columns</a></td>
<td>规定设置 column-width 和 column-count 的简写属性。  当column-count和column-width同时设置时，有时候并不能同时满足。比如column-count为3，column-width为200px，而总宽度为500px，显然不能同时并存，此时就只有2行，并且宽度也可能超过200px。</td>
<td>3</td>
</tr>
</tbody></table>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        p &#123;</span><br><span class="line">            column-gap: 20px;</span><br><span class="line"><span class="css">            <span class="selector-tag">column-rule-width</span><span class="selector-pseudo">:1px</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">column-rule-color</span>:<span class="selector-id">#ff0000</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">column-rule-style</span><span class="selector-pseudo">:dotted</span>;</span></span><br><span class="line">            columns: 200px 3;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        Lorem ipsum dolor sit amet consectetur adipisicing elit. Saepe dolorum, dolorem voluptatum ea sequi enim quas excepturi ratione, eius esse nulla nobis iste voluptas fugiat corporis doloribus veniam molestias reiciendis.</span><br><span class="line">        Consequuntur illum ab, corporis aliquam tempora eaque eos, excepturi provident, nobis doloribus perspiciatis dolor. Necessitatibus aliquid nostrum odio ex, dolore eius dolorem delectus quam? Quis reprehenderit ut saepe modi aut?</span><br><span class="line">        Soluta tenetur totam iure delectus cumque. Magni repellendus earum corrupti voluptatum, non voluptas harum sequi voluptatibus asperiores, reiciendis exercitationem quas. Et sunt quos officiis deleniti recusandae sapiente omnis incidunt suscipit!</span><br><span class="line">        Illo nostrum sapiente sequi dolores rerum ipsa esse repellat reiciendis, quia veniam, ipsam, quidem nulla accusamus nisi consequuntur soluta quos error. Sint voluptatum dignissimos blanditiis unde optio! Alias, iusto deserunt.</span><br><span class="line">        Deserunt itaque quis nemo repellendus amet consequatur quisquam culpa, quos, provident animi quasi. Alias, cupiditate, minus id eveniet, cum sint delectus inventore doloremque itaque facilis voluptatum impedit animi! Nemo, molestias.</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="17-媒体查询"><a href="#17-媒体查询" class="headerlink" title="17.媒体查询"></a>17.媒体查询</h2><p>所谓媒体查询就是通过监测页面尺寸变化，不同媒体类型，设置不同间断点达到布局调整的一种特性</p>
<p>比如</p>
<p>如果文档宽度小于 300 像素则修改背景颜色(background-color):</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width:</span> <span class="number">300px</span>) &#123;</span><br><span class="line">    <span class="selector-tag">body</span> &#123;</span><br><span class="line">        <span class="attribute">background-color</span>:lightblue;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>浏览器兼容性</strong></p>
<table>
<thead>
<tr>
<th align="left">Rule</th>
<th>Chrome</th>
<th>Ie</th>
<th>Firefox</th>
<th>Safari</th>
<th>Opera</th>
</tr>
</thead>
<tbody><tr>
<td align="left">@media</td>
<td>21</td>
<td>9</td>
<td>3.5</td>
<td>4.0</td>
<td>9</td>
</tr>
</tbody></table>
<p>可以使用内联样式来定义媒体查询样式， 也可以针对媒体查询间断点通过link标签引入不同的外部样式表</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@media</span> mediatype <span class="keyword">and</span>|<span class="keyword">not</span>|<span class="keyword">only</span> (media feature) &#123;</span><br><span class="line">    <span class="selector-tag">CSS-Code</span>;</span><br><span class="line">&#125;</span><br><span class="line">你也可以针对不同的媒体使用不同 <span class="selector-tag">stylesheets</span> :</span><br><span class="line"></span><br><span class="line">&lt;link rel="stylesheet" media="mediatype and|not|only (media feature)" href="mystylesheet.css"&gt;</span><br></pre></td></tr></table></figure>

<h3 id="17-2-可用的媒体类型"><a href="#17-2-可用的媒体类型" class="headerlink" title="17.2 可用的媒体类型"></a>17.2 <strong>可用的媒体类型</strong></h3><table>
<thead>
<tr>
<th>all</th>
<th>用于所有设备</th>
</tr>
</thead>
<tbody><tr>
<td>aural</td>
<td>已废弃。用于语音和声音合成器</td>
</tr>
<tr>
<td>braille</td>
<td>已废弃。 应用于盲文触摸式反馈设备</td>
</tr>
<tr>
<td>embossed</td>
<td>已废弃。 用于打印的盲人印刷设备</td>
</tr>
<tr>
<td>handheld</td>
<td>已废弃。 用于掌上设备或更小的装置，如PDA和小型电话</td>
</tr>
<tr>
<td>print</td>
<td>用于打印机和打印预览</td>
</tr>
<tr>
<td>projection</td>
<td>已废弃。 用于投影设备</td>
</tr>
<tr>
<td>screen</td>
<td>用于电脑屏幕，平板电脑，智能手机等。</td>
</tr>
<tr>
<td>speech</td>
<td>应用于屏幕阅读器等发声设备</td>
</tr>
<tr>
<td>tty</td>
<td>已废弃。 用于固定的字符网格，如电报、终端设备和对字符有限制的便携设备</td>
</tr>
<tr>
<td>tv</td>
<td>已废弃。 用于电视和网络电视</td>
</tr>
</tbody></table>
<h3 id="17-3-可用的媒体查询功能"><a href="#17-3-可用的媒体查询功能" class="headerlink" title="17.3 可用的媒体查询功能"></a>17.3 可用的媒体查询功能</h3><table>
<thead>
<tr>
<th>aspect-ratio</th>
<th>定义输出设备中的页面可见区域宽度与高度的比率</th>
</tr>
</thead>
<tbody><tr>
<td>color</td>
<td>定义输出设备每一组彩色原件的个数。如果不是彩色设备，则值等于0</td>
</tr>
<tr>
<td>color-index</td>
<td>定义在输出设备的彩色查询表中的条目数。如果没有使用彩色查询表，则值等于0</td>
</tr>
<tr>
<td>device-aspect-ratio</td>
<td>定义输出设备的屏幕可见宽度与高度的比率。</td>
</tr>
<tr>
<td>device-height</td>
<td>定义输出设备的屏幕可见高度。</td>
</tr>
<tr>
<td>device-width</td>
<td>定义输出设备的屏幕可见宽度。</td>
</tr>
<tr>
<td>grid</td>
<td>用来查询输出设备是否使用栅格或点阵。</td>
</tr>
<tr>
<td>height</td>
<td>定义输出设备中的页面可见区域高度。</td>
</tr>
<tr>
<td>max-aspect-ratio</td>
<td>定义输出设备的屏幕可见宽度与高度的最大比率。</td>
</tr>
<tr>
<td>max-color</td>
<td>定义输出设备每一组彩色原件的最大个数。</td>
</tr>
<tr>
<td>max-color-index</td>
<td>定义在输出设备的彩色查询表中的最大条目数。</td>
</tr>
<tr>
<td>max-device-aspect-ratio</td>
<td>定义输出设备的屏幕可见宽度与高度的最大比率。</td>
</tr>
<tr>
<td>max-device-height</td>
<td>定义输出设备的屏幕可见的最大高度。</td>
</tr>
<tr>
<td>max-device-width</td>
<td>定义输出设备的屏幕最大可见宽度。</td>
</tr>
<tr>
<td>max-height</td>
<td>定义输出设备中的页面最大可见区域高度。</td>
</tr>
<tr>
<td>max-monochrome</td>
<td>定义在一个单色框架缓冲区中每像素包含的最大单色原件个数。</td>
</tr>
<tr>
<td>max-resolution</td>
<td>定义设备的最大分辨率。</td>
</tr>
<tr>
<td>max-width</td>
<td>定义输出设备中的页面最大可见区域宽度。</td>
</tr>
<tr>
<td>min-aspect-ratio</td>
<td>定义输出设备中的页面可见区域宽度与高度的最小比率。</td>
</tr>
<tr>
<td>min-color</td>
<td>定义输出设备每一组彩色原件的最小个数。</td>
</tr>
<tr>
<td>min-color-index</td>
<td>定义在输出设备的彩色查询表中的最小条目数。</td>
</tr>
<tr>
<td>min-device-aspect-ratio</td>
<td>定义输出设备的屏幕可见宽度与高度的最小比率。</td>
</tr>
<tr>
<td>min-device-width</td>
<td>定义输出设备的屏幕最小可见宽度。</td>
</tr>
<tr>
<td>min-device-height</td>
<td>定义输出设备的屏幕的最小可见高度。</td>
</tr>
<tr>
<td>min-height</td>
<td>定义输出设备中的页面最小可见区域高度。</td>
</tr>
<tr>
<td>min-monochrome</td>
<td>定义在一个单色框架缓冲区中每像素包含的最小单色原件个数</td>
</tr>
<tr>
<td>min-resolution</td>
<td>定义设备的最小分辨率。</td>
</tr>
<tr>
<td>min-width</td>
<td>定义输出设备中的页面最小可见区域宽度。</td>
</tr>
<tr>
<td>monochrome</td>
<td>定义在一个单色框架缓冲区中每像素包含的单色原件个数。如果不是单色设备，则值等于0</td>
</tr>
<tr>
<td>orientation</td>
<td>定义输出设备中的页面可见区域高度是否大于或等于宽度。</td>
</tr>
<tr>
<td>resolution</td>
<td>定义设备的分辨率。如：96dpi, 300dpi, 118dpcm</td>
</tr>
<tr>
<td>scan</td>
<td>定义电视类设备的扫描工序。</td>
</tr>
<tr>
<td>width</td>
<td>定义输出设备中的页面可见区域宽度。</td>
</tr>
</tbody></table>
<h2 id="19-混合模式"><a href="#19-混合模式" class="headerlink" title="19.混合模式"></a>19.混合模式</h2><p>blend-mode是CSS的一种值类型。它用于描述<strong>当元素重叠时颜色该如何展示</strong>。可以用于background-blend-mode和mix-blend-mode这两个属性。</p>
<p>当应用了混合模式后，这一属性会根据特定的算法将重叠的前景（顶）色和背景（底）色生成一个新的颜色值。</p>
<ul>
<li>mix-blend-mode属性用来定义元素与背景的混合模式，可以是元素与背景图片的混合，也可以是元素与背景色的混合</li>
<li>background-blend-mode属性用来定义背景的混合模式，可以是背景图片与背景图片的混合，也可以是背景图片和背景色的混合</li>
</ul>
<p>一个小例子</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        * &#123;</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        body &#123;</span><br><span class="line">            height: 100vh;</span><br><span class="line">            width: 100vw;</span><br><span class="line">            background-image: -webkit-linear-gradient(left, white 0%, white 50%, black 50%);</span><br><span class="line">        &#125;</span><br><span class="line">       </span><br><span class="line">        h1 &#123;</span><br><span class="line">            position: absolute;</span><br><span class="line">            top: 50%;</span><br><span class="line">            left: 50%;</span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line">            transform: translate(-50%, -50%);</span><br><span class="line">            mix-blend-mode: difference;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello World<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>引题的小例子就是用的mix-blend-mode属性，实现的是文本和背景图的混合。下面介绍一下混合模式的取值情况，我们首先学习3个术语：<strong>基色</strong>，<strong>混合色</strong>和<strong>结果色</strong>。</p>
<ul>
<li>基色：指当前图层之下的图层颜色。</li>
<li>混合色：指当前图层的颜色。</li>
<li>结果色：指混合后得到的颜色。</li>
</ul>
<h3 id="19-1-可用的混合模式值"><a href="#19-1-可用的混合模式值" class="headerlink" title="19.1 可用的混合模式值"></a>19.1 <strong>可用的混合模式值</strong></h3><ul>
<li>normal    <strong>正常</strong>    直接返回结果色</li>
<li>multiply    <strong>正片叠底</strong>    查看每个通道中的颜色信息，并将基色与混合色复合</li>
<li>screen    <strong>滤色</strong>    与“正片叠底”相反，查看每个通道的颜色信息，将图像的基色与混合色结合起来产生比两种颜色都浅的第三种颜色</li>
<li>overlay    <strong>叠加</strong>    把图像的基色与混合色相混合产生一种中间色。</li>
<li>darken    <strong>变暗</strong>    查看每个通道中的颜色信息，并选择基色或混合色中较暗的颜色作为结果色</li>
<li>lighten    <strong>变亮</strong>    查看每个通道中的颜色信息，并选择基色或混合色中较亮的颜色作为结果色</li>
<li>color-dodge    <strong>颜色减淡</strong>    查看每个通道中的颜色信息，并通过减小对比度使基色变亮以反映混合色。与黑色混合则不发生变化</li>
<li>color-burn    <strong>颜色加深</strong>    查看每个通道中的颜色信息，并通过增加对比度使基色变暗以反映混合色，如果与白色混合的话将不会产生变化</li>
<li>hard-light    <strong>强光</strong>    产生一种强光照射的效果。如果混合色比基色更亮一些，那么结果色将更亮；如果混合色比基色更暗一些，那么结果色将更暗</li>
<li>soft-light    <strong>柔光</strong>    产生一种柔光照射的效果。如果混合色比基色更亮一些，那么结果色将更亮；如果混合色比基色更暗一些，那么结果色将更暗，使图像的亮度反差增大</li>
<li>difference    <strong>差值</strong>    查看每个通道中的颜色信息，从图像中基色的亮度值减去混合色的亮度值，如果结果为负，则取正值，产生反相效果</li>
<li>exclusion    <strong>排除</strong>    与“差值”模式相似，但是具有高对比度和低饱和度的特点。比用“差值”模式获得的颜色要柔和、更明亮一些</li>
<li>hue    色相    选择基色的亮度和饱和度值与混合色进行混合而创建的效果，混合后的亮度及饱和度取决于基色，但色相取决于混合色</li>
<li>saturation    <strong>饱和度</strong>    在保持基色色相和亮度值的前提下，只用混合色的饱和度值进行着色。基色与混合色的饱和度值不同时，才使用混合色进行着色处理。若饱和度为0，则与任何混合色叠加均无变化。当基色不变的情况下，混合色图像饱和度越低，结果色饱和度越低；混合色图像饱和度越高，结果色饱和度越高</li>
<li>color    <strong>颜色</strong>    引用基色的明度和混合色的色相与饱和度创建结果色。它能够使用混合色的饱和度和色相同时进行着色，这样可以保护图像的灰色色调，但结果色的颜色由混合色决定。颜色模式可以看作是饱和度模式和色相模式的综合效果，一般用于为图像添加单色效果</li>
<li>luminosity    <strong>亮度</strong>    能够使用混合色的亮度值进行着色，而保持基色的饱和度和色相数值不变。其实就是用基色中的“色相”和“饱和度”以及混合色的亮度创建结果色</li>
</ul>
<p>如下我们可以将15中混合模式分为5类：</p>
<ol>
<li>变暗：multiply，darken，color-burn</li>
<li>变亮：screen，lighten，color-dodge</li>
<li>调整对比度：overlay，hard-light，soft-light</li>
<li>反差：difference，exclusion</li>
<li>颜色组成：hue，saturation，color，luminosity</li>
</ol>
<h3 id="19-2-isolation的使用"><a href="#19-2-isolation的使用" class="headerlink" title="19.2 isolation的使用"></a>19.2 isolation的使用</h3><p>隔离isolation的作用是创建一个堆叠上下文stacking context，主要用于与mix-blend-mode属性一起使用时，将混合模式只应用于某一个元素或某一组元素</p>
<p><strong>isolation</strong></p>
<p>初始值: auto</p>
<p>应用于: 所有元素</p>
<p>继承性: 无</p>
<p>值: auto | isolate(创建新的堆叠上下文) | initial | inherit | unset</p>
<p>实例</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.a</span> &#123;</span></span><br><span class="line">        background-color: rgb(0, 255, 0);</span><br><span class="line">      &#125;</span><br><span class="line"><span class="css">      <span class="selector-id">#b</span> &#123;</span></span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 210px;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="css">      <span class="selector-class">.c</span> &#123;</span></span><br><span class="line">        width: 100px;</span><br><span class="line">        height: 100px;</span><br><span class="line">        border: 1px solid black;</span><br><span class="line">        padding: 2px;</span><br><span class="line">        mix-blend-mode: difference;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="css">      <span class="selector-id">#d</span> &#123;</span></span><br><span class="line">        isolation: auto;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="css">      <span class="selector-id">#e</span> &#123;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">isolation</span>: <span class="selector-tag">isolate</span>; <span class="comment">/* ID为e的div中的类c的dom元素不与父元素进行混合 */</span></span></span><br><span class="line">      &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"b"</span> <span class="attr">class</span>=<span class="string">"a"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"d"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"a c"</span>&gt;</span>auto<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"e"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"a c"</span>&gt;</span>isolate<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="19-3-实例"><a href="#19-3-实例" class="headerlink" title="19.3 实例"></a>19.3 实例</h3><p><strong>让阴天的天空变蓝</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.box1</span> &#123;</span></span><br><span class="line">            width: 600px;</span><br><span class="line">            height: 480px;</span><br><span class="line">            float: left;</span><br><span class="line">            background: url("http://p9.qhimg.com/t012932e87662183569.jpg") no-repeat fixed center/100% 100%;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.box2</span> &#123;</span></span><br><span class="line">            width: 600px;</span><br><span class="line">            height: 480px;</span><br><span class="line">            float: left;</span><br><span class="line">            margin-left: 20px;</span><br><span class="line">            background: url(http://p6.qhimg.com/t0110da9f699fc645b4.png) no-repeat top/ 160px 50px,</span><br><span class="line"></span><br><span class="line">                        url(http://p0.qhimg.com/t01628bd068d6f37961.png) no-repeat 30px 50px/ 160px 50px,</span><br><span class="line"></span><br><span class="line">                        url(http://p2.qhimg.com/t0160c558d31f4d5202.png) no-repeat 380px 60px/160px 50px,</span><br><span class="line"></span><br><span class="line">                        url(http://p9.qhimg.com/t012932e87662183569.jpg) no-repeat,</span><br><span class="line"></span><br><span class="line"><span class="css">                        <span class="selector-tag">linear-gradient</span>(<span class="selector-id">#0aa0fe</span> 0%, <span class="selector-id">#baf5ff</span> 55%, <span class="selector-id">#85c1cb</span> 55%);</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#09a8e0</span>;</span></span><br><span class="line">            background-blend-mode: lighten, lighten, lighten, multiply, darken;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box2"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>如上，我们通过多背景的混合实现了更好看点图像，效果图如下（左侧为未应用混合模式的效果）。我们通过渐变实现了天的渐变蓝与水的绿，并且额外增加了三朵漂浮的云朵。</p>
<p>image</p>
<p>注意，当存在多背景时，background-blend-mode混合模式的顺序与background-img属性一致。如果混合模式的值长度小于背景图的值长度，则会重复混合模式的值，循环匹配。如果大于背景图的值长度，则会被截取。</p>
<p>上述例子改造为多元素混合，基于mix-blend-mode属性来实现</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.wrapper</span> &#123;</span></span><br><span class="line">        position: relative;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#ddd</span>;</span></span><br><span class="line"></span><br><span class="line">        margin-right: 5px;</span><br><span class="line"></span><br><span class="line">        width: 300px;</span><br><span class="line"></span><br><span class="line">        height: 200px;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-tag">background</span>: <span class="selector-tag">linear-gradient</span>(<span class="selector-id">#0aa0fe</span> 0%, <span class="selector-id">#baf5ff</span> 55%, <span class="selector-id">#85c1cb</span> 55%);</span></span><br><span class="line"></span><br><span class="line">        background-size: 100%;</span><br><span class="line"></span><br><span class="line">        background-position: center center;</span><br><span class="line"></span><br><span class="line">        background-repeat: no-repeat;</span><br><span class="line"></span><br><span class="line">        overflow: hidden;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">      <span class="selector-class">.img</span> &#123;</span></span><br><span class="line">        width: 100%;</span><br><span class="line"></span><br><span class="line">        height: 100%;</span><br><span class="line"></span><br><span class="line">        background: url(http://p9.qhimg.com/t012932e87662183569.jpg);</span><br><span class="line"></span><br><span class="line">        background-size: 100%;</span><br><span class="line"></span><br><span class="line">        background-position: center center;</span><br><span class="line"></span><br><span class="line">        background-repeat: no-repeat;</span><br><span class="line"></span><br><span class="line">        mix-blend-mode: multiply;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">      <span class="selector-class">.cloud</span> &#123;</span></span><br><span class="line">        position: absolute;</span><br><span class="line"></span><br><span class="line">        background-size: 100%;</span><br><span class="line"></span><br><span class="line">        background-position: center center;</span><br><span class="line"></span><br><span class="line">        background-repeat: no-repeat;</span><br><span class="line"></span><br><span class="line">        mix-blend-mode: lighten;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">      <span class="selector-class">.cloud1</span> &#123;</span></span><br><span class="line">        background-image: url(http://p6.qhimg.com/t0110da9f699fc645b4.png);</span><br><span class="line"></span><br><span class="line">        left: 30px;</span><br><span class="line"></span><br><span class="line">        top: 50px;</span><br><span class="line"></span><br><span class="line">        width: 60px;</span><br><span class="line"></span><br><span class="line">        height: 20px;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">      <span class="selector-class">.cloud2</span> &#123;</span></span><br><span class="line">        background-image: url(http://p0.qhimg.com/t01628bd068d6f37961.png);</span><br><span class="line"></span><br><span class="line">        left: 230px;</span><br><span class="line"></span><br><span class="line">        top: 50px;</span><br><span class="line"></span><br><span class="line">        width: 80px;</span><br><span class="line"></span><br><span class="line">        height: 30px;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">      <span class="selector-class">.cloud3</span> &#123;</span></span><br><span class="line">        background-image: url(http://p2.qhimg.com/t0160c558d31f4d5202.png);</span><br><span class="line"></span><br><span class="line">        left: 130px;</span><br><span class="line"></span><br><span class="line">        top: 25px;</span><br><span class="line"></span><br><span class="line">        width: 100px;</span><br><span class="line"></span><br><span class="line">        height: 30px;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"img"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"cloud cloud1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"cloud cloud2"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"cloud cloud3"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>![image-20200528164121760](/Users/liwei/Library/Application Support/typora-user-images/image-20200528164121760.png)</p>
<p>在canvas和svg中也可以使用混合模式</p>
<h1 id="四-CSS响应式设计"><a href="#四-CSS响应式设计" class="headerlink" title="四. CSS响应式设计"></a>四. CSS响应式设计</h1><h2 id="3-1-CSS-Viewport"><a href="#3-1-CSS-Viewport" class="headerlink" title="3.1 CSS Viewport"></a>3.1 CSS Viewport</h2><h3 id="3-1-1-viewport的概念"><a href="#3-1-1-viewport的概念" class="headerlink" title="3.1.1 viewport的概念"></a>3.1.1 viewport的概念</h3><p>在 PC 端，视口指的是浏览器的可视区域，其宽度和浏览器窗口的宽度保持一致。在 CSS 标准文档中，视口也被称为初始包含块，它是所有 CSS 百分比宽度推算的根源，给 CSS 布局限制了一个最大宽度。</p>
<p>而移动端则较为复杂，它涉及到三个视口：<strong>布局视口（Layout Viewport）、视觉视口（Visual Viewport）和理想视口（Ideal Viewport）</strong>。</p>
<p>在 PC 端，视口指的是浏览器的可视区域，其宽度和浏览器窗口的宽度保持一致。在 CSS 标准文档中，视口也被称为初始包含块，它是所有 CSS 百分比宽度推算的根源，给 CSS 布局限制了一个最大宽度。</p>
<p>而移动端则较为复杂，它涉及到三个视口：布局视口（Layout Viewport）、视觉视口（Visual Viewport）和理想视口（Ideal Viewport）。</p>
<p>本文主要讨论移动端中的视口。</p>
<h3 id="1-基本概念"><a href="#1-基本概念" class="headerlink" title="1. 基本概念"></a>1. 基本概念</h3><h4 id="1-1-两种像素"><a href="#1-1-两种像素" class="headerlink" title="1.1 两种像素"></a>1.1 两种像素</h4><p>像素是计算机屏幕中显示特定颜色的最小区域。屏幕中的像素越多，同一范围内能看到的内容就越多。或者说，当设备尺寸相同时，像素越密集，画面就越精细。</p>
<p>那么，当我们在 CSS 中为一个元素设置属性 <code>width: 250px;</code> 时，会发生什么？这个元素的宽度究竟是多少像素呢？</p>
<p>事实上，这里已经涉及了两种不同的像素：物理像素和 CSS 像素。</p>
<h5 id="物理像素（设备像素，device-pixels）"><a href="#物理像素（设备像素，device-pixels）" class="headerlink" title="物理像素（设备像素，device pixels）"></a>物理像素（设备像素，device pixels）</h5><p>指的是设备屏幕的物理像素，任何设备的物理像素数量都是固定的。</p>
<h5 id="CSS-像素（CSS-pixels）"><a href="#CSS-像素（CSS-pixels）" class="headerlink" title="CSS 像素（CSS pixels）"></a>CSS 像素（CSS pixels）</h5><p>是 CSS 和 JS 中使用的一个抽象概念。它和物理像素之间的比例取决于屏幕的特性（是否为高密度）以及用户进行的缩放，由浏览器自行换算。</p>
<p>在 Apple 的视网膜屏（Retina）中，每 4 个像素为一组，渲染出普通屏幕中一个像素显示区域内的图像，从而实现更为精细的显示效果。此时， 250px 的元素跨越了 500 个物理像素的宽度。</p>
<p><img src="https://user-gold-cdn.xitu.io/2018/10/5/166435cbbd90a175?w=515&h=286&f=jpeg&s=24159" alt="img"></p>
<p>如果用户进行了放大，那么一个 CSS 像素还将跨越更多的物理像素。</p>
<h4 id="1-2-三种视口"><a href="#1-2-三种视口" class="headerlink" title="1.2  三种视口"></a>1.2  三种视口</h4><p>移动端浏览器通常宽度是 240px~640px，而大多数为 PC 端设计的网站宽度至少为 800px，如果仍以浏览器窗口作为视口的话，网站内容在手机上看起来会非常窄。</p>
<p>因此，引入了布局视口、视觉视口和理想视口三个概念，使得移动端中的视口与浏览器宽度不再相关联。</p>
<h5 id="布局视口（layout-viewport）"><a href="#布局视口（layout-viewport）" class="headerlink" title="布局视口（layout viewport）"></a>布局视口（layout viewport）</h5><p>一般移动设备的浏览器都默认设置了一个 viewport 元标签，定义一个虚拟的布局视口（layout viewport），用于解决早期的页面在手机上显示的问题。iOS, Android 基本都将这个视口分辨率设置为 980px，所以 PC 上的网页基本能在手机上呈现，只不过元素看上去很小，一般默认可以通过手动缩放网页。</p>
<p><img src="https://user-gold-cdn.xitu.io/2018/10/5/166437dad52855dc?w=336&h=285&f=png&s=51213" alt="img"></p>
<p>布局视口的宽度/高度可以通过 <code>document.documentElement.clientWidth / Height</code> 获取。</p>
<p><img src="https://user-gold-cdn.xitu.io/2018/10/5/166438178a342bba?w=1090&h=413&f=png&s=29912" alt="img"></p>
<p>可以看到，默认的布局视口宽度为 980px。如果要显式设置布局视口，可以使用 HTML 中的 meta 标签：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=400"</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://user-gold-cdn.xitu.io/2018/10/5/1664385fa84fc26d?w=1307&h=511&f=png&s=79210" alt="img"></p>
<p>布局视口使视口与移动端浏览器屏幕宽度完全独立开。CSS 布局将会根据它来进行计算，并被它约束。</p>
<h5 id="视觉视口（visual-viewport）"><a href="#视觉视口（visual-viewport）" class="headerlink" title="视觉视口（visual viewport）"></a>视觉视口（visual viewport）</h5><p>视觉视口是用户当前看到的区域，用户可以通过缩放操作视觉视口，同时不会影响布局视口。</p>
<p><img src="https://user-gold-cdn.xitu.io/2018/10/5/16643994a5a962cf?w=323&h=292&f=png&s=50158" alt="img"></p>
<p>视觉视口和缩放比例的关系为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">当前缩放值 &#x3D; 理想视口宽度  &#x2F; 视觉视口宽度</span><br></pre></td></tr></table></figure>

<p>所以，当用户放大时，视觉视口将会变小，CSS 像素将跨越更多的物理像素。</p>
<h5 id="理想视口（ideal-viewport）"><a href="#理想视口（ideal-viewport）" class="headerlink" title="理想视口（ideal viewport）"></a>理想视口（ideal viewport）</h5><p>布局视口的默认宽度并不是一个理想的宽度，于是 Apple 和其他浏览器厂商引入了理想视口的概念，它对设备而言是最理想的布局视口尺寸。显示在理想视口中的网站具有最理想的宽度，用户无需进行缩放。</p>
<p>理想视口的值其实就是屏幕分辨率的值，它对应的像素叫做设备逻辑像素（device independent pixel, dip）。dip 和设备的物理像素无关，一个 dip 在任意像素密度的设备屏幕上都占据相同的空间。如果用户没有进行缩放，那么一个 CSS 像素就等于一个 dip。</p>
<p>用下面的方法可以使布局视口与理想视口的宽度一致：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width"</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>实际上，这就是响应式布局的基础。</p>
<h3 id="2-视口的设置"><a href="#2-视口的设置" class="headerlink" title="2. 视口的设置"></a>2. 视口的设置</h3><p>我们可以使用视口元标签（viewport meta 标签）来进行布局视口的设置。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1.0,maximum-scale=1"</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>下面是每个属性的详细说明：</p>
<table>
<thead>
<tr>
<th>属性名</th>
<th>取值</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>width</td>
<td>正整数或device-width</td>
<td>定义视口的宽度，单位为像素</td>
</tr>
<tr>
<td>height</td>
<td>正整数或device-height</td>
<td>定义视口的高度，单位为像素，一般不用</td>
</tr>
<tr>
<td>initial-scale</td>
<td>[0.0-10.0]</td>
<td>定义初始缩放值</td>
</tr>
<tr>
<td>minimum-scale</td>
<td>[0.0-10.0]</td>
<td>定义放大最大比例，它必须小于或等于maximum-scale设置</td>
</tr>
<tr>
<td>maximum-scale</td>
<td>[0.0-10.0]</td>
<td>定义缩小最小比例，它必须大于或等于minimum-scale设置</td>
</tr>
<tr>
<td>user-scalable</td>
<td>yes / no</td>
<td>定义是否允许用户手动缩放页面，默认值 yes</td>
</tr>
</tbody></table>
<p>有几点值得注意：</p>
<ul>
<li>viewport 标签只对移动端浏览器有效，对 PC 端浏览器是无效的</li>
<li>当缩放比例为 100% 时，dip 宽度 = CSS 像素宽度 = 理想视口的宽度 = 布局视口的宽度</li>
<li>单独设置 initial-scale 或 width 都会有兼容性问题，所以设置布局视口为理想视口的最佳方法是同时设置这两个属性</li>
<li>即使设置了 user-scalable = no，在 Android Chrome 浏览器中也可以强制启用手动缩放</li>
</ul>
<h3 id="3-一倍图、二倍图、三倍图"><a href="#3-一倍图、二倍图、三倍图" class="headerlink" title="3. 一倍图、二倍图、三倍图"></a>3. 一倍图、二倍图、三倍图</h3><p>MacBook Pro 视网膜屏（Retina）显示器硬件像素是 2880px * 1800px。当设置屏幕分辨率为 1920px * 1200px 的时候，理想视口的宽度值是 1920px， 那么 dip 的宽度值就是 1920px。其与理想视口宽度的比值为1.5（2880/1920），这个比值叫做设备像素比：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">逻辑像素宽度 * 设备像素比 &#x3D; 物理像素宽度</span><br></pre></td></tr></table></figure>

<p>设备像素比可以通过 <code>window.devicePixelRatio</code> 来获取，或者使用 CSS 中的 <code>device-pixel-ratio</code>。</p>
<p>下面是常见的设备像素比：</p>
<ul>
<li>普通密度桌面显示屏：<code>devicePixelRatio = 1</code></li>
<li>高密度桌面显示屏(Mac Retina)：<code>devicePixelRatio = 2</code></li>
<li>主流手机显示屏：<code>devicePixelRatio = 2 or 3</code></li>
</ul>
<p>对于一张 100px * 100px 的图片，通过 CSS 设置其宽高：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">100px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在普通显示屏的电脑中打开是正常的，但假设在手机或 Retina 屏中打开，按照逻辑分辨率来渲染，他们的 <code>devicePixelRatio = 2</code>，那么就相当于拿 4 个物理像素来描绘 1 个电子像素。这等于拿一个2倍的放大镜去看图片，图片就会变得模糊。</p>
<p>这时，就需要使用 @2x 甚至 @3x 图来避免图片的失真。</p>
<h2 id="3-2-栅格布局"><a href="#3-2-栅格布局" class="headerlink" title="3.2 栅格布局"></a>3.2 栅格布局</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.col-1</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">width</span>: 8<span class="selector-class">.33</span>%;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.col-2</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">width</span>: 16<span class="selector-class">.66</span>%;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.col-3</span> &#123;</span></span><br><span class="line">            width: 25%;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.col-4</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">width</span>: 33<span class="selector-class">.33</span>%;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.col-5</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">width</span>: 41<span class="selector-class">.66</span>%;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.col-6</span> &#123;</span></span><br><span class="line">            width: 50%;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.col-7</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">width</span>: 58<span class="selector-class">.33</span>%;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.col-8</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">width</span>: 66<span class="selector-class">.66</span>%;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.col-9</span> &#123;</span></span><br><span class="line">            width: 75%;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.col-10</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">width</span>: 83<span class="selector-class">.33</span>%;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.col-11</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">width</span>: 91<span class="selector-class">.66</span>%;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.col-12</span> &#123;</span></span><br><span class="line">            width: 100%;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-attr">[class*=<span class="string">"col-"</span>]</span> &#123;</span></span><br><span class="line">            float: left;</span><br><span class="line">            padding: 15px;</span><br><span class="line">            border: 1px solid red;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.row</span><span class="selector-pseudo">:after</span> &#123;</span></span><br><span class="line">            content: "";</span><br><span class="line">            clear: both;</span><br><span class="line">            display: block;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        * &#123;</span><br><span class="line">            box-sizing: border-box;</span><br><span class="line">        &#125;</span><br><span class="line">        html &#123;</span><br><span class="line">            font-family: "Lucida Sans", sans-serif;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.header</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#9933cc</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#ffffff</span>;</span></span><br><span class="line">            padding: 15px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.menu</span> <span class="selector-tag">ul</span> &#123;</span></span><br><span class="line">            list-style-type: none;</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.menu</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line">            padding: 8px;</span><br><span class="line">            margin-bottom: 7px;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#33b5e5</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#ffffff</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">box-shadow</span>: 0 1<span class="selector-tag">px</span> 3<span class="selector-tag">px</span> <span class="selector-tag">rgba</span>(0, 0, 0, 0<span class="selector-class">.12</span>), 0 1<span class="selector-tag">px</span> 2<span class="selector-tag">px</span> <span class="selector-tag">rgba</span>(0, 0, 0, 0<span class="selector-class">.24</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.menu</span> <span class="selector-tag">li</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#0099cc</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.menu</span> &#123;</span></span><br><span class="line">            width: 25%;</span><br><span class="line">            float: left;</span><br><span class="line"><span class="css">            <span class="selector-tag">border-right</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#333</span>;</span></span><br><span class="line">            height: 100vh;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.main</span> &#123;</span></span><br><span class="line">            width: 75%;</span><br><span class="line">            float: left;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">header</span> <span class="attr">class</span>=<span class="string">"header"</span>&gt;</span></span><br><span class="line">        header</span><br><span class="line">    <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">menu</span> <span class="attr">class</span>=<span class="string">"menu"</span>&gt;</span>menu<span class="tag">&lt;/<span class="name">menu</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">main</span> <span class="attr">class</span>=<span class="string">"main"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-3"</span>&gt;</span></span><br><span class="line">                col-3</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-9"</span>&gt;</span></span><br><span class="line">                col-9</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-3"</span>&gt;</span>box01<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-3"</span>&gt;</span>box02<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-3"</span>&gt;</span>box03<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-3"</span>&gt;</span>box04<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="3-3-CSS-媒体查询"><a href="#3-3-CSS-媒体查询" class="headerlink" title="3.3  CSS 媒体查询"></a>3.3  CSS 媒体查询</h2><h3 id="3-3-1-使用媒体查询完善栅格系统（添加断点）"><a href="#3-3-1-使用媒体查询完善栅格系统（添加断点）" class="headerlink" title="3.3.1 使用媒体查询完善栅格系统（添加断点）"></a>3.3.1 使用媒体查询完善栅格系统（添加断点）</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="keyword">@media</span> <span class="keyword">only</span> screen <span class="keyword">and</span> (<span class="attribute">min-width:</span> <span class="number">600px</span>) &#123;</span></span><br><span class="line"><span class="css">            <span class="comment">/* For tablets: */</span></span></span><br><span class="line"><span class="css">            <span class="selector-class">.col-m-1</span> &#123;<span class="attribute">width</span>: <span class="number">8.33%</span>;&#125;</span></span><br><span class="line"><span class="css">            <span class="selector-class">.col-m-2</span> &#123;<span class="attribute">width</span>: <span class="number">16.66%</span>;&#125;</span></span><br><span class="line"><span class="css">            <span class="selector-class">.col-m-3</span> &#123;<span class="attribute">width</span>: <span class="number">25%</span>;&#125;</span></span><br><span class="line"><span class="css">            <span class="selector-class">.col-m-4</span> &#123;<span class="attribute">width</span>: <span class="number">33.33%</span>;&#125;</span></span><br><span class="line"><span class="css">            <span class="selector-class">.col-m-5</span> &#123;<span class="attribute">width</span>: <span class="number">41.66%</span>;&#125;</span></span><br><span class="line"><span class="css">            <span class="selector-class">.col-m-6</span> &#123;<span class="attribute">width</span>: <span class="number">50%</span>;&#125;</span></span><br><span class="line"><span class="css">            <span class="selector-class">.col-m-7</span> &#123;<span class="attribute">width</span>: <span class="number">58.33%</span>;&#125;</span></span><br><span class="line"><span class="css">            <span class="selector-class">.col-m-8</span> &#123;<span class="attribute">width</span>: <span class="number">66.66%</span>;&#125;</span></span><br><span class="line"><span class="css">            <span class="selector-class">.col-m-9</span> &#123;<span class="attribute">width</span>: <span class="number">75%</span>;&#125;  </span></span><br><span class="line"><span class="css">            <span class="selector-class">.col-m-10</span> &#123;<span class="attribute">width</span>: <span class="number">83.33%</span>;&#125;</span></span><br><span class="line"><span class="css">            <span class="selector-class">.col-m-11</span> &#123;<span class="attribute">width</span>: <span class="number">91.66%</span>;&#125;</span></span><br><span class="line"><span class="css">            <span class="selector-class">.col-m-12</span> &#123;<span class="attribute">width</span>: <span class="number">100%</span>;&#125;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="keyword">@media</span> <span class="keyword">only</span> screen <span class="keyword">and</span> (<span class="attribute">min-width:</span> <span class="number">768px</span>) &#123;</span></span><br><span class="line"><span class="css">            <span class="comment">/* For desktop: */</span></span></span><br><span class="line"><span class="css">            <span class="selector-class">.col-1</span> &#123;<span class="attribute">width</span>: <span class="number">8.33%</span>;&#125;</span></span><br><span class="line"><span class="css">            <span class="selector-class">.col-2</span> &#123;<span class="attribute">width</span>: <span class="number">16.66%</span>;&#125;</span></span><br><span class="line"><span class="css">            <span class="selector-class">.col-3</span> &#123;<span class="attribute">width</span>: <span class="number">25%</span>;&#125;</span></span><br><span class="line"><span class="css">            <span class="selector-class">.col-4</span> &#123;<span class="attribute">width</span>: <span class="number">33.33%</span>;&#125;</span></span><br><span class="line"><span class="css">            <span class="selector-class">.col-5</span> &#123;<span class="attribute">width</span>: <span class="number">41.66%</span>;&#125;</span></span><br><span class="line"><span class="css">            <span class="selector-class">.col-6</span> &#123;<span class="attribute">width</span>: <span class="number">50%</span>;&#125;</span></span><br><span class="line"><span class="css">            <span class="selector-class">.col-7</span> &#123;<span class="attribute">width</span>: <span class="number">58.33%</span>;&#125;</span></span><br><span class="line"><span class="css">            <span class="selector-class">.col-8</span> &#123;<span class="attribute">width</span>: <span class="number">66.66%</span>;&#125;</span></span><br><span class="line"><span class="css">            <span class="selector-class">.col-9</span> &#123;<span class="attribute">width</span>: <span class="number">75%</span>;&#125;</span></span><br><span class="line"><span class="css">            <span class="selector-class">.col-10</span> &#123;<span class="attribute">width</span>: <span class="number">83.33%</span>;&#125;</span></span><br><span class="line"><span class="css">            <span class="selector-class">.col-11</span> &#123;<span class="attribute">width</span>: <span class="number">91.66%</span>;&#125;</span></span><br><span class="line"><span class="css">            <span class="selector-class">.col-12</span> &#123;<span class="attribute">width</span>: <span class="number">100%</span>;&#125;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-attr">[class*=<span class="string">"col-"</span>]</span> &#123;</span></span><br><span class="line">            float: left;</span><br><span class="line">            padding: 15px;</span><br><span class="line">            border: 1px solid red;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.row</span><span class="selector-pseudo">:after</span> &#123;</span></span><br><span class="line">            content: "";</span><br><span class="line">            clear: both;</span><br><span class="line">            display: block;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="keyword">@media</span> <span class="keyword">only</span> screen <span class="keyword">and</span> (<span class="attribute">max-width:</span> <span class="number">768px</span>) &#123;</span></span><br><span class="line"><span class="css">            <span class="comment">/* For mobile phones: */</span></span></span><br><span class="line"><span class="css">            <span class="selector-attr">[class*=<span class="string">"col-"</span>]</span> &#123;</span></span><br><span class="line">                width: 100%;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        * &#123;</span><br><span class="line">            box-sizing: border-box;</span><br><span class="line">        &#125;</span><br><span class="line">        html &#123;</span><br><span class="line">            font-family: "Lucida Sans", sans-serif;</span><br><span class="line">            orientation: landscape;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.header</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#9933cc</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#ffffff</span>;</span></span><br><span class="line">            padding: 15px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.menu</span> <span class="selector-tag">ul</span> &#123;</span></span><br><span class="line">            list-style-type: none;</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.menu</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line">            padding: 8px;</span><br><span class="line">            margin-bottom: 7px;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#33b5e5</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#ffffff</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">box-shadow</span>: 0 1<span class="selector-tag">px</span> 3<span class="selector-tag">px</span> <span class="selector-tag">rgba</span>(0, 0, 0, 0<span class="selector-class">.12</span>), 0 1<span class="selector-tag">px</span> 2<span class="selector-tag">px</span> <span class="selector-tag">rgba</span>(0, 0, 0, 0<span class="selector-class">.24</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.menu</span> <span class="selector-tag">li</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#0099cc</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.menu</span> &#123;</span></span><br><span class="line">            width: 25%;</span><br><span class="line">            float: left;</span><br><span class="line"><span class="css">            <span class="selector-tag">border-right</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#333</span>;</span></span><br><span class="line">            height: 100vh;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.main</span> &#123;</span></span><br><span class="line">            width: 75%;</span><br><span class="line">            float: left;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">header</span> <span class="attr">class</span>=<span class="string">"header"</span>&gt;</span></span><br><span class="line">        header</span><br><span class="line">    <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">menu</span> <span class="attr">class</span>=<span class="string">"menu"</span>&gt;</span>menu<span class="tag">&lt;/<span class="name">menu</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">main</span> <span class="attr">class</span>=<span class="string">"main"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-3"</span>&gt;</span></span><br><span class="line">                col-3</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-9"</span>&gt;</span></span><br><span class="line">                col-9</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-3"</span>&gt;</span>box01<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-3"</span>&gt;</span>box02<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-3"</span>&gt;</span>box03<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-3"</span>&gt;</span>box04<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="3-3-2-针对屏幕方向的媒体查询"><a href="#3-3-2-针对屏幕方向的媒体查询" class="headerlink" title="3.3.2 针对屏幕方向的媒体查询"></a>3.3.2 针对屏幕方向的媒体查询</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: yellow;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">orientation:</span> landscape) &#123;</span><br><span class="line">  <span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">flex-direction</span>: row;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">orientation:</span> portrait) &#123;</span><br><span class="line">  <span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">flex-direction</span>: column;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>2020-2020-5-28-响应式设计</title>
    <url>/2020/05/29/2020-2020-5-28-%E5%93%8D%E5%BA%94%E5%BC%8F%E8%AE%BE%E8%AE%A1/</url>
    <content><![CDATA[<h1 id="一-响应式元素及媒介"><a href="#一-响应式元素及媒介" class="headerlink" title="一. 响应式元素及媒介"></a>一. 响应式元素及媒介</h1><h2 id="1-1-基于宽度百分比的图像缩放"><a href="#1-1-基于宽度百分比的图像缩放" class="headerlink" title="1.1 基于宽度百分比的图像缩放"></a>1.1 基于宽度百分比的图像缩放</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">p</span><span class="selector-class">.text</span> &#123;</span></span><br><span class="line">            float: left;</span><br><span class="line">            width: 60%;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-tag">div</span><span class="selector-class">.img-wrap</span> &#123;</span></span><br><span class="line">            float: right;</span><br><span class="line">            width: 40%;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-tag">img</span><span class="selector-class">.responsive</span> &#123;</span></span><br><span class="line">            max-width: 100%;</span><br><span class="line">            height: auto;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text"</span>&gt;</span>Lorem ipsum dolor sit amet consectetur adipisicing elit. Assumenda modi minima ullam quas eos natus placeat pariatur, deleniti, architecto, alias fugit. Totam illo voluptatum inventore odio, cupiditate enim veritatis praesentium.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"img-wrap"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./img/dragon.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"responsive"</span> <span class="attr">alt</span>=<span class="string">"dragon"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            Lorem ipsum dolor sit amet consectetur adipisicing elit. Molestiae eligendi sequi rem! Aliquam eaque repellendus necessitatibus? Explicabo consequatur iure, incidunt et laboriosam neque culpa placeat, dignissimos, voluptatibus ab numquam minima.</span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>原理:</p>
<p>设置在CSS中图像元素的responsive属性会强制该元素100%占据其父元素的空间。当父元素的宽度改变时，图像元素也会相应改变并填充对应的宽度。而属性height:auto的作用在于保证图像自身的高宽比例不会发生变化。</p>
<h2 id="1-2-使视频自适应于屏幕宽度"><a href="#1-2-使视频自适应于屏幕宽度" class="headerlink" title="1.2 使视频自适应于屏幕宽度"></a>1.2 使视频自适应于屏幕宽度</h2><p>如果我们自己自己管理视频源，我们可以通过以下代码来实现视频的自适应效果</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        video &#123;</span><br><span class="line">            max-width: 100%;</span><br><span class="line">            height: auto;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">video</span> <span class="attr">width</span>=<span class="string">"1920"</span> <span class="attr">height</span>=<span class="string">"1080"</span> <span class="attr">controls</span>=<span class="string">"controls"</span> <span class="attr">autoplay</span>=<span class="string">"autoplay"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"./video/oceans.mp4"</span> <span class="attr">type</span>=<span class="string">"video/mp4"</span>&gt;</span></span><br><span class="line">        Yout browser dost not support the video tag</span><br><span class="line">    <span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>但是如果我们的视频托管在YouTube等平台上，我们需要在页面中通过嵌入的Iframe或者object代码片段来进行视频展示， 通过下述代码来进行实现</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        video &#123;</span><br><span class="line">            max-width: 100%;</span><br><span class="line">            height: auto;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.video-wrap</span> &#123;</span></span><br><span class="line">            position: relative;</span><br><span class="line">            padding-bottom: 55%;</span><br><span class="line">            padding-top: 30px;  </span><br><span class="line">            height: 0;</span><br><span class="line">            overflow: hidden;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.video-wrap</span> <span class="selector-tag">iframe</span> &#123;</span></span><br><span class="line">            position: absolute;</span><br><span class="line">            top: 0;</span><br><span class="line">            width: 100%;</span><br><span class="line">            height: 100%;  </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.video-outer-wrap</span> &#123;</span></span><br><span class="line">            width: 640px;</span><br><span class="line">            max-width: 100%;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">video</span> <span class="attr">width</span>=<span class="string">"640"</span> <span class="attr">height</span>=<span class="string">"480"</span> <span class="attr">controls</span>=<span class="string">"controls"</span> <span class="attr">autoplay</span>=<span class="string">"autoplay"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"./video/oceans.mp4"</span> <span class="attr">type</span>=<span class="string">"video/mp4"</span>&gt;</span></span><br><span class="line">        Yout browser dost not support the video tag</span><br><span class="line">    <span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"video-outer-wrap"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"video-wrap"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">"https://media.w3.org/2010/05/sintel/trailer.mp4"</span> <span class="attr">frameborder</span>=<span class="string">"0"</span> <span class="attr">width</span>=<span class="string">"800"</span> <span class="attr">height</span>=<span class="string">"450"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>原理</strong></p>
<p>该方法称为固有比率视频法（Intrinsic Ratiosfor Videos。在元素中所嵌入的视频具有固有的长宽比，并且被赋予了一个绝对位置。这就使得允许视频窗口大小改变的同时，锁定视频长宽比。</p>
<p>一些用来测试视频的地址</p>
<p>1、<a href="https://link.jianshu.com?t=https%3A%2F%2Fmedia.w3.org%2F2010%2F05%2Fsintel%2Ftrailer.mp4" target="_blank" rel="noopener">https://media.w3.org/2010/05/sintel/trailer.mp4</a><br> 2、<a href="https://link.jianshu.com?t=http%3A%2F%2Fwww.w3school.com.cn%2Fexample%2Fhtml5%2Fmov_bbb.mp4" target="_blank" rel="noopener">http://www.w3school.com.cn/example/html5/mov_bbb.mp4</a><br> 3、<a href="https://link.jianshu.com?t=https%3A%2F%2Fwww.w3schools.com%2Fhtml%2Fmovie.mp4" target="_blank" rel="noopener">https://www.w3schools.com/html/movie.mp4</a><br> 4、<a href="https://link.jianshu.com?t=http%3A%2F%2Fclips.vorwaerts-gmbh.de%2Fbig_buck_bunny.mp4" target="_blank" rel="noopener">http://clips.vorwaerts-gmbh.de/big_buck_bunny.mp4</a><br> 5、<a href="https://link.jianshu.com?t=https%3A%2F%2Fplayer.vimeo.com%2Fexternal%2F188350983.sd.mp4%3Fs%3D0bdf01fb5f5c66e43ddae76f573cef2a7786de64%26profile_id%3D164" target="_blank" rel="noopener">https://player.vimeo.com/external/188350983.sd.mp4?s=0bdf01fb5f5c66e43ddae76f573cef2a7786de64&amp;profile_id=164</a><br> 6、<a href="https://link.jianshu.com?t=https%3A%2F%2Fplayer.vimeo.com%2Fexternal%2F188355959.sd.mp4%3Fs%3De5eea0f749282013db81a7e5cd047c57e066e2b9%26profile_id%3D164" target="_blank" rel="noopener">https://player.vimeo.com/external/188355959.sd.mp4?s=e5eea0f749282013db81a7e5cd047c57e066e2b9&amp;profile_id=164</a><br> 7、<a href="https://link.jianshu.com?t=https%3A%2F%2Fplayer.vimeo.com%2Fexternal%2F188365455.sd.mp4%3Fs%3D7343acee6a02371b4ffeb25760bcbf4b627ccadd%26profile_id%3D164" target="_blank" rel="noopener">https://player.vimeo.com/external/188365455.sd.mp4?s=7343acee6a02371b4ffeb25760bcbf4b627ccadd&amp;profile_id=164</a><br> 8、<a href="https://link.jianshu.com?t=https%3A%2F%2Fplayer.vimeo.com%2Fexternal%2F188421287.sd.mp4%3Fs%3Dbdbf8a61c40502211971571fef384f52fe79dbbe%26profile_id%3D164" target="_blank" rel="noopener">https://player.vimeo.com/external/188421287.sd.mp4?s=bdbf8a61c40502211971571fef384f52fe79dbbe&amp;profile_id=164</a></p>
<h2 id="1-3-响应式导航"><a href="#1-3-响应式导航" class="headerlink" title="1.3 响应式导航"></a>1.3 响应式导航</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width:</span> <span class="number">800px</span>) &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-class">.small-menu</span> &#123;</span></span><br><span class="line">                display: inline;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="css">            <span class="selector-class">.large-menu</span> &#123;</span></span><br><span class="line">                display: none;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width:</span> <span class="number">801px</span>) <span class="keyword">and</span> (<span class="attribute">max-width:</span> <span class="number">1024px</span>) &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-class">.small-menu</span> &#123;</span></span><br><span class="line">                display: none;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="css">            <span class="selector-class">.large-menu</span> &#123;</span></span><br><span class="line">                display: inline;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="css">            <span class="selector-class">.large-menu</span> <span class="selector-tag">ul</span> &#123;</span></span><br><span class="line">                list-style-type: none;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="css">            <span class="selector-class">.large-menu</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line">                display: inline;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="css">            <span class="selector-class">.content</span> &#123;</span></span><br><span class="line">                width: 100%;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width:</span> <span class="number">1025px</span>) &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-class">.small-menu</span> &#123;</span></span><br><span class="line">                display: none;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="css">            <span class="selector-class">.large-menu</span> &#123;</span></span><br><span class="line">                display: inline;</span><br><span class="line">                float: left;</span><br><span class="line">                width: 20%;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="css">            <span class="selector-class">.content</span> &#123;</span></span><br><span class="line">                float: right;</span><br><span class="line">                width: 80%;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"small-menu"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"URL"</span> <span class="attr">onchange</span>=<span class="string">"window.location.href=this.form.URL.options[this.form.URL.selectedIndex].value"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"blog.html"</span>&gt;</span>blog<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"home.html"</span>&gt;</span>home<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"tutorials.html"</span>&gt;</span>tutorials<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"large-menu"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"blog.html"</span>&gt;</span>blog<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"home.html"</span>&gt;</span>home<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"tutorials.html"</span>&gt;</span>tutorials<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            Lorem ipsum dolor sit amet consectetur adipisicing elit. Harum eaque vitae repellat quidem deserunt rem necessitatibus aspernatur corrupti. Odio nesciunt molestias, reiciendis temporibus ipsa blanditiis voluptatem unde suscipit quae recusandae?</span><br><span class="line">            Non, facere quaerat dignissimos rem voluptatum provident tenetur eaque, incidunt magni rerum aliquam. Expedita pariatur, excepturi officiis, dolores voluptate iure suscipit, omnis facere minus sint modi sit distinctio quos temporibus?</span><br><span class="line">            Id, commodi! Harum dolorum itaque, id odio sunt quidem aliquid dignissimos accusantium dicta officia quasi facilis unde eaque nobis obcaecati debitis odit provident illum incidunt doloribus repellat cumque similique aliquam.</span><br><span class="line">            Culpa suscipit consequatur, voluptatem itaque ad cupiditate, non eos voluptatibus, earum nostrum beatae provident in dicta totam nisi autem eaque quos. Libero quas rem cumque commodi vel deleniti recusandae neque.</span><br><span class="line">            Recusandae facilis quis repellat magnam quas! Ipsa, illum! Repudiandae culpa doloribus, accusantium explicabo aliquid, quaerat placeat, error deleniti eos fugiat eaque nostrum laborum atque beatae quae quibusdam possimus aspernatur in.</span><br><span class="line">            Quis explicabo fuga eaque perspiciatis consequuntur rerum corporis incidunt cumque aut ratione labore, praesentium id sapiente maxime dicta facilis architecto fugit error soluta reprehenderit delectus illum animi esse. Error, totam.</span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="1-4-基于尺寸的响应式内边距"><a href="#1-4-基于尺寸的响应式内边距" class="headerlink" title="1.4 基于尺寸的响应式内边距"></a>1.4 基于尺寸的响应式内边距</h2><p>为了衬托一个响应式宽度的图像元素，需要添加相对的内边距。如果使用静态的宽度内边距，图像内边距在较小的浏览器窗口中可能会显得过大，从而与其他附近元素相互挤压，甚至可能将图像挤出屏幕</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        * &#123;</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.img-wrapper</span> &#123;</span></span><br><span class="line">            width: 25%;</span><br><span class="line">        &#125;</span><br><span class="line">        img &#123;</span><br><span class="line">            max-width: 100%;</span><br><span class="line">            height: auto;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#cccccc</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">padding</span>: 3<span class="selector-class">.3</span>%;</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"img-wrapper"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://ss1.bdstatic.com/70cFuXSh_Q1YnxGkpoWK1HF6hhy/it/u=1732644520,3082118771&amp;fm=26&amp;gp=0.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>为了找到内边距的百分比，使用内边距除以总宽度，即10/280(280为非响应式下图片的宽度)+20=0.033，舍入为3.3%</p>
<h1 id="二-响应式字体"><a href="#二-响应式字体" class="headerlink" title="二. 响应式字体"></a>二. 响应式字体</h1><h2 id="2-1-创建自适应的响应式字体"><a href="#2-1-创建自适应的响应式字体" class="headerlink" title="2.1 创建自适应的响应式字体"></a>2.1 创建自适应的响应式字体</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">orientation:</span> portrait) &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">p</span><span class="selector-class">.a</span> &#123;</span></span><br><span class="line">                font-size: 3rem;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">orientation:</span> landscape) &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">p</span><span class="selector-class">.a</span> &#123;</span></span><br><span class="line">                font-size: 1rem;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"a"</span>&gt;</span></span><br><span class="line">        Lorem ipsum dolor sit amet consectetur adipisicing elit. Quos, debitis dolorem. Nisi dolores eligendi omnis, odit itaque distinctio reiciendis autem non veritatis ex, facere laborum atque fugiat repudiandae? Quia, eius.</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"b"</span>&gt;</span></span><br><span class="line">        Lorem ipsum dolor sit amet consectetur adipisicing elit. Error et suscipit esse quibusdam minima sunt iure enim, consequatur dicta ab quod non numquam asperiores nobis a doloremque dignissimos harum quae.Aspernatur tempora soluta ab totam, perspiciatis praesentium animi adipisci unde, ad impedit maiores harum est. Nesciunt, nobis, hic architecto quos consequuntur a, ad vero aperiam autem asperiores dicta omnis corrupti?</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="2-2-使用画布实现文本阴影"><a href="#2-2-使用画布实现文本阴影" class="headerlink" title="2.2 使用画布实现文本阴影"></a>2.2 使用画布实现文本阴影</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">onload</span>=<span class="string">"drawCanvas()"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">"canvas"</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">drawCanvas</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">"canvas"</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> ctx = canvas.getContext(<span class="string">"2d"</span>);</span></span><br><span class="line">            ctx.shadowOffsetX = 2;</span><br><span class="line">            ctx.shadowOffsetY = 2;</span><br><span class="line">            ctx.shadowBlur = 2;</span><br><span class="line"><span class="actionscript">            ctx.shadowColor = <span class="string">"rgba(0,0,0,.5)"</span></span></span><br><span class="line"><span class="actionscript">            ctx.font = <span class="string">"20px Times New Roman"</span>;</span></span><br><span class="line"><span class="actionscript">            ctx.fillStyle = <span class="string">"Black"</span>;</span></span><br><span class="line"><span class="actionscript">            ctx.fillText(<span class="string">"This is the canvas"</span>, <span class="number">5</span>, <span class="number">30</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="2-3-使用画布实现内侧阴影和外侧阴影"><a href="#2-3-使用画布实现内侧阴影和外侧阴影" class="headerlink" title="2.3 使用画布实现内侧阴影和外侧阴影"></a>2.3 使用画布实现内侧阴影和外侧阴影</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">"canvas"</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> ctx = <span class="built_in">document</span>.getElementById(<span class="string">"canvas"</span>).getContext(<span class="string">"2d"</span>);</span></span><br><span class="line">        ctx.shadowOffsetX = -1;</span><br><span class="line">        ctx.shadowOffsetY = -1;</span><br><span class="line">        ctx.shadowBlur = 2;</span><br><span class="line"><span class="actionscript">        ctx.shadowColor = <span class="string">"#888888"</span>;</span></span><br><span class="line"><span class="actionscript">        ctx.textAlign = <span class="string">"left"</span>;</span></span><br><span class="line"><span class="actionscript">        ctx.font = <span class="string">"33px Times New Roman"</span>;</span></span><br><span class="line"><span class="actionscript">        ctx.fillStyle = <span class="string">"#666"</span>;</span></span><br><span class="line"><span class="actionscript">        ctx.fillText(<span class="string">"This is the canvas"</span>, <span class="number">0</span>, <span class="number">50</span>);</span></span><br><span class="line"><span class="actionscript">        ctx.strokeStyle = <span class="string">"#555"</span>;</span></span><br><span class="line">        ctx.linewidth = 2</span><br><span class="line"><span class="actionscript">        ctx.strokeText(<span class="string">"This is the canvas"</span>, <span class="number">2</span>, <span class="number">50</span>);</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="2-4-使用画布旋转文本"><a href="#2-4-使用画布旋转文本" class="headerlink" title="2.4 使用画布旋转文本"></a>2.4 使用画布旋转文本</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">"canvas"</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">"canvas"</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> ctx = canvas.getContext(<span class="string">"2d"</span>);</span></span><br><span class="line">        canvas.width = 250;</span><br><span class="line">        canvas.height = 250;</span><br><span class="line"><span class="javascript">        ctx.rotate(<span class="built_in">Math</span>.PI/<span class="number">4</span>, <span class="number">0</span>, <span class="number">0</span>);</span></span><br><span class="line">        ctx.shadowOffsetX = -1;</span><br><span class="line">        ctx.shadowOffsetY = -1;</span><br><span class="line">        ctx.shadowBlur = 2;</span><br><span class="line"><span class="actionscript">        ctx.shadowColor = <span class="string">"#888888"</span>;</span></span><br><span class="line"><span class="actionscript">        ctx.textAlign = <span class="string">"left"</span>;</span></span><br><span class="line"><span class="actionscript">        ctx.font = <span class="string">"33px Times New Roman"</span>;</span></span><br><span class="line"><span class="actionscript">        ctx.fillStyle = <span class="string">"#666"</span>;</span></span><br><span class="line"><span class="actionscript">        ctx.fillText(<span class="string">"This is the canvas"</span>, <span class="number">0</span>, <span class="number">50</span>);</span></span><br><span class="line"><span class="actionscript">        ctx.strokeStyle = <span class="string">"#555"</span>;</span></span><br><span class="line">        ctx.linewidth = 2</span><br><span class="line"><span class="actionscript">        ctx.strokeText(<span class="string">"This is the canvas"</span>, <span class="number">2</span>, <span class="number">50</span>);</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="2-5-使用CSS3制作3D文本"><a href="#2-5-使用CSS3制作3D文本" class="headerlink" title="2.5  使用CSS3制作3D文本"></a>2.5  使用CSS3制作3D文本</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        h1 &#123;</span><br><span class="line"><span class="css">            <span class="selector-tag">text-shadow</span>: 0<span class="selector-tag">px</span> 0<span class="selector-tag">px</span> 0<span class="selector-tag">px</span> <span class="selector-id">#888</span>,</span></span><br><span class="line"><span class="css">                        <span class="selector-tag">-1px</span> <span class="selector-tag">-1px</span> 0<span class="selector-tag">px</span> <span class="selector-id">#777</span>,</span></span><br><span class="line"><span class="css">                        <span class="selector-tag">-2px</span> <span class="selector-tag">-2px</span> 1<span class="selector-tag">px</span> <span class="selector-id">#666</span>,</span></span><br><span class="line"><span class="css">                        <span class="selector-tag">-3px</span> <span class="selector-tag">-3px</span> 1<span class="selector-tag">px</span> <span class="selector-id">#555</span>,</span></span><br><span class="line"><span class="css">                        <span class="selector-tag">-4px</span> <span class="selector-tag">-4px</span> 2<span class="selector-tag">px</span> <span class="selector-id">#444</span>,</span></span><br><span class="line"><span class="css">                        <span class="selector-tag">-5px</span> <span class="selector-tag">-5px</span> 3<span class="selector-tag">px</span> <span class="selector-id">#333</span>,</span></span><br><span class="line"><span class="css">                        <span class="selector-tag">-6px</span> <span class="selector-tag">-6px</span> 4<span class="selector-tag">px</span> <span class="selector-id">#000</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello CSS3<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="2-6-基于文本遮罩的文本纹理"><a href="#2-6-基于文本遮罩的文本纹理" class="headerlink" title="2.6 基于文本遮罩的文本纹理"></a>2.6 基于文本遮罩的文本纹理</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        h1 &#123;</span><br><span class="line">            font: 140px "Arail";</span><br><span class="line">            color: blue;</span><br><span class="line"><span class="css">            <span class="selector-tag">text-shadow</span>: 0<span class="selector-tag">px</span> 0<span class="selector-tag">px</span> 10<span class="selector-tag">px</span> <span class="selector-id">#f0f0f0</span>;</span></span><br><span class="line">            width: 100%; </span><br><span class="line">            padding: 12% 0 12%;</span><br><span class="line">            margin: 0;</span><br><span class="line">            text-align: center;</span><br><span class="line">            -webkit-mask-image: url("./img/20190525170610357.png");</span><br><span class="line">            mask-image: url("./img/20190525170610357.png");</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">        HELLO CSS3</span><br><span class="line">    <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="2-7-基于相对字体大小的按钮"><a href="#2-7-基于相对字体大小的按钮" class="headerlink" title="2.7 基于相对字体大小的按钮"></a>2.7 基于相对字体大小的按钮</h2><p>REM是CSS3引入的新字体尺寸单位。是Root EM的简写，意即相对于根元素的字体大小。而EM是相对于父元素的字体大小，因此二者是有区别的。一种使用场景是在某些元素中使用REM，让其获得相对于整个body基本字体大小的值。</p>
<p>原理</p>
<p>字体大小单位REM创建了一个字体大小，该字体大小是相对于在HTML或body元素中的已经声明的基本字体大小而言的，如果未声明基本字体大小，则是相对于内建字体大小的。而通过@media查询的方式则能在不同设备和不同方向下给出实现相对字体大小的解决方案。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        * &#123;</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        html &#123;</span><br><span class="line"><span class="css">            <span class="selector-tag">font-size</span>: 62<span class="selector-class">.5</span>%;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width:</span> <span class="number">1024px</span>) &#123;</span></span><br><span class="line">            input &#123;</span><br><span class="line">                font-size: 1rem;</span><br><span class="line">                width: 84px;</span><br><span class="line">                padding: 2%;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width:</span> <span class="number">1280px</span>) &#123;</span></span><br><span class="line">            input &#123;</span><br><span class="line">                font-size: 2rem;</span><br><span class="line">                width: 84px;</span><br><span class="line">                padding: 2%;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-device-width:</span> <span class="number">480px</span>) <span class="keyword">and</span> (<span class="attribute">orientation:</span> landscape) &#123;</span></span><br><span class="line">            input &#123;</span><br><span class="line">                font-size: 2rem;</span><br><span class="line">                width: 25%;</span><br><span class="line">                padding: 2%;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-device-width:</span> <span class="number">480px</span>) <span class="keyword">and</span> (<span class="attribute">orientation:</span> portrait) &#123;</span></span><br><span class="line">            input &#123;</span><br><span class="line"><span class="css">                <span class="selector-tag">font-size</span>: 2<span class="selector-class">.4rem</span>;</span></span><br><span class="line">                width: 30%;</span><br><span class="line">                padding: 2%;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Lorem ipsum dolor sit amet consectetur adipisicing elit. Iste at fugiat doloremque voluptates saepe quaerat nam tempora officiis quisquam laborum deserunt dolor, rem ipsa sint vel blanditiis perspiciatis ex rerum!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"Submit"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="三-响应式布局"><a href="#三-响应式布局" class="headerlink" title="三. 响应式布局"></a>三. 响应式布局</h1><h2 id="3-1-基于min-width和max-width属性的响应式布局"><a href="#3-1-基于min-width和max-width属性的响应式布局" class="headerlink" title="3.1 基于min-width和max-width属性的响应式布局"></a>3.1 基于min-width和max-width属性的响应式布局</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        article &#123;</span><br><span class="line">            width: 100%;</span><br><span class="line">            max-width: 1280px;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#555</span>;</span></span><br><span class="line">            overflow: hidden;</span><br><span class="line">        &#125;</span><br><span class="line">        h1 &#123;</span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line">        img &#123;</span><br><span class="line">            width: 100%;</span><br><span class="line">            height: auto;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.one</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#333</span>;</span></span><br><span class="line">            min-width: 200px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.two</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#666</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.three</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#ccc</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.float</span> &#123;</span></span><br><span class="line">            max-width: 350px;</span><br><span class="line">            float: left;</span><br><span class="line">            text-align: justify;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">article</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>基于min-width和max-width的响应式实现<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"one float"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./img//1.png"</span> <span class="attr">alt</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"two float"</span>&gt;</span></span><br><span class="line">            Lorem ipsum dolor sit amet consectetur adipisicing elit. Vel esse mollitia soluta exercitationem possimus perspiciatis cum, aut laudantium totam, eveniet numquam, laborum tenetur. Quia nesciunt perspiciatis nostrum dicta aspernatur aut.</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"three float"</span>&gt;</span></span><br><span class="line">            Lorem ipsum dolor sit amet consectetur adipisicing elit. Numquam maxime similique dolores commodi libero temporibus, eaque ad consequuntur deleniti sequi architecto totam esse magni consectetur nisi ratione magnam excepturi obcaecati.</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="3-2-基于媒介查询创建响应式宽度布局"><a href="#3-2-基于媒介查询创建响应式宽度布局" class="headerlink" title="3.2 基于媒介查询创建响应式宽度布局"></a>3.2 基于媒介查询创建响应式宽度布局</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width:</span> <span class="number">960px</span>) &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-class">.content</span> &#123;</span></span><br><span class="line">                width: 90%;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="css">            <span class="selector-class">.comments</span> &#123;</span></span><br><span class="line">                width: 90%;</span><br><span class="line">                padding: 1% 5%;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="css">            <span class="selector-class">.nav</span> &#123;</span></span><br><span class="line">                padding: 1% 5%;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width:</span> <span class="number">961px</span>) <span class="keyword">and</span> (<span class="attribute">max-width:</span> <span class="number">1280px</span>) &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-class">.nav</span> &#123; <span class="attribute">padding</span>:  <span class="number">1%</span> <span class="number">5%</span>;&#125;</span></span><br><span class="line"><span class="css">            <span class="selector-class">.nav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123; <span class="attribute">display</span>: inline-block; &#125;</span></span><br><span class="line"><span class="css">            <span class="selector-class">.content</span> &#123; <span class="attribute">width</span>:  <span class="number">60%</span>; &#125;</span></span><br><span class="line"><span class="css">            <span class="selector-class">.comments</span> &#123; <span class="attribute">width</span>:  <span class="number">20%</span>;&#125;</span></span><br><span class="line"><span class="css">            <span class="selector-class">.content</span>,</span></span><br><span class="line"><span class="css">            <span class="selector-class">.comments</span> &#123;</span></span><br><span class="line">                padding: 1% 5%;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width:</span> <span class="number">1281px</span>) &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-class">.content</span> &#123; <span class="attribute">width</span>:  <span class="number">60%</span>;&#125;</span></span><br><span class="line"><span class="css">            <span class="selector-class">.comments</span> &#123; <span class="attribute">width</span>: <span class="number">20%</span>;&#125;</span></span><br><span class="line"><span class="css">            <span class="selector-class">.content</span>,</span></span><br><span class="line"><span class="css">            <span class="selector-class">.comments</span> &#123;</span></span><br><span class="line">                padding: 1% 1% 1% 0;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="css">            <span class="selector-class">.nav</span> &#123;</span></span><br><span class="line">                position: absolute;</span><br><span class="line">                top: 20px;</span><br><span class="line">                left: 0px;</span><br><span class="line">                width: 144px;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        nav ul &#123;</span><br><span class="line">            list-style: none;</span><br><span class="line">        &#125;</span><br><span class="line">        nav ul li &#123;</span><br><span class="line">            margin: 2px 10px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.content</span>, <span class="selector-class">.comments</span> &#123;</span></span><br><span class="line">            float: left;</span><br><span class="line">            text-align: justify;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.comment</span> &#123;</span></span><br><span class="line">            padding-left: 8%;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>item1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>item2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>item3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>item4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>item5<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">        Lorem ipsum dolor sit, amet consectetur adipisicing elit. In omnis quae totam delectus praesentium sequi, corporis accusantium distinctio suscipit ipsa dicta perspiciatis laboriosam aliquid, ab voluptatibus? Provident, autem! Magnam, odit.</span><br><span class="line">        Voluptatibus officia a qui voluptates nulla inventore laudantium quaerat quibusdam earum quo tempore tenetur aliquid, sapiente est quasi praesentium neque velit at blanditiis deleniti? Eligendi id quasi ipsum facere provident.</span><br><span class="line">        Deleniti, aperiam dolores. Eum iusto blanditiis saepe incidunt tempora molestias optio. Unde suscipit quae expedita autem velit in, sequi officiis dolorum veritatis quis! Culpa ex in explicabo, a voluptate iusto.</span><br><span class="line">        Reprehenderit deleniti aliquam doloribus totam, iusto harum ex saepe nostrum, architecto expedita esse non fugiat laudantium soluta quam deserunt, odio voluptatum! Amet earum enim dolorum distinctio ea provident facere vitae.</span><br><span class="line">        Similique laudantium consequuntur nulla nesciunt placeat ex incidunt odio soluta adipisci amet unde voluptatem mollitia illo necessitatibus et earum dicta dolorum repellat accusantium, quae pariatur. Aliquid doloremque eum voluptate fugit!</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aside</span> <span class="attr">class</span>=<span class="string">"comments"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"comment"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>评论<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            Lorem ipsum dolor sit amet consectetur adipisicing elit. Accusantium ipsum quaerat iure unde eum culpa reprehenderit et repellendus dolor. Vel dolorum corrupti sapiente voluptatum a, ipsa quisquam quidem mollitia animi.</span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"comment"</span>&gt;</span></span><br><span class="line">                评论的评论</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aside</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="3-3-基于媒介查询改变图片大小"><a href="#3-3-基于媒介查询改变图片大小" class="headerlink" title="3.3  基于媒介查询改变图片大小"></a>3.3  基于媒介查询改变图片大小</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        * &#123;</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">            box-sizing: border-box;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width:</span> <span class="number">960px</span>) &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-class">.wrap</span> &#123;</span></span><br><span class="line">                padding: 0 5%;</span><br><span class="line">                width: 90%;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="css">            <span class="selector-class">.wrap</span> <span class="selector-tag">img</span> &#123;</span></span><br><span class="line">                width: 90%;</span><br><span class="line">                height: auto;</span><br><span class="line">                padding: 5%;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="css">            <span class="selector-class">.wrap</span> <span class="selector-tag">p</span> &#123;</span></span><br><span class="line">                width: 90%;</span><br><span class="line">                padding: 5%;</span><br><span class="line">                text-align: justify;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width:</span> <span class="number">961px</span>) <span class="keyword">and</span> (<span class="attribute">max-width:</span> <span class="number">1280px</span>) &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-class">.wrap</span> &#123;</span></span><br><span class="line">                padding: 0 5%;</span><br><span class="line">                width: 90%;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="css">            <span class="selector-class">.wrap</span> <span class="selector-tag">img</span> &#123;</span></span><br><span class="line">                width: 50%;</span><br><span class="line">                height: auto;</span><br><span class="line">                max-width: 600px;</span><br><span class="line">                float: right;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="css">            <span class="selector-class">.wrap</span> <span class="selector-tag">p</span> &#123;</span></span><br><span class="line">                width: 50%;</span><br><span class="line">                text-align: justify;</span><br><span class="line">                float: left;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width:</span> <span class="number">1281px</span>) &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-class">.wrap</span> &#123;</span></span><br><span class="line">                padding: 0 5%;</span><br><span class="line">                width: 90%;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="css">            <span class="selector-class">.wrap</span> <span class="selector-tag">img</span> &#123;</span></span><br><span class="line">                width: 40%;</span><br><span class="line">                height: auto;</span><br><span class="line">                max-width: 500px;</span><br><span class="line">                float: left;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="css">            <span class="selector-class">.wrap</span> <span class="selector-tag">p</span> &#123;</span></span><br><span class="line">                width: 60%;</span><br><span class="line">                text-align: justify;</span><br><span class="line">                float: right;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrap"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./img/dragon.jpg"</span> <span class="attr">alt</span>=<span class="string">"dragon"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            Lorem, ipsum dolor sit amet consectetur adipisicing elit. Animi ipsum doloremque, laboriosam fugiat cum sunt quaerat fugit enim ipsa cumque exercitationem, similique rerum impedit perspiciatis dignissimos reiciendis officiis aliquid autem?</span><br><span class="line">            Numquam nulla iusto suscipit natus eligendi iure fugiat amet quasi sit. Aperiam tempore quos est et, quam, vero consequuntur eius consequatur, culpa unde ratione iste atque quisquam ex sit nulla?</span><br><span class="line">            Eos odit ducimus officiis iste architecto at corrupti pariatur facilis earum aperiam maiores in sequi perferendis, illo esse dolor quo hic doloremque! Magnam odio accusamus doloribus exercitationem repellendus enim corporis?</span><br><span class="line">            Labore quo necessitatibus qui placeat ad explicabo consectetur eos dolores. Voluptate, architecto libero quaerat laborum eum tempore! Adipisci, maxime explicabo corrupti molestias, harum, ea blanditiis asperiores sint eum accusamus recusandae!</span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>浏览器根据自身窗口大小应用对应的媒介查询中的相关设置，使元素能够呈现出不同的width和height属性。这样，在不同尺寸的设备窗口中都得到合适大小的图片。但是如果原始图片非常大，在服务器端改变图片尺寸会是一个好的备选方案。</p>
<h2 id="3-4-基于媒介查询隐藏元素"><a href="#3-4-基于媒介查询隐藏元素" class="headerlink" title="3.4 基于媒介查询隐藏元素"></a>3.4 基于媒介查询隐藏元素</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.foo</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#ccc</span>;</span></span><br><span class="line">            width: 300px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.bar</span> &#123;</span></span><br><span class="line">            background-color: blue;</span><br><span class="line">            width: 600px;</span><br><span class="line">            color: white;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="css">        <span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width:</span> <span class="number">960px</span>) &#123;</span></span><br><span class="line">            img &#123;</span><br><span class="line">                position: absolute;</span><br><span class="line">                left: 5000px;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="css">            <span class="selector-class">.bar</span> &#123;</span></span><br><span class="line">                display: none;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width:</span> <span class="number">961px</span>) &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-class">.foo</span> &#123;</span></span><br><span class="line">                float: left;</span><br><span class="line">                margin-left: -5000px;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>基于媒体查询隐藏元素<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./img//dragon.jpg"</span> <span class="attr">alt</span>=<span class="string">"dragon"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"foo"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>foo<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        Lorem ipsum dolor sit amet consectetur adipisicing elit. Laborum earum voluptatibus fuga ullam, assumenda architecto cumque obcaecati asperiores explicabo, tempore harum modi error in veritatis, iusto natus vitae dignissimos reprehenderit.</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"bar"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>bar<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        Lorem ipsum dolor sit amet, consectetur adipisicing elit. Possimus, deleniti quisquam? Debitis vel ab, aperiam, soluta facere aut cumque perferendis rerum fuga corporis officia corrupti molestias at nemo velit in.Perferendis autem fuga dolorum, quos iste sint omnis quo, laborum deserunt nobis iure. Laborum accusamus velit libero. Ipsa maxime dolore, alias, totam hic nihil earum id sequi illo placeat vitae.</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>无论是绝对定位还是浮动都没有高度属性，因此一旦应用于某个元素，均不会占用任何垂直的空间区域。利用这个有用的小窍门可以很好地在页面上移除相应元素。当然通过浮动元素来布局时也会导致一些小问题。这些问题可以为元素添加clear:both属性来解决。</p>
<h1 id="四-Bootstrap"><a href="#四-Bootstrap" class="headerlink" title="四. Bootstrap"></a>四. Bootstrap</h1><h2 id="4-1-什么是Bootstrap"><a href="#4-1-什么是Bootstrap" class="headerlink" title="4.1 什么是Bootstrap"></a>4.1 什么是Bootstrap</h2><p>Bootstrap 是最受欢迎的 HTML、CSS 和 JS(完全开源) 框架，用于开发响应式布局、移动设备优先的 WEB 项目</p>
<p>Bootstrap采用sass和less作为CSS预处理脚本开发，我们可以采用预编译的CSS文件快速开发，也可以从源码定制我们需要的样式。</p>
<p>我们通过使用Bootstrap框架可以通过一份代码，同时适配手机，平板，PC设备，这一切都是CSS媒体查询的功劳。</p>
<h2 id="4-2-Bootstrap3和Bootstrap4的区别"><a href="#4-2-Bootstrap3和Bootstrap4的区别" class="headerlink" title="4.2 Bootstrap3和Bootstrap4的区别"></a>4.2 Bootstrap3和Bootstrap4的区别</h2><table>
<thead>
<tr>
<th><strong>Bootstrap3</strong></th>
<th><strong>Bootstrap4</strong></th>
</tr>
</thead>
<tbody><tr>
<td>Less</td>
<td>Sass语言编写</td>
</tr>
<tr>
<td>4种栅格类</td>
<td>5种栅格类</td>
</tr>
<tr>
<td>使用px为单位</td>
<td>使用rem和em为单位（除部分margin和padding使用px）</td>
</tr>
<tr>
<td>使用push和pull向左右移动</td>
<td>偏移列通过offset-类设置</td>
</tr>
<tr>
<td>使用float的布局方式</td>
<td>选择弹性盒模型（flexbox）</td>
</tr>
</tbody></table>
<p>Bootstrap4的5种栅格：</p>
<ul>
<li>特小（col-）(&lt;576px)</li>
<li>小（col-sm-）(≥576px)</li>
<li>中（col-md-）(≥768px)</li>
<li>大（col-lg-） (≥992px)</li>
<li>特大（col-xl-）（≥1200px）</li>
</ul>
<p>Bootstrap4特点</p>
<ul>
<li>新增网格层适配了移动端；</li>
<li>全面引入ES6新特性（重写所有JavaScript插件）；</li>
<li>css文件减少了至少40%；</li>
<li>所有文档都用Markdown编辑器重写；</li>
<li>boostrap4使用小图标需要自行引入</li>
<li>放弃对IE8的支持</li>
</ul>
<h2 id="4-3-Bootstrap3的基本使用"><a href="#4-3-Bootstrap3的基本使用" class="headerlink" title="4.3 Bootstrap3的基本使用"></a>4.3 Bootstrap3的基本使用</h2><p>目前3.x最新版本为v3.3.7</p>
<p>Bootstrap为我们提供了免费的CDN服务</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 最新版本的 Bootstrap 核心 CSS 文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css"</span> <span class="attr">integrity</span>=<span class="string">"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u"</span> <span class="attr">crossorigin</span>=<span class="string">"anonymous"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 可选的 Bootstrap 主题文件（一般不用引入） --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap-theme.min.css"</span> <span class="attr">integrity</span>=<span class="string">"sha384-rHyoN1iRsVXV4nD0JutlnGaslCJuC7uwjduW9SVrLvRYooPp2bWYgmgJQIXwl/Sp"</span> <span class="attr">crossorigin</span>=<span class="string">"anonymous"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 最新的 Bootstrap 核心 JavaScript 文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/js/bootstrap.min.js"</span> <span class="attr">integrity</span>=<span class="string">"sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa"</span> <span class="attr">crossorigin</span>=<span class="string">"anonymous"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>我们也能通过bower,npm,composer等模块管理工具来进行安装</p>
<p>下面是npm安装的方式</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install bootstrap@3</span></span><br></pre></td></tr></table></figure>

<p><code>require(&#39;bootstrap&#39;)</code> 代码的作用是加载 Bootstrap 的所有 jQuery 插件。其中，<code>bootstrap</code> 模块自身并不导出任何内容。你可以通过加载安装包顶级目录下的 <code>/js/*.js</code> 文件的方式手动加载单个的 Bootstrap 插件。</p>
<p>Bootstrap 的 <code>package.json</code> 文件包含了一些额外的元数据：</p>
<ul>
<li><code>less</code> - Bootstrap 源码的入口 <a href="http://lesscss.org/" target="_blank" rel="noopener">Less</a> 文件的路径</li>
<li><code>style</code> - Bootstrap 的未压缩 CSS 文件的路径</li>
</ul>
<h4 id="4-3-1-全局样式"><a href="#4-3-1-全局样式" class="headerlink" title="4.3.1 全局样式"></a>4.3.1 全局样式</h4><p>Bootstrap使用了normalize.css来进行CSS样式重置</p>
<ol>
<li>布局容器<br>.container和.container-fluid，前者作用于固定宽度并支持响应式布局的容器，后者占据全部视口</li>
<li>栅格系统</li>
</ol>
<ul>
<li><p>必须过布局容器.container或者.container-fluid进行包含</p>
</li>
<li><p>针对不同尺寸设备的栅格参数</p>
</li>
</ul>
<table>
<thead>
<tr>
<th></th>
<th>手机(&lt;768px)</th>
<th>平板(768px&lt;= and &lt; 992px)</th>
<th>小型台式机(&gt;=992px)</th>
<th>大型台式机(&gt;=1200px)</th>
</tr>
</thead>
<tbody><tr>
<td>栅格排列方式</td>
<td>始终水平排列</td>
<td>开始是堆叠在一起的，当大于这阈值时将变为水平排列</td>
<td>开始是堆叠在一起的，当大于阈值时将变为水平排列</td>
<td>开始是堆叠在一起的，当大于这阈值时将变为水平排列</td>
</tr>
<tr>
<td>容器宽度</td>
<td>自动</td>
<td>750px</td>
<td>970px</td>
<td>1170px</td>
</tr>
<tr>
<td>类前缀</td>
<td>.col-xs-</td>
<td>.col-sm-</td>
<td>.col-md-</td>
<td>.col-lg-</td>
</tr>
<tr>
<td>列数</td>
<td>12</td>
<td>12</td>
<td>12</td>
<td>12</td>
</tr>
<tr>
<td>最大列宽</td>
<td>自动</td>
<td>约62px</td>
<td>约81px</td>
<td>约97px</td>
</tr>
<tr>
<td>槽宽（gutter）</td>
<td>30px(每列左右均有15px)</td>
<td>30px(每列左右均有15px)</td>
<td>30px(每列左右均有15px)</td>
<td>30px(每列左右均有15px)</td>
</tr>
<tr>
<td>可嵌套</td>
<td>是</td>
<td>是</td>
<td>是</td>
<td>是</td>
</tr>
<tr>
<td>列偏移</td>
<td>是</td>
<td>是</td>
<td>是</td>
<td>是</td>
</tr>
<tr>
<td>列排序</td>
<td>是</td>
<td>是</td>
<td>是</td>
<td>是</td>
</tr>
</tbody></table>
<ul>
<li>我们通过为元素添加不同的类，可以针对PC，平板和手机实现不同的布局，例如:</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-12 col-sm-6 col-md-8"</span>&gt;</span>.col-xs-12 .col-sm-6 .col-md-8<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-6 col-md-4"</span>&gt;</span>.col-xs-6 .col-md-4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-6 col-sm-4"</span>&gt;</span>.col-xs-6 .col-sm-4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-6 col-sm-4"</span>&gt;</span>.col-xs-6 .col-sm-4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- Optional: clear the XS cols if their content doesn't match in height --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"clearfix visible-xs-block"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-6 col-sm-4"</span>&gt;</span>.col-xs-6 .col-sm-4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>我们也可使用col-md-offset-3系列类名实现列的偏移，如</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-4"</span>&gt;</span>.col-md-4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-4 col-md-offset-4"</span>&gt;</span>.col-md-4 .col-md-offset-4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-3 col-md-offset-3"</span>&gt;</span>.col-md-3 .col-md-offset-3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-3 col-md-offset-3"</span>&gt;</span>.col-md-3 .col-md-offset-3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-6 col-md-offset-3"</span>&gt;</span>.col-md-6 .col-md-offset-3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><p>栅格系统的列可以支持嵌套，即在column中添加div.row&gt;.col-md-*</p>
</li>
<li><p>列可以支持排序, 我们通过使用.col-md-push-<em>和.col-md-pull-</em>类来改变列的顺序</p>
</li>
<li><p>如果我们使用less方式来引入bootstrap的话，我们可以使用less变量和mixin来生成布局</p>
<p>变量</p>
<p>通过变量来定义列数、槽（gutter）宽、媒体查询阈值（用于确定合适让列浮动）。我们使用这些变量生成预定义的栅格类，如上所示，还有如下所示的定制 mixin。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@grid-columns:              12;</span><br><span class="line">@grid-gutter-width:         30px;</span><br><span class="line">@grid-float-breakpoint:     768px;</span><br></pre></td></tr></table></figure>

<p>mixin</p>
<p>mixin 用来和栅格变量一同使用，为每个列（column）生成语义化的 CSS 代码。</p>
<figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Creates a wrapper for a series of columns</span></span><br><span class="line"><span class="selector-class">.make-row</span>(<span class="variable">@gutter</span>: <span class="variable">@grid-gutter-width</span>) &#123;</span><br><span class="line">  <span class="comment">// Then clear the floated columns</span></span><br><span class="line">  <span class="selector-class">.clearfix</span>();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">@media</span> (<span class="attribute">min-width</span>: <span class="variable">@screen-sm-min</span>) &#123;</span><br><span class="line">    <span class="attribute">margin-left</span>:  (<span class="variable">@gutter</span> / -<span class="number">2</span>);</span><br><span class="line">    <span class="attribute">margin-right</span>: (<span class="variable">@gutter</span> / -<span class="number">2</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Negative margin nested rows out to align the content of columns</span></span><br><span class="line">  <span class="selector-class">.row</span> &#123;</span><br><span class="line">    <span class="attribute">margin-left</span>:  (<span class="variable">@gutter</span> / -<span class="number">2</span>);</span><br><span class="line">    <span class="attribute">margin-right</span>: (<span class="variable">@gutter</span> / -<span class="number">2</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Generate the extra small columns</span></span><br><span class="line"><span class="selector-class">.make-xs-column</span>(<span class="variable">@columns</span>; <span class="variable">@gutter</span>: <span class="variable">@grid-gutter-width</span>) &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="comment">// Prevent columns from collapsing when empty</span></span><br><span class="line">  <span class="attribute">min-height</span>: <span class="number">1px</span>;</span><br><span class="line">  <span class="comment">// Inner gutter via padding</span></span><br><span class="line">  <span class="attribute">padding-left</span>:  (<span class="variable">@gutter</span> / <span class="number">2</span>);</span><br><span class="line">  <span class="attribute">padding-right</span>: (<span class="variable">@gutter</span> / <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Calculate width based on number of columns available</span></span><br><span class="line">  <span class="keyword">@media</span> (<span class="attribute">min-width</span>: <span class="variable">@grid-float-breakpoint</span>) &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: percentage((<span class="variable">@columns</span> / <span class="variable">@grid-columns</span>));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Generate the small columns</span></span><br><span class="line"><span class="selector-class">.make-sm-column</span>(<span class="variable">@columns</span>; <span class="variable">@gutter</span>: <span class="variable">@grid-gutter-width</span>) &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="comment">// Prevent columns from collapsing when empty</span></span><br><span class="line">  <span class="attribute">min-height</span>: <span class="number">1px</span>;</span><br><span class="line">  <span class="comment">// Inner gutter via padding</span></span><br><span class="line">  <span class="attribute">padding-left</span>:  (<span class="variable">@gutter</span> / <span class="number">2</span>);</span><br><span class="line">  <span class="attribute">padding-right</span>: (<span class="variable">@gutter</span> / <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Calculate width based on number of columns available</span></span><br><span class="line">  <span class="keyword">@media</span> (<span class="attribute">min-width</span>: <span class="variable">@screen-sm-min</span>) &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: percentage((<span class="variable">@columns</span> / <span class="variable">@grid-columns</span>));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Generate the small column offsets</span></span><br><span class="line"><span class="selector-class">.make-sm-column-offset</span>(<span class="variable">@columns</span>) &#123;</span><br><span class="line">  <span class="keyword">@media</span> (<span class="attribute">min-width</span>: <span class="variable">@screen-sm-min</span>) &#123;</span><br><span class="line">    <span class="attribute">margin-left</span>: percentage((<span class="variable">@columns</span> / <span class="variable">@grid-columns</span>));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.make-sm-column-push</span>(<span class="variable">@columns</span>) &#123;</span><br><span class="line">  <span class="keyword">@media</span> (<span class="attribute">min-width</span>: <span class="variable">@screen-sm-min</span>) &#123;</span><br><span class="line">    <span class="attribute">left</span>: percentage((<span class="variable">@columns</span> / <span class="variable">@grid-columns</span>));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.make-sm-column-pull</span>(<span class="variable">@columns</span>) &#123;</span><br><span class="line">  <span class="keyword">@media</span> (<span class="attribute">min-width</span>: <span class="variable">@screen-sm-min</span>) &#123;</span><br><span class="line">    <span class="attribute">right</span>: percentage((<span class="variable">@columns</span> / <span class="variable">@grid-columns</span>));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Generate the medium columns</span></span><br><span class="line"><span class="selector-class">.make-md-column</span>(<span class="variable">@columns</span>; <span class="variable">@gutter</span>: <span class="variable">@grid-gutter-width</span>) &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="comment">// Prevent columns from collapsing when empty</span></span><br><span class="line">  <span class="attribute">min-height</span>: <span class="number">1px</span>;</span><br><span class="line">  <span class="comment">// Inner gutter via padding</span></span><br><span class="line">  <span class="attribute">padding-left</span>:  (<span class="variable">@gutter</span> / <span class="number">2</span>);</span><br><span class="line">  <span class="attribute">padding-right</span>: (<span class="variable">@gutter</span> / <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Calculate width based on number of columns available</span></span><br><span class="line">  <span class="keyword">@media</span> (<span class="attribute">min-width</span>: <span class="variable">@screen-md-min</span>) &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: percentage((<span class="variable">@columns</span> / <span class="variable">@grid-columns</span>));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Generate the medium column offsets</span></span><br><span class="line"><span class="selector-class">.make-md-column-offset</span>(<span class="variable">@columns</span>) &#123;</span><br><span class="line">  <span class="keyword">@media</span> (<span class="attribute">min-width</span>: <span class="variable">@screen-md-min</span>) &#123;</span><br><span class="line">    <span class="attribute">margin-left</span>: percentage((<span class="variable">@columns</span> / <span class="variable">@grid-columns</span>));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.make-md-column-push</span>(<span class="variable">@columns</span>) &#123;</span><br><span class="line">  <span class="keyword">@media</span> (<span class="attribute">min-width</span>: <span class="variable">@screen-md-min</span>) &#123;</span><br><span class="line">    <span class="attribute">left</span>: percentage((<span class="variable">@columns</span> / <span class="variable">@grid-columns</span>));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.make-md-column-pull</span>(<span class="variable">@columns</span>) &#123;</span><br><span class="line">  <span class="keyword">@media</span> (<span class="attribute">min-width</span>: <span class="variable">@screen-md-min</span>) &#123;</span><br><span class="line">    <span class="attribute">right</span>: percentage((<span class="variable">@columns</span> / <span class="variable">@grid-columns</span>));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Generate the large columns</span></span><br><span class="line"><span class="selector-class">.make-lg-column</span>(<span class="variable">@columns</span>; <span class="variable">@gutter</span>: <span class="variable">@grid-gutter-width</span>) &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="comment">// Prevent columns from collapsing when empty</span></span><br><span class="line">  <span class="attribute">min-height</span>: <span class="number">1px</span>;</span><br><span class="line">  <span class="comment">// Inner gutter via padding</span></span><br><span class="line">  <span class="attribute">padding-left</span>:  (<span class="variable">@gutter</span> / <span class="number">2</span>);</span><br><span class="line">  <span class="attribute">padding-right</span>: (<span class="variable">@gutter</span> / <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Calculate width based on number of columns available</span></span><br><span class="line">  <span class="keyword">@media</span> (<span class="attribute">min-width</span>: <span class="variable">@screen-lg-min</span>) &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: percentage((<span class="variable">@columns</span> / <span class="variable">@grid-columns</span>));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Generate the large column offsets</span></span><br><span class="line"><span class="selector-class">.make-lg-column-offset</span>(<span class="variable">@columns</span>) &#123;</span><br><span class="line">  <span class="keyword">@media</span> (<span class="attribute">min-width</span>: <span class="variable">@screen-lg-min</span>) &#123;</span><br><span class="line">    <span class="attribute">margin-left</span>: percentage((<span class="variable">@columns</span> / <span class="variable">@grid-columns</span>));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.make-lg-column-push</span>(<span class="variable">@columns</span>) &#123;</span><br><span class="line">  <span class="keyword">@media</span> (<span class="attribute">min-width</span>: <span class="variable">@screen-lg-min</span>) &#123;</span><br><span class="line">    <span class="attribute">left</span>: percentage((<span class="variable">@columns</span> / <span class="variable">@grid-columns</span>));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.make-lg-column-pull</span>(<span class="variable">@columns</span>) &#123;</span><br><span class="line">  <span class="keyword">@media</span> (<span class="attribute">min-width</span>: <span class="variable">@screen-lg-min</span>) &#123;</span><br><span class="line">    <span class="attribute">right</span>: percentage((<span class="variable">@columns</span> / <span class="variable">@grid-columns</span>));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>实例展示</p>
<p>你可以重新修改这些变量的值，或者用默认值调用这些 mixin。下面就是一个利用默认设置生成两列布局（列之间有间隔）的案例。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">.wrapper &#123;</span><br><span class="line">  .make-row();</span><br><span class="line">&#125;</span><br><span class="line">.content-main &#123;</span><br><span class="line">  .make-lg-column(8);</span><br><span class="line">&#125;</span><br><span class="line">.content-secondary &#123;</span><br><span class="line">  .make-lg-column(3);</span><br><span class="line">  .make-lg-column-offset(1);</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content-main"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content-secondary"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<ol start="3">
<li><p>排版</p>
<ul>
<li><p>标题<br>h1-h6元素均可使用（添加了一些样式）, 还可以使用.h1-.h6为内联元素添加标题的样式<br>在标题内还可以使用small标签或者.small来标记副标题</p>
</li>
<li><p>页面主体<br>Bootstrap 将全局 <code>font-size</code> 设置为 <strong>14px</strong>，<code>line-height</code> 设置为 <strong>1.428</strong>。这些属性直接赋予 <code>元素和所有段落元素。另外，</code> （段落）元素还被设置了等于 1/2 行高（即 10px）的底部外边距（margin）。</p>
</li>
<li><p>中心内容<br>.lead类可以让段落突出显示</p>
</li>
<li><p>使用less的话，可以通过修改@font-size-base和@line-height-base来修改bootstrap的默认样式</p>
</li>
<li><p>内联文本元素mark标签定义标记文本, del标签定义删除文本，s标签定义无用文本,ins定义插入文本,u定义下划线文本,small定义小号文本,strong 定义着重文本,em定义斜体文本</p>
</li>
<li><p>对齐: 使用.text-left, .text-center, .text-right, .text-justify,text-nowrap</p>
</li>
<li><p>改变大小写: 使用.text-lowercase,   .text-uppercase, .text-capitalize</p>
</li>
<li><p>缩略语:<br>① 基本缩略语</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">abbr</span> <span class="attr">title</span>=<span class="string">"attribute"</span>&gt;</span>attr<span class="tag">&lt;/<span class="name">abbr</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>② 首字母缩略语为缩略语添加 <code>.initialism</code> 类，可以让 font-size 变得稍微小些。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">abbr</span> <span class="attr">title</span>=<span class="string">"HyperText Markup Language"</span> <span class="attr">class</span>=<span class="string">"initialism"</span>&gt;</span>HTML<span class="tag">&lt;/<span class="name">abbr</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ol>
<ul>
<li><p>地址</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">address</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">strong</span>&gt;</span>Twitter, Inc.<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  1355 Market Street, Suite 900<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  San Francisco, CA 94103<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">abbr</span> <span class="attr">title</span>=<span class="string">"Phone"</span>&gt;</span>P:<span class="tag">&lt;/<span class="name">abbr</span>&gt;</span> (123) 456-7890</span><br><span class="line"><span class="tag">&lt;/<span class="name">address</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">address</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">strong</span>&gt;</span>Full Name<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mailto:#"</span>&gt;</span>first.last@example.com<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">address</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>引用对于标准样式的 ``，可以通过几个简单的变体就能改变风格和内容。</p>
<p>命名来源</p>
<p>添加 <code>用于标明引用来源。来源的名称可以包裹进</code>标签中。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">blockquote</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">footer</span>&gt;</span>Someone famous in <span class="tag">&lt;<span class="name">cite</span> <span class="attr">title</span>=<span class="string">"Source Title"</span>&gt;</span>Source Title<span class="tag">&lt;/<span class="name">cite</span>&gt;</span><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>另一种展示风格</p>
<p>通过赋予 <code>.blockquote-reverse</code> 类可以让引用呈现内容右对齐的效果。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">blockquote</span> <span class="attr">class</span>=<span class="string">"blockquote-reverse"</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>列表<br>①我们可以使用.list-unstyled类来实现无样式列表， .list-inline来实现内联列表<br>② 水平排列的描述列表</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span> <span class="attr">class</span>=<span class="string">"dl-horizontal"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>...<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>...<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>代码<br>通过 code标签包裹内联样式的代码片段。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">For example, <span class="tag">&lt;<span class="name">code</span>&gt;</span><span class="symbol">&amp;lt;</span>section<span class="symbol">&amp;gt;</span><span class="tag">&lt;/<span class="name">code</span>&gt;</span> should be wrapped as inline.</span><br></pre></td></tr></table></figure>
</li>
<li><p>用户输入<br>通过 kbd 标签标记用户通过键盘输入的内容。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">To switch directories, type <span class="tag">&lt;<span class="name">kbd</span>&gt;</span>cd<span class="tag">&lt;/<span class="name">kbd</span>&gt;</span> followed by the name of the directory.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">To edit settings, press <span class="tag">&lt;<span class="name">kbd</span>&gt;</span><span class="tag">&lt;<span class="name">kbd</span>&gt;</span>ctrl<span class="tag">&lt;/<span class="name">kbd</span>&gt;</span> + <span class="tag">&lt;<span class="name">kbd</span>&gt;</span>,<span class="tag">&lt;/<span class="name">kbd</span>&gt;</span><span class="tag">&lt;/<span class="name">kbd</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>代码块</p>
<pre>&lt;p&gt;Sample text here...&lt;/p&gt;</pre>

<p>还可以使用 <code>.pre-scrollable</code> 类，其作用是设置 max-height 为 350px ，并在垂直方向展示滚动条。</p>
</li>
<li><p>变量</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">var</span>&gt;</span>y<span class="tag">&lt;/<span class="name">var</span>&gt;</span> = <span class="tag">&lt;<span class="name">var</span>&gt;</span>m<span class="tag">&lt;/<span class="name">var</span>&gt;</span><span class="tag">&lt;<span class="name">var</span>&gt;</span>x<span class="tag">&lt;/<span class="name">var</span>&gt;</span> + <span class="tag">&lt;<span class="name">var</span>&gt;</span>b<span class="tag">&lt;/<span class="name">var</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>程序输出</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">samp</span>&gt;</span>This text is meant to be treated as sample output from a computer program.<span class="tag">&lt;/<span class="name">samp</span>&gt;</span></span><br></pre></td></tr></table></figure>

</li>
</ul>
<h4 id="4-3-2-表格"><a href="#4-3-2-表格" class="headerlink" title="4.3.2 表格"></a>4.3.2 表格</h4><p>为table元素添加.table(基本表格样式), .table-striped(条纹表格), .table-bordered(带边框表格), .table-hover(鼠标地悬停效果), .table-condensed(紧缩表格)</p>
<p><strong>状态类</strong></p>
<table>
<thead>
<tr>
<th align="left">Class</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>.active</code></td>
<td align="left">鼠标悬停在行或单元格上时所设置的颜色</td>
</tr>
<tr>
<td align="left"><code>.success</code></td>
<td align="left">标识成功或积极的动作</td>
</tr>
<tr>
<td align="left"><code>.info</code></td>
<td align="left">标识普通的提示信息或动作</td>
</tr>
<tr>
<td align="left"><code>.warning</code></td>
<td align="left">标识警告或需要用户注意</td>
</tr>
<tr>
<td align="left"><code>.danger</code></td>
<td align="left">标识危险或潜在的带来负面影响的动作</td>
</tr>
</tbody></table>
<p><strong>响应式表格</strong></p>
<p>将任何 <code>.table</code> 元素包裹在 <code>.table-responsive</code> 元素内，即可创建响应式表格，其会在小屏幕设备上（小于768px）水平滚动。当屏幕大于 768px 宽度时，水平滚动条消失。</p>
<p>垂直方向的内容截断</p>
<p>响应式表格使用了 <code>overflow-y: hidden</code> 属性，这样就能将超出表格底部和顶部的内容截断。特别是，也可以截断下拉菜单和其他第三方组件。</p>
<p><strong>Firefox 和 <code>fieldset</code> 元素</strong></p>
<p>Firefox 浏览器对 <code>fieldset</code> 元素设置了一些影响 <code>width</code> 属性的样式，导致响应式表格出现问题。可以使用下面提供的针对 Firefox 的 hack 代码解决，但是以下代码并未集成在 Bootstrap 中：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@-moz-document url-prefix() &#123;</span><br><span class="line">  fieldset &#123; display: table-cell; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="4-3-3-表单"><a href="#4-3-3-表单" class="headerlink" title="4.3.3 表单"></a>4.3.3 表单</h4><p>单独的表单控件会被自动赋予一些全局样式。所有设置了 <code>.form-control</code> 类的 input和 textarea和select元素都将被默认设置宽度属性为 <code>width: 100%;</code>。 将 <code>label</code> 元素和前面提到的控件包裹在 <code>.form-group</code> 中可以获得最好的排列。</p>
<p>为 form元素添加 <code>.form-inline</code> 类可使其内容左对齐并且表现为 <code>inline-block</code> 级别的控件。<strong>只适用于视口（viewport）至少在 768px 宽度时（视口宽度再小的话就会使表单折叠）。</strong></p>
<p>一定要添加 <code>label</code> 标签</p>
<p>如果你没有为每个输入控件设置 <code>label</code> 标签，屏幕阅读器将无法正确识别。对于这些内联表单，你可以通过为 <code>label</code> 设置 <code>.sr-only</code> 类将其隐藏。还有一些辅助技术提供label标签的替代方案，比如 <code>aria-label</code>、<code>aria-labelledby</code> 或 <code>title</code> 属性。如果这些都不存在，屏幕阅读器可能会采取使用 <code>placeholder</code> 属性，如果存在的话，使用placeholder来替代其他的标记，但要注意，这种方法是不妥当的。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">"form-inline"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"email"</span> <span class="attr">class</span>=<span class="string">"sr-only"</span>&gt;</span>Email<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"email"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">id</span>=<span class="string">"email"</span> <span class="attr">placeholder</span>=<span class="string">"Email"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"amount"</span> <span class="attr">class</span>=<span class="string">"sr-only"</span>&gt;</span>Amount<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group-addon"</span>&gt;</span>$<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"amount"</span> <span class="attr">id</span>=<span class="string">"amount"</span> <span class="attr">placeholder</span>=<span class="string">"Amount"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group-addon"</span>&gt;</span>.00<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>Submit<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>水平排列的表单</strong></p>
<p>通过为表单添加 <code>.form-horizontal</code> 类，并联合使用 Bootstrap 预置的栅格类，可以将 <code>label</code> 标签和控件组水平并排布局。这样做将改变 <code>.form-group</code> 的行为，使其表现为栅格系统中的行（row），因此就无需再额外添加 <code>.row</code> 了。</p>
<p><strong>支持的表单控件</strong></p>
<p>包括大部分表单控件、文本输入域控件，还支持所有 HTML5 类型的输入控件： <code>text</code>、<code>password</code>、<code>datetime</code>、<code>datetime-local</code>、<code>date</code>、<code>month</code>、<code>time</code>、<code>week</code>、<code>number</code>、<code>email</code>、<code>url</code>、<code>search</code>、<code>tel</code> 和 <code>color</code>。</p>
<p><strong>单选和多选框</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"checkbox"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">    Option one is this and that<span class="symbol">&amp;mdash;</span>be sure to include why it's great</span><br><span class="line">  <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"checkbox disabled"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">""</span> <span class="attr">disabled</span>&gt;</span></span><br><span class="line">    Option two is disabled</span><br><span class="line">  <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"radio"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"optionsRadios"</span> <span class="attr">id</span>=<span class="string">"optionsRadios1"</span> <span class="attr">value</span>=<span class="string">"option1"</span> <span class="attr">checked</span>&gt;</span></span><br><span class="line">    Option one is this and that<span class="symbol">&amp;mdash;</span>be sure to include why it's great</span><br><span class="line">  <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"radio"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"optionsRadios"</span> <span class="attr">id</span>=<span class="string">"optionsRadios2"</span> <span class="attr">value</span>=<span class="string">"option2"</span>&gt;</span></span><br><span class="line">    Option two can be something else and selecting it will deselect option one</span><br><span class="line">  <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"radio disabled"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"optionsRadios"</span> <span class="attr">id</span>=<span class="string">"optionsRadios3"</span> <span class="attr">value</span>=<span class="string">"option3"</span> <span class="attr">disabled</span>&gt;</span></span><br><span class="line">    Option three is disabled</span><br><span class="line">  <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>内联的单选和多选框</strong></p>
<p>通过将 <code>.checkbox-inline</code> 或 <code>.radio-inline</code> 类应用到一系列的多选框（checkbox）或单选框（radio）控件上，可以使这些控件排列在一行。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"checkbox-inline"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">id</span>=<span class="string">"inlineCheckbox1"</span> <span class="attr">value</span>=<span class="string">"option1"</span>&gt;</span> 1</span><br><span class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"checkbox-inline"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">id</span>=<span class="string">"inlineCheckbox2"</span> <span class="attr">value</span>=<span class="string">"option2"</span>&gt;</span> 2</span><br><span class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"checkbox-inline"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">id</span>=<span class="string">"inlineCheckbox3"</span> <span class="attr">value</span>=<span class="string">"option3"</span>&gt;</span> 3</span><br><span class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"radio-inline"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"inlineRadioOptions"</span> <span class="attr">id</span>=<span class="string">"inlineRadio1"</span> <span class="attr">value</span>=<span class="string">"option1"</span>&gt;</span> 1</span><br><span class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"radio-inline"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"inlineRadioOptions"</span> <span class="attr">id</span>=<span class="string">"inlineRadio2"</span> <span class="attr">value</span>=<span class="string">"option2"</span>&gt;</span> 2</span><br><span class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"radio-inline"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"inlineRadioOptions"</span> <span class="attr">id</span>=<span class="string">"inlineRadio3"</span> <span class="attr">value</span>=<span class="string">"option3"</span>&gt;</span> 3</span><br><span class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>静态控件</strong></p>
<p>如果需要在表单中将一行纯文本和 <code>label</code> 元素放置于同一行，为 `` 元素添加 <code>.form-control-static</code> 类即可。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">"form-horizontal"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>Email<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"form-control-static"</span>&gt;</span>email@example.com<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"inputPassword"</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>Password<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"inputPassword"</span> <span class="attr">placeholder</span>=<span class="string">"Password"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>禁用状态</strong></p>
<p>为输入框设置 <code>disabled</code> 属性可以禁止其与用户有任何交互（焦点、输入等）。被禁用的输入框颜色更浅，并且还添加了 <code>not-allowed</code> 鼠标状态。</p>
<p><strong>只读状态</strong></p>
<p>为输入框设置 <code>readonly</code> 属性可以禁止用户修改输入框中的内容。处于只读状态的输入框颜色更浅（就像被禁用的输入框一样），但是仍然保留标准的鼠标状态。</p>
<p><strong>帮助文本</strong></p>
<p>使用aria-describedby属性来为表单元素添加供屏幕阅读器等辅助设备使用的帮助文本以供残障人士更好的阅读网页</p>
<p><strong>校验状态</strong></p>
<p>Bootstrap 对表单控件的校验状态，如 error、warning 和 success 状态，都定义了样式。使用时，添加 <code>.has-warning</code>、<code>.has-error</code> 或 <code>.has-success</code> 类到这些控件的父元素即可。任何包含在此元素之内的 <code>.control-label</code>、<code>.form-control</code> 和 <code>.help-block</code> 元素都将接受这些校验状态的样式。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group has-success"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"control-label"</span> <span class="attr">for</span>=<span class="string">"inputSuccess1"</span>&gt;</span>Input with success<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"inputSuccess1"</span> <span class="attr">aria-describedby</span>=<span class="string">"helpBlock2"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"helpBlock2"</span> <span class="attr">class</span>=<span class="string">"help-block"</span>&gt;</span>A block of help text that breaks onto a new line and may extend beyond one line.<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group has-warning"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"control-label"</span> <span class="attr">for</span>=<span class="string">"inputWarning1"</span>&gt;</span>Input with warning<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"inputWarning1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group has-error"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"control-label"</span> <span class="attr">for</span>=<span class="string">"inputError1"</span>&gt;</span>Input with error<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"inputError1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"has-success"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"checkbox"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">id</span>=<span class="string">"checkboxSuccess"</span> <span class="attr">value</span>=<span class="string">"option1"</span>&gt;</span></span><br><span class="line">      Checkbox with success</span><br><span class="line">    <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"has-warning"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"checkbox"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">id</span>=<span class="string">"checkboxWarning"</span> <span class="attr">value</span>=<span class="string">"option1"</span>&gt;</span></span><br><span class="line">      Checkbox with warning</span><br><span class="line">    <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"has-error"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"checkbox"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">id</span>=<span class="string">"checkboxError"</span> <span class="attr">value</span>=<span class="string">"option1"</span>&gt;</span></span><br><span class="line">      Checkbox with error</span><br><span class="line">    <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>控件尺寸</strong></p>
<p>通过 <code>.input-lg</code> 类似的类可以为控件设置高度，通过 <code>.col-lg-*</code> 类似的类可以为控件设置宽度。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control input-lg"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">".input-lg"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"Default input"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control input-sm"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">".input-sm"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">class</span>=<span class="string">"form-control input-lg"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">class</span>=<span class="string">"form-control"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">class</span>=<span class="string">"form-control input-sm"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>水平排列的表单组的尺寸</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">"form-horizontal"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group form-group-lg"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span> <span class="attr">for</span>=<span class="string">"formGroupInputLarge"</span>&gt;</span>Large label<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"formGroupInputLarge"</span> <span class="attr">placeholder</span>=<span class="string">"Large input"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group form-group-sm"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span> <span class="attr">for</span>=<span class="string">"formGroupInputSmall"</span>&gt;</span>Small label<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"formGroupInputSmall"</span> <span class="attr">placeholder</span>=<span class="string">"Small input"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>调整列的尺寸</strong></p>
<p>用栅格系统中的列（column）包裹输入框或其任何父元素，都可很容易的为其设置宽度。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-2"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">placeholder</span>=<span class="string">".col-xs-2"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-3"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">placeholder</span>=<span class="string">".col-xs-3"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-4"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">placeholder</span>=<span class="string">".col-xs-4"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="4-3-4-按钮"><a href="#4-3-4-按钮" class="headerlink" title="4.3.4 按钮"></a>4.3.4 按钮</h4><p>为a,button或者input 元素添加按钮类（button class）即可使用 Bootstrap 提供的样式。</p>
<p><strong>针对组件的注意事项</strong></p>
<p>虽然按钮类可以应用到 <code>和</code> 元素上，但是，导航和导航条组件只支持button元素。</p>
<p><strong>链接被作为按钮使用时的注意事项</strong></p>
<p>如果 a元素被作为按钮使用 – 并用于在当前页面触发某些功能 – 而不是用于链接其他页面或链接当前页面中的其他部分，那么，务必为其设置 <code>role=&quot;button&quot;</code> 属性。</p>
<p><strong>跨浏览器展现</strong></p>
<p>我们总结的最佳实践是：<strong>强烈建议尽可能使用button元素</strong>来获得在各个浏览器上获得相匹配的绘制效果。</p>
<p>另外，我们还发现了 <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=697451" target="_blank" rel="noopener">Firefox &lt;30 版本的浏览器上出现的一个 bug</a>，其表现是：阻止我们为基于 `` 元素所创建的按钮设置 <code>line-height</code> 属性，这就导致在 Firefox 浏览器上不能完全和其他按钮保持一致的高度。</p>
<p><strong>预定义样式</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Standard button --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>（默认样式）Default<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Provides extra visual weight and identifies the primary action in a set of buttons --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span>（首选项）Primary<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Indicates a successful or positive action --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-success"</span>&gt;</span>（成功）Success<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Contextual button for informational alert messages --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-info"</span>&gt;</span>（一般信息）Info<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Indicates caution should be taken with this action --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-warning"</span>&gt;</span>（警告）Warning<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Indicates a dangerous or potentially negative action --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-danger"</span>&gt;</span>（危险）Danger<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Deemphasize a button by making it look like a link while maintaining button behavior --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-link"</span>&gt;</span>（链接）Link<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>尺寸</strong></p>
<p>需要让按钮具有不同尺寸吗？使用 <code>.btn-lg</code>、<code>.btn-sm</code> 或 <code>.btn-xs</code> 就可以获得不同尺寸的按钮。</p>
<p>（大按钮）Large button</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary btn-lg"</span>&gt;</span>（大按钮）Large button<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-default btn-lg"</span>&gt;</span>（大按钮）Large button<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span>（默认尺寸）Default button<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>（默认尺寸）Default button<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary btn-sm"</span>&gt;</span>（小按钮）Small button<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-default btn-sm"</span>&gt;</span>（小按钮）Small button<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary btn-xs"</span>&gt;</span>（超小尺寸）Extra small button<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-default btn-xs"</span>&gt;</span>（超小尺寸）Extra small button<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>通过给按钮添加 <code>.btn-block</code> 类可以将其拉伸至父元素100%的宽度，而且按钮也变为了块级（block）元素。</p>
<p><strong>激活状态</strong></p>
<p>使用button</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary btn-lg active"</span>&gt;</span>Primary button<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-default btn-lg active"</span>&gt;</span>Button<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>使用a标签</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary btn-lg active"</span> <span class="attr">role</span>=<span class="string">"button"</span>&gt;</span>Primary link<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"btn btn-default btn-lg active"</span> <span class="attr">role</span>=<span class="string">"button"</span>&gt;</span>Link<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="4-3-5-图片"><a href="#4-3-5-图片" class="headerlink" title="4.3.5 图片"></a>4.3.5 图片</h4><p>在 Bootstrap 版本 3 中，通过为图片添加 <code>.img-responsive</code> 类可以让图片支持响应式布局。其实质是为图片设置了 <code>max-width: 100%;</code>、 <code>height: auto;</code> 和 <code>display: block;</code> 属性，从而让图片在其父元素中更好的缩放。</p>
<p>如果需要让使用了 <code>.img-responsive</code> 类的图片水平居中，请使用 <code>.center-block</code> 类，不要用 <code>.text-center</code>。</p>
<p><strong>SVG 图像和 IE 8-10</strong></p>
<p>在 Internet Explorer 8-10 中，设置为 <code>.img-responsive</code> 的 SVG 图像显示出的尺寸不匀称。为了解决这个问题，在出问题的地方添加 <code>width: 100% \9;</code> 即可。Bootstrap 并没有自动为所有图像元素设置这一属性，因为这会导致其他图像格式出现错乱。</p>
<p><strong>图片的形状</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"..."</span> <span class="attr">alt</span>=<span class="string">"..."</span> <span class="attr">class</span>=<span class="string">"img-rounded"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"..."</span> <span class="attr">alt</span>=<span class="string">"..."</span> <span class="attr">class</span>=<span class="string">"img-circle"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"..."</span> <span class="attr">alt</span>=<span class="string">"..."</span> <span class="attr">class</span>=<span class="string">"img-thumbnail"</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="4-3-6-辅助类"><a href="#4-3-6-辅助类" class="headerlink" title="4.3.6 辅助类"></a>4.3.6 辅助类</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-muted"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-primary"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-success"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-info"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-warning"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-danger"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="4-3-7-情景背景色"><a href="#4-3-7-情景背景色" class="headerlink" title="4.3.7 情景背景色"></a>4.3.7 情景背景色</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"bg-primary"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"bg-success"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"bg-info"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"bg-warning"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"bg-danger"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="4-3-8-快速浮动"><a href="#4-3-8-快速浮动" class="headerlink" title="4.3.8 快速浮动"></a>4.3.8 快速浮动</h4><p>我们可以使用.pull-left和.pull-right实现快速浮动</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&lt;div class="pull-left"&gt;...&lt;/div&gt;</span><br><span class="line">&lt;div class="pull-right"&gt;...&lt;/div&gt;</span><br><span class="line">// Classes</span><br><span class="line"><span class="selector-class">.pull-left</span> &#123;</span><br><span class="line">  <span class="attribute">float</span>: left <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.pull-right</span> &#123;</span><br><span class="line">  <span class="attribute">float</span>: right <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 如果我们使用less也可以以mixins方式来使用</span><br><span class="line"><span class="selector-class">.element</span> &#123;</span><br><span class="line">  .pull-left();</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.another-element</span> &#123;</span><br><span class="line">  .pull-right();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>.pull-left和.pull-right不能使用于navbar中，navbar中可以使用.navbar-left或者.navbar-right</p>
<h4 id="4-3-9-让内容块居中"><a href="#4-3-9-让内容块居中" class="headerlink" title="4.3.9 让内容块居中"></a>4.3.9 让内容块居中</h4><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&lt;div class="center-block"&gt;...&lt;/div&gt;</span><br><span class="line">// Class</span><br><span class="line"><span class="selector-class">.center-block</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">margin-left</span>: auto;</span><br><span class="line">  <span class="attribute">margin-right</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Usage as a mixin</span><br><span class="line"><span class="selector-class">.element</span> &#123;</span><br><span class="line">  .center-block();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="4-3-10-清除浮动"><a href="#4-3-10-清除浮动" class="headerlink" title="4.3.10 清除浮动"></a>4.3.10 清除浮动</h4><p><strong>通过为父元素</strong>添加 <code>.clearfix</code> 类可以很容易地清除浮动（<code>float</code>）。这里所使用的是 Nicolas Gallagher 创造的 <a href="http://nicolasgallagher.com/micro-clearfix-hack/" target="_blank" rel="noopener">micro clearfix</a> 方式。此类还可以作为 mixin 使用。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&lt;!<span class="selector-tag">--</span> <span class="selector-tag">Usage</span> <span class="selector-tag">as</span> <span class="selector-tag">a</span> <span class="selector-tag">class</span> <span class="selector-tag">--</span>&gt;</span><br><span class="line">&lt;div class="clearfix"&gt;...&lt;/div&gt;</span><br><span class="line">// Mixin itself</span><br><span class="line"><span class="selector-class">.clearfix</span>() &#123;</span><br><span class="line">  &amp;:before,</span><br><span class="line">  &amp;<span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">" "</span>;</span><br><span class="line">    <span class="attribute">display</span>: table;</span><br><span class="line">  &#125;</span><br><span class="line">  &amp;<span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">    <span class="attribute">clear</span>: both;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Usage as a mixin</span><br><span class="line"><span class="selector-class">.element</span> &#123;</span><br><span class="line">  .clearfix();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="4-3-11-显示或隐藏内容"><a href="#4-3-11-显示或隐藏内容" class="headerlink" title="4.3.11 显示或隐藏内容"></a>4.3.11 显示或隐藏内容</h4><p>我们可以使用.hidden和.show来强制任意元素的显示和隐藏，.invisible类也可以隐藏元素，但只是改变了可见性，元素仍旧占据位置，影响排版</p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Classes</span></span><br><span class="line"><span class="selector-class">.show</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.hidden</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: none <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.invisible</span> &#123;</span><br><span class="line">  <span class="attribute">visibility</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Usage as mixins</span></span><br><span class="line"><span class="selector-class">.element</span> &#123;</span><br><span class="line">  <span class="selector-class">.show</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.another-element</span> &#123;</span><br><span class="line">  <span class="selector-class">.hidden</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="4-3-12-响应式工具"><a href="#4-3-12-响应式工具" class="headerlink" title="4.3.12 响应式工具"></a>4.3.12 响应式工具</h4><table>
<thead>
<tr>
<th align="left">超小屏幕手机 (&lt;768px)</th>
<th align="left">小屏幕平板 (≥768px)</th>
<th align="left">中等屏幕桌面 (≥992px)</th>
<th align="left">大屏幕桌面 (≥1200px)</th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>.visible-xs-*</code></td>
<td align="left">可见</td>
<td align="left">隐藏</td>
<td align="left">隐藏</td>
<td>隐藏</td>
</tr>
<tr>
<td align="left"><code>.visible-sm-*</code></td>
<td align="left">隐藏</td>
<td align="left">可见</td>
<td align="left">隐藏</td>
<td>隐藏</td>
</tr>
<tr>
<td align="left"><code>.visible-md-*</code></td>
<td align="left">隐藏</td>
<td align="left">隐藏</td>
<td align="left">可见</td>
<td>隐藏</td>
</tr>
<tr>
<td align="left"><code>.visible-lg-*</code></td>
<td align="left">隐藏</td>
<td align="left">隐藏</td>
<td align="left">隐藏</td>
<td>可见</td>
</tr>
<tr>
<td align="left"><code>.hidden-xs</code></td>
<td align="left">隐藏</td>
<td align="left">可见</td>
<td align="left">可见</td>
<td>可见</td>
</tr>
<tr>
<td align="left"><code>.hidden-sm</code></td>
<td align="left">可见</td>
<td align="left">隐藏</td>
<td align="left">可见</td>
<td>可见</td>
</tr>
<tr>
<td align="left"><code>.hidden-md</code></td>
<td align="left">可见</td>
<td align="left">可见</td>
<td align="left">隐藏</td>
<td>可见</td>
</tr>
<tr>
<td align="left"><code>.hidden-lg</code></td>
<td align="left">可见</td>
<td align="left">可见</td>
<td align="left">可见</td>
<td>隐藏</td>
</tr>
</tbody></table>
<p>从 v3.2.0 版本起，形如 <code>.visible-*-*</code> 的类针对每种屏幕大小都有了三种变体，每个针对 CSS 中不同的 <code>display</code> 属性，列表如下：</p>
<table>
<thead>
<tr>
<th align="left">类组</th>
<th align="left">CSS <code>display</code></th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>.visible-*-block</code></td>
<td align="left"><code>display: block;</code></td>
</tr>
<tr>
<td align="left"><code>.visible-*-inline</code></td>
<td align="left"><code>display: inline;</code></td>
</tr>
<tr>
<td align="left"><code>.visible-*-inline-block</code></td>
<td align="left"><code>display: inline-block;</code></td>
</tr>
</tbody></table>
<p>因此，以超小屏幕（<code>xs</code>）为例，可用的 <code>.visible-*-*</code> 类是：<code>.visible-xs-block</code>、<code>.visible-xs-inline</code> 和 <code>.visible-xs-inline-block</code>。</p>
<p><code>.visible-xs</code>、<code>.visible-sm</code>、<code>.visible-md</code> 和 <code>.visible-lg</code> 类也同时存在。但是<strong>从 v3.2.0 版本开始不再建议使用</strong>。除了 table相关的元素的特殊情况外，它们与 <code>.visible-*-block</code> 大体相同。</p>
<h4 id="4-3-13-打印类"><a href="#4-3-13-打印类" class="headerlink" title="4.3.13 打印类"></a>4.3.13 打印类</h4><p>和常规的响应式类一样，使用下面的类可以针对打印机隐藏或显示某些内容。</p>
<table>
<thead>
<tr>
<th align="left">class</th>
<th align="left">浏览器</th>
<th align="left">打印机</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>.visible-print-block</code> <code>.visible-print-inline</code> <code>.visible-print-inline-block</code></td>
<td align="left">隐藏</td>
<td align="left">可见</td>
</tr>
<tr>
<td align="left"><code>.hidden-print</code></td>
<td align="left">可见</td>
<td align="left">隐藏</td>
</tr>
</tbody></table>
<p><code>.visible-print</code> 类也是存在的，但是从 v3.2.0 版本开始<strong>不建议使用</strong>。它与 <code>.visible-print-block</code> 类大致相同，除了 `` 相关元素的特殊情况外。</p>
<h2 id="4-4-Bootstrap3组件"><a href="#4-4-Bootstrap3组件" class="headerlink" title="4.4 Bootstrap3组件"></a>4.4 Bootstrap3组件</h2><p>Bootstrap提供了以下组件：</p>
<ul>
<li>Glyphicons字体图标</li>
<li>按钮组</li>
<li>按钮式下拉菜单</li>
<li>输入框组</li>
<li>导航</li>
<li>导航条</li>
<li>路径导航(面包屑)</li>
<li>分页</li>
<li>标签</li>
<li>徽章</li>
<li>巨幕</li>
<li>页头</li>
<li>缩略图</li>
<li>警告框</li>
<li>进度条</li>
<li>媒体对象</li>
<li>列表组</li>
<li>面板</li>
</ul>
<h2 id="4-5-Bootstrap3-JavaScript插件"><a href="#4-5-Bootstrap3-JavaScript插件" class="headerlink" title="4.5 Bootstrap3 JavaScript插件"></a>4.5 Bootstrap3 JavaScript插件</h2><p>Bootstrap3提供了以下的JavaScript插件</p>
<ul>
<li>过渡效果</li>
<li>模态框</li>
<li>下拉菜单</li>
<li>滚动监听</li>
<li>标签页</li>
<li>Tooltip</li>
<li>Popup</li>
<li>按钮</li>
<li>折叠面板</li>
<li>轮播图Carousel</li>
<li>图钉</li>
</ul>
<h3 id="4-6-Bootstrap3样式定制"><a href="#4-6-Bootstrap3样式定制" class="headerlink" title="4.6 Bootstrap3样式定制"></a>4.6 Bootstrap3样式定制</h3><p><a href="https://v3.bootcss.com/customize/#grid-system" target="_blank" rel="noopener">https://v3.bootcss.com/customize/#grid-system</a></p>
<h1 id="五-Bootstrap4的使用"><a href="#五-Bootstrap4的使用" class="headerlink" title="五. Bootstrap4的使用"></a>五. Bootstrap4的使用</h1><p>目前Bootstrap已经更新到了版本4.x</p>
<h2 id="5-1-栅格系统使用FlexBox重构"><a href="#5-1-栅格系统使用FlexBox重构" class="headerlink" title="5.1 栅格系统使用FlexBox重构"></a>5.1 栅格系统使用FlexBox重构</h2><table>
<thead>
<tr>
<th>Extra small &lt;576px</th>
<th>Small ≥576px</th>
<th>Medium ≥768px</th>
<th>Large ≥992px</th>
<th>Extra large ≥1200px</th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>Max container width</td>
<td>None (auto)</td>
<td>540px</td>
<td>720px</td>
<td>960px</td>
<td>1140px</td>
</tr>
<tr>
<td>Class prefix</td>
<td><code>.col-</code></td>
<td><code>.col-sm-</code></td>
<td><code>.col-md-</code></td>
<td><code>.col-lg-</code></td>
<td><code>.col-xl-</code></td>
</tr>
<tr>
<td># of columns</td>
<td>12</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Gutter width</td>
<td>30px (15px on each side of a column)</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Nestable</td>
<td>Yes</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Column ordering</td>
<td>Yes</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<ul>
<li>Bootstrap4的栅格系统支持等宽自动分配空间的方式</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col"</span>&gt;</span>item1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col"</span>&gt;</span>item2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col"</span>&gt;</span>item3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>我们也可以通过使用.w-100类来实现等宽列跨越多行的布局</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col"</span>&gt;</span>item1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col"</span>&gt;</span>item2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col"</span>&gt;</span>item3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"w-100"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col"</span>&gt;</span>item4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col"</span>&gt;</span>item5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col"</span>&gt;</span>item6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>我们也可以为某些列指定宽度，其他列作为自动列存在</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col"</span>&gt;</span>item1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-6"</span>&gt;</span>item2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col"</span>&gt;</span>item3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"w-100"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col"</span>&gt;</span>item4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col"</span>&gt;</span>item5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col"</span>&gt;</span>item6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>我们也可以通过使用col-{breakpoint}-auto来使得某些列宽度随内容多少变化，而其他列作为自动列存在</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row justify-content-md-center"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col col-lg-2"</span>&gt;</span></span><br><span class="line">      1 of 3</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-auto"</span>&gt;</span></span><br><span class="line">      Variable width content</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col col-lg-2"</span>&gt;</span></span><br><span class="line">      3 of 3</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col"</span>&gt;</span></span><br><span class="line">      1 of 3</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-auto"</span>&gt;</span></span><br><span class="line">      Variable width content</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col col-lg-2"</span>&gt;</span></span><br><span class="line">      3 of 3</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>Bootstrap共定义了5个级别的响应式类</li>
</ul>
<p>.col, col-sm, .col-md, .col-lg, .col-xl</p>
<p>如果我们的布局中栅格在各个尺寸下列宽占比是一致的，那我们直接使用.col类来实现自动列就行了，我们也可以为某些列指定我们想要的占比</p>
<p>我们可以混用5个级别下的响应式类来达到更好的布局控制</p>
<ul>
<li><p>列间距gutter<br>Bootstrap4中的gutter可以响应式调整</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container px-lg-5"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row mx-lg-n5"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col py-3 px-lg-5 border bg-light"</span>&gt;</span>Custom column padding<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col py-3 px-lg-5 border bg-light"</span>&gt;</span>Custom column padding<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

</li>
</ul>
<p>​      这里我们给栅格列赋予了px-lg-5设置了padding,我们在row元素和container元素都需要通过使用.px-lg-5来抵消掉列的内补</p>
<ul>
<li><p>我们可以通过.row-cols-*类来指定我们自动列每行的列数</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row row-cols-2"</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col"</span>&gt;</span>column<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col"</span>&gt;</span>column<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col"</span>&gt;</span>column<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col"</span>&gt;</span>column<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>栅格内容对齐方式的设置<br>我们可以通过使用.align-items-start, .align-items-center, .align-items-end设置row中所有col的垂直对齐方式， 使用justify-content-start,justify-content-center和justify-content-end来设置row中所有的水平对齐方式, 也可以通过.align-self-start,.align-self-center,.align-self-end类设置某个col的垂直对齐方式</p>
</li>
<li><p>no-gutters: 可以取消栅格之间的间隙</p>
</li>
<li><p>列排序: 我们使用.order-*(例如order-12, order-1)来实现列的排序</p>
</li>
<li><p>列偏移我们可以使用offset-{breakpoint}-*来设置列的偏移量</p>
</li>
<li><p>Margin工具类Bootstrap包含各种速记响应边距和填充实用程序类，以修改元素的外观。</p>
<h2 id="怎么运行的"><a href="#怎么运行的" class="headerlink" title="怎么运行的"></a>怎么运行的</h2><p>使用速记类为元素或其边上的子集分配响应友好<code>margin</code>或<code>padding</code>值。包括对单个属性，所有属性以及垂直和水平属性的支持。类从默认的萨斯地图范围内<code>.25rem</code>建立<code>3rem</code>。</p>
<h2 id="表示法"><a href="#表示法" class="headerlink" title="表示法"></a>表示法</h2><p>适用于所有断点，从间距公用事业<code>xs</code>到<code>xl</code>，在他们没有断点的缩写。这是因为这些类是从上到下应用的<code>min-width: 0</code>，因此不受媒体查询的约束。然而，其余的断点确实包含断点缩写。</p>
<p>类别是使用的格式命名<code>{property}{sides}-{size}</code>为<code>xs</code>和<code>{property}{sides}-{breakpoint}-{size}</code>为<code>sm</code>，<code>md</code>，<code>lg</code>，和<code>xl</code>。</p>
<p>当<em>属性</em>是以下之一：</p>
<ul>
<li><p><code>m</code>-用于设置<code>margin</code></p>
</li>
<li><p><code>p</code>-用于设置<code>padding</code></p>
</li>
</ul>
<p>当<em>双方</em>是一个：</p>
<ul>
<li><p><code>t</code>-用于设置<code>margin-top</code>或<code>padding-top</code></p>
</li>
<li><p><code>b</code>-用于设置<code>margin-bottom</code>或<code>padding-bottom</code></p>
</li>
<li><p><code>l</code>-用于设置<code>margin-left</code>或<code>padding-left</code></p>
</li>
<li><p><code>r</code>-用于设置<code>margin-right</code>或<code>padding-right</code></p>
</li>
<li><p><code>x</code>-对于设置两者的类<code>*-left</code>和<code>*-right</code></p>
</li>
<li><p><code>y</code>-对于设置两者的类<code>*-top</code>和<code>*-bottom</code></p>
</li>
<li><p>为设置<code>margin</code>或<code>padding</code>元素的所有四个方面</p>
</li>
</ul>
<p>其中<em>大小</em>是以下之一：</p>
<ul>
<li><p><code>0</code>- 用于消除<code>margin</code>或<code>padding</code>通过设置的类<code>0</code> </p>
</li>
<li><p><code>1</code>- （默认情况下）的类时，设置<code>margin</code>或<code>padding</code>以<code>$spacer * .25</code> </p>
</li>
<li><p><code>2</code>- （默认情况下）的类时，设置<code>margin</code>或<code>padding</code>以<code>$spacer * .5</code> </p>
</li>
<li><p><code>3</code>- （默认情况下）的类时，设置<code>margin</code>或<code>padding</code>以<code>$spacer</code> </p>
</li>
<li><p><code>4</code>- （默认情况下）的类时，设置<code>margin</code>或<code>padding</code>以<code>$spacer * 1.5</code> </p>
</li>
<li><p><code>5</code>- （默认情况下）的类时，设置<code>margin</code>或<code>padding</code>以<code>$spacer * 3</code> </p>
</li>
<li><p><code>auto</code>- 用于设置<code>margin</code>为自动的类</p>
</li>
</ul>
<p>（您可以通过向<code>$spacers</code>Sass地图变量添加条目来添加更多尺寸。）</p>
</li>
<li><p>支持列嵌套</p>
</li>
</ul>
<h2 id="5-2-使用工具"><a href="#5-2-使用工具" class="headerlink" title="5.2 使用工具"></a>5.2 使用工具</h2><h4 id="5-2-1-border"><a href="#5-2-1-border" class="headerlink" title="5.2.1 border"></a>5.2.1 border</h4><p>使用边界实用程序快速设置元素的边框和边框半径。非常适合图片，按钮或任何其他元素。</p>
<p><strong>边界</strong></p>
<p>将元素添加到元素以删除所有边框或边框。</p>
<p><a href="https://getbootstrap.com/docs/4.0/utilities/borders/#border" target="_blank" rel="noopener">打开getbootstrap.com上的示例</a></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"border"</span>&gt;&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">&lt;span class="border-0"&gt;&lt;/</span>span&gt;</span><br><span class="line">&lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"border-top-0"</span>&gt;&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">&lt;span class="border-right-0"&gt;&lt;/</span>span&gt;</span><br><span class="line">&lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"border-bottom-0"</span>&gt;&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">&lt;span class="border-left-0"&gt;&lt;/</span>span&gt;</span><br></pre></td></tr></table></figure>

<p><strong>边框颜色</strong></p>
<p>使用基于主题颜色的实用程序更改边框颜色。</p>
<p><a href="https://getbootstrap.com/docs/4.0/utilities/borders/#border-color" target="_blank" rel="noopener">打开getbootstrap.com上的示例</a></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"border border-primary"</span>&gt;&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">&lt;span class="border border-secondary"&gt;&lt;/</span>span&gt;</span><br><span class="line">&lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"border border-success"</span>&gt;&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">&lt;span class="border border-danger"&gt;&lt;/</span>span&gt;</span><br><span class="line">&lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"border border-warning"</span>&gt;&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">&lt;span class="border border-info"&gt;&lt;/</span>span&gt;</span><br><span class="line">&lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"border border-light"</span>&gt;&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">&lt;span class="border border-dark"&gt;&lt;/</span>span&gt;</span><br><span class="line">&lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"border border-white"</span>&gt;&lt;<span class="regexp">/span&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>边界半径</strong></p>
<p>将类添加到元素中，以便轻松使元素的角变圆。</p>
<p><a href="https://getbootstrap.com/docs/4.0/utilities/borders/#border-radius" target="_blank" rel="noopener">打开getbootstrap.com上的示例</a></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;img src=<span class="string">"..."</span> alt=<span class="string">"..."</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"rounded"</span>&gt;</span><br><span class="line">&lt;img src=<span class="string">"..."</span> alt=<span class="string">"..."</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"rounded-top"</span>&gt;</span><br><span class="line">&lt;img src=<span class="string">"..."</span> alt=<span class="string">"..."</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"rounded-right"</span>&gt;</span><br><span class="line">&lt;img src=<span class="string">"..."</span> alt=<span class="string">"..."</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"rounded-bottom"</span>&gt;</span><br><span class="line">&lt;img src=<span class="string">"..."</span> alt=<span class="string">"..."</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"rounded-left"</span>&gt;</span><br><span class="line">&lt;img src=<span class="string">"..."</span> alt=<span class="string">"..."</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"rounded-circle"</span>&gt;</span><br><span class="line">&lt;img src=<span class="string">"..."</span> alt=<span class="string">"..."</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"rounded-0"</span>&gt;</span><br></pre></td></tr></table></figure>

<h4 id="5-2-2-清除浮动-Clearfix"><a href="#5-2-2-清除浮动-Clearfix" class="headerlink" title="5.2.2 清除浮动 | Clearfix"></a>5.2.2 清除浮动 | Clearfix</h4><p>通过添加一个clearfix实用程序，快速轻松地清除容器中的浮动内容。</p>
<p>通过添加<code>.clearfix</code> <strong>到父元素可</strong>轻松清除<code>float</code>s 。也可以用作混音。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"clearfix"</span>&gt;...&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/ Mixin itself</span></span><br><span class="line"><span class="regexp">@mixin clearfix() &#123;</span></span><br><span class="line"><span class="regexp">  &amp;::after &#123;</span></span><br><span class="line"><span class="regexp">    display: block;</span></span><br><span class="line"><span class="regexp">    content: "";</span></span><br><span class="line"><span class="regexp">    clear: both;</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/ Usage as a mixin</span></span><br><span class="line"><span class="regexp">.element &#123;</span></span><br><span class="line"><span class="regexp">  @include clearfix;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br></pre></td></tr></table></figure>

<p>以下示例显示了如何使用clearfix。如果没有clearfix，则换行div不会跨越会导致布局破碎的按钮。</p>
<p><a href="https://getbootstrap.com/docs/4.0/utilities/clearfix/#content" target="_blank" rel="noopener">打开getbootstrap.com上的示例</a></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"bg-info clearfix"</span>&gt;</span><br><span class="line">  &lt;button type=<span class="string">"button"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-secondary float-left"</span>&gt;Example Button floated left&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">  &lt;button type="button" class="btn btn-secondary float-right"&gt;Example Button floated right&lt;/</span>button&gt;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="5-2-3-关闭图标-Close-icon"><a href="#5-2-3-关闭图标-Close-icon" class="headerlink" title="5.2.3 关闭图标 | Close icon"></a>5.2.3 关闭图标 | Close icon</h4><p>使用通用的关闭图标来解散内容，如模式和警报。</p>
<p><strong>确保为屏幕阅读器添加文字</strong>，正如我们操作<code>aria-label</code>那样。</p>
<p><a href="https://getbootstrap.com/docs/4.0/utilities/close-icon/#content" target="_blank" rel="noopener">打开getbootstrap.com上的示例</a></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;button type=<span class="string">"button"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"close"</span> aria-label=<span class="string">"Close"</span>&gt;</span><br><span class="line">  &lt;span aria-hidden=<span class="string">"true"</span>&gt;&amp;times;&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>button&gt;</span><br></pre></td></tr></table></figure>

<h4 id="5-2-4-颜色-Colors"><a href="#5-2-4-颜色-Colors" class="headerlink" title="5.2.4 颜色 | Colors"></a>5.2.4 颜色 | Colors</h4><p>用少数颜色工具类来表达颜色意义。包括对悬停状态样式链接的支持。</p>
<p><strong>颜色</strong></p>
<p><a href="https://getbootstrap.com/docs/4.0/utilities/colors/#color" target="_blank" rel="noopener">打开getbootstrap.com上的示例</a></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">"text-primary"</span>&gt;.text-primary&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">&lt;p class="text-secondary"&gt;.text-secondary&lt;/</span>p&gt;</span><br><span class="line">&lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">"text-success"</span>&gt;.text-success&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">&lt;p class="text-danger"&gt;.text-danger&lt;/</span>p&gt;</span><br><span class="line">&lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">"text-warning"</span>&gt;.text-warning&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">&lt;p class="text-info"&gt;.text-info&lt;/</span>p&gt;</span><br><span class="line">&lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">"text-light bg-dark"</span>&gt;.text-light&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">&lt;p class="text-dark"&gt;.text-dark&lt;/</span>p&gt;</span><br><span class="line">&lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">"text-muted"</span>&gt;.text-muted&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">&lt;p class="text-white bg-dark"&gt;.text-white&lt;/</span>p&gt;</span><br></pre></td></tr></table></figure>

<p>上下文文本类在提供悬停和焦点状态的锚点上也可以很好地工作。<strong>请注意，</strong> <strong><code>.text-white</code>和<code>.text-muted</code></strong> <strong>类没有链接样式。</strong></p>
<p><a href="https://getbootstrap.com/docs/4.0/utilities/colors/#color" target="_blank" rel="noopener">打开getbootstrap.com上的示例</a></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;p&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"text-primary"</span>&gt;</span>Primary link<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span>&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">&lt;p&gt;&lt;a href="#" class="text-secondary"&gt;Secondary link&lt;/</span>a&gt;&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">&lt;p&gt;&lt;a href="#" class="text-success"&gt;Success link&lt;/</span>a&gt;&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">&lt;p&gt;&lt;a href="#" class="text-danger"&gt;Danger link&lt;/</span>a&gt;&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">&lt;p&gt;&lt;a href="#" class="text-warning"&gt;Warning link&lt;/</span>a&gt;&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">&lt;p&gt;&lt;a href="#" class="text-info"&gt;Info link&lt;/</span>a&gt;&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">&lt;p&gt;&lt;a href="#" class="text-light bg-dark"&gt;Light link&lt;/</span>a&gt;&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">&lt;p&gt;&lt;a href="#" class="text-dark"&gt;Dark link&lt;/</span>a&gt;&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">&lt;p&gt;&lt;a href="#" class="text-muted"&gt;Muted link&lt;/</span>a&gt;&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">&lt;p&gt;&lt;a href="#" class="text-white bg-dark"&gt;White link&lt;/</span>a&gt;&lt;<span class="regexp">/p&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>背景颜色</strong></p>
<p>与上下文文本颜色类相似，可以轻松地将元素的背景设置为任何上下文类。就像文本类一样，锚组件会在悬停时变暗。后台实用程序<strong>没有设置</strong> <strong><code>color</code></strong>，因此在某些情况下您需要使用<code>.text-*</code>实用程序。</p>
<p><a href="https://getbootstrap.com/docs/4.0/utilities/colors/#background-color" target="_blank" rel="noopener">打开getbootstrap.com上的示例</a></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"p-3 mb-2 bg-primary text-white"</span>&gt;.bg-primary&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;div class="p-3 mb-2 bg-secondary text-white"&gt;.bg-secondary&lt;/</span>div&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"p-3 mb-2 bg-success text-white"</span>&gt;.bg-success&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;div class="p-3 mb-2 bg-danger text-white"&gt;.bg-danger&lt;/</span>div&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"p-3 mb-2 bg-warning text-white"</span>&gt;.bg-warning&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;div class="p-3 mb-2 bg-info text-white"&gt;.bg-info&lt;/</span>div&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"p-3 mb-2 bg-light text-dark"</span>&gt;.bg-light&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;div class="p-3 mb-2 bg-dark text-white"&gt;.bg-dark&lt;/</span>div&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"p-3 mb-2 bg-white text-dark"</span>&gt;.bg-white&lt;<span class="regexp">/div&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>背景梯度</strong></p>
<p>当<code>$enable-gradients</code>设置为true时，您将能够使用<code>.bg-gradient-</code>实用程序类。<strong>默认情况下，</strong> <code>**$enable-gradients**</code><strong>被禁用，下面的示例被故意破坏。</strong>这从您开始使用Bootstrap开始就更容易定制。后续启用相关课程以继续了解Sass选项等等。 </p>
<p><a href="https://getbootstrap.com/docs/4.0/utilities/colors/#background-gradient" target="_blank" rel="noopener">打开getbootstrap.com上的示例</a></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"p-3 mb-2 bg-gradient-primary text-white"</span>&gt;.bg-gradient-primary&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;div class="p-3 mb-2 bg-gradient-secondary text-white"&gt;.bg-gradient-secondary&lt;/</span>div&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"p-3 mb-2 bg-gradient-success text-white"</span>&gt;.bg-gradient-success&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;div class="p-3 mb-2 bg-gradient-danger text-white"&gt;.bg-gradient-danger&lt;/</span>div&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"p-3 mb-2 bg-gradient-warning text-white"</span>&gt;.bg-gradient-warning&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;div class="p-3 mb-2 bg-gradient-info text-white"&gt;.bg-gradient-info&lt;/</span>div&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"p-3 mb-2 bg-gradient-light text-dark"</span>&gt;.bg-gradient-light&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;div class="p-3 mb-2 bg-gradient-dark text-white"&gt;.bg-gradient-dark&lt;/</span>div&gt;</span><br></pre></td></tr></table></figure>

<p><strong>处理特殊性</strong></p>
<p>由于其他选择器的特殊性，有时上下文类无法应用。在某些情况下，一个充分的解决方法是将元素的内容封装``在类中。</p>
<p><strong>将意义传递给辅助技术</strong></p>
<p>使用颜色来增加意义只能提供一种视觉指示，而不会传达给辅助技术的用户 - 如屏幕阅读器。确保由颜色表示的信息或者来自内容本身（例如可见文本），或者通过其他方式包含，例如隐藏在<code>.sr-only</code>课程中的其他文本。</p>
<h4 id="5-2-5-显示属性-Display-property"><a href="#5-2-5-显示属性-Display-property" class="headerlink" title="5.2.5 显示属性 | Display property"></a>5.2.5 显示属性 | Display property</h4><p>通过我们的显示实用程序快速响应地切换组件的显示值。包括对一些更常见的值的支持，以及一些额外功能，用于控制打印时的显示。</p>
<p><strong>共同的<code>display</code>价值</strong></p>
<p><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/display" target="_blank" rel="noopener"><code>display</code>属性</a>接受了一些值，我们用实用程序类支持其中的许多值。我们故意不提供每个价值作为实用工具，所以我们支持：</p>
<ul>
<li><p><code>.d-none</code></p>
</li>
<li><p><code>.d-inline</code></p>
</li>
<li><p><code>.d-inline-block</code></p>
</li>
<li><p><code>.d-block</code></p>
</li>
<li><p><code>.d-table</code></p>
</li>
<li><p><code>.d-table-cell</code></p>
</li>
<li><p><code>.d-flex</code></p>
</li>
<li><p><code>.d-inline-flex</code></p>
</li>
</ul>
<p>通过将任何类应用到您选择的元素来使用它们。例如，下面介绍如何使用内联，块或内联块实用程序（同样适用于其他类）。</p>
<p><a href="https://getbootstrap.com/docs/4.0/utilities/display/#common-display-values" target="_blank" rel="noopener">打开getbootstrap.com上的示例</a></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"d-inline bg-success"</span>&gt;d-inline&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;div class="d-inline bg-success"&gt;d-inline&lt;/</span>div&gt;</span><br></pre></td></tr></table></figure>

<p><a href="https://getbootstrap.com/docs/4.0/utilities/display/#common-display-values" target="_blank" rel="noopener">打开getbootstrap.com上的示例</a></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"d-block bg-primary"</span>&gt;d-block&lt;<span class="regexp">/span&gt;</span></span><br></pre></td></tr></table></figure>

<p><a href="https://getbootstrap.com/docs/4.0/utilities/display/#common-display-values" target="_blank" rel="noopener">打开getbootstrap.com上的示例</a></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"d-inline-block bg-warning"</span>&gt;d-inline-block&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;div class="d-inline-block bg-warning"&gt;d-inline-block&lt;/</span>div&gt;</span><br></pre></td></tr></table></figure>

<p>对于上面提到的每一个实用程序也都有响应变化。</p>
<ul>
<li><p><code>.d-none</code></p>
</li>
<li><p><code>.d-inline</code></p>
</li>
<li><p><code>.d-inline-block</code></p>
</li>
<li><p><code>.d-block</code></p>
</li>
<li><p><code>.d-table</code></p>
</li>
<li><p><code>.d-table-cell</code></p>
</li>
<li><p><code>.d-flex</code></p>
</li>
<li><p><code>.d-inline-flex</code></p>
</li>
<li><p><code>.d-sm-none</code></p>
</li>
<li><p><code>.d-sm-inline</code></p>
</li>
<li><p><code>.d-sm-inline-block</code></p>
</li>
<li><p><code>.d-sm-block</code></p>
</li>
<li><p><code>.d-sm-table</code></p>
</li>
<li><p><code>.d-sm-table-cell</code></p>
</li>
<li><p><code>.d-sm-flex</code></p>
</li>
<li><p><code>.d-sm-inline-flex</code></p>
</li>
<li><p><code>.d-md-none</code></p>
</li>
<li><p><code>.d-md-inline</code></p>
</li>
<li><p><code>.d-md-inline-block</code></p>
</li>
<li><p><code>.d-md-block</code></p>
</li>
<li><p><code>.d-md-table</code></p>
</li>
<li><p><code>.d-md-table-cell</code></p>
</li>
<li><p><code>.d-md-flex</code></p>
</li>
<li><p><code>.d-md-inline-flex</code></p>
</li>
<li><p><code>.d-lg-none</code></p>
</li>
<li><p><code>.d-lg-inline</code></p>
</li>
<li><p><code>.d-lg-inline-block</code></p>
</li>
<li><p><code>.d-lg-block</code></p>
</li>
<li><p><code>.d-lg-table</code></p>
</li>
<li><p><code>.d-lg-table-cell</code></p>
</li>
<li><p><code>.d-lg-flex</code></p>
</li>
<li><p><code>.d-lg-inline-flex</code></p>
</li>
<li><p><code>.d-xl-none</code></p>
</li>
<li><p><code>.d-xl-inline</code></p>
</li>
<li><p><code>.d-xl-inline-block</code></p>
</li>
<li><p><code>.d-xl-block</code></p>
</li>
<li><p><code>.d-xl-table</code></p>
</li>
<li><p><code>.d-xl-table-cell</code></p>
</li>
<li><p><code>.d-xl-flex</code></p>
</li>
<li><p><code>.d-xl-inline-flex</code></p>
</li>
</ul>
<p><strong>隐藏元素</strong></p>
<p>为了加速移动设备的开发，请使用响应式显示类来显示和隐藏设备中的元素。避免创建完全不同的同一站点版本，而是针对每个屏幕大小响应地隐藏元素。</p>
<p>要隐藏元素，只需使用<code>.d-none</code>类或其中一个<code>.d-{sm,md,lg,xl}-none</code>类来响应任何屏幕变化。</p>
<p>要仅在给定的屏幕大小间隔上显示元素，可以组合一个<code>.d-*-none</code>类的<code>.d-*-*</code>类，例如<code>.d-none.d-md-block.d-xl-none</code>将隐藏除中型和大型设备外的所有屏幕大小的元素。</p>
<table>
<thead>
<tr>
<th align="left">屏幕尺寸</th>
<th align="left">类别</th>
</tr>
</thead>
<tbody><tr>
<td align="left">隐藏在所有</td>
<td align="left">d-none</td>
</tr>
<tr>
<td align="left">只在xs上隐藏</td>
<td align="left">d-none d-sm-block</td>
</tr>
<tr>
<td align="left">只隐藏在sm上</td>
<td align="left">d-sm-none d-md-block</td>
</tr>
<tr>
<td align="left">仅在md上隐藏</td>
<td align="left">d-md-none d-lg-block</td>
</tr>
<tr>
<td align="left">只隐藏在lg上</td>
<td align="left">d-lg-none d-xl-block</td>
</tr>
<tr>
<td align="left">仅在xl上隐藏</td>
<td align="left">d-xl-none</td>
</tr>
<tr>
<td align="left">全部可见</td>
<td align="left">d-block</td>
</tr>
<tr>
<td align="left">仅在xs上可见</td>
<td align="left">d-block d-sm-none</td>
</tr>
<tr>
<td align="left">仅在sm上可见</td>
<td align="left">d-none d-sm-block d-md-none</td>
</tr>
<tr>
<td align="left">仅在md上可见</td>
<td align="left">d-none d-md-block d-lg-none</td>
</tr>
<tr>
<td align="left">仅在lg上可见</td>
<td align="left">d-none d-lg-block d-xl-none</td>
</tr>
<tr>
<td align="left">仅在xl上可见</td>
<td align="left">d-none d-xl-block</td>
</tr>
</tbody></table>
<p><strong>显示打印</strong></p>
<p><code>display</code>使用我们的打印显示实用程序进行打印时更改元素的值。</p>
<table>
<thead>
<tr>
<th align="left">类别</th>
<th align="left">打印样式</th>
</tr>
</thead>
<tbody><tr>
<td align="left">.d-print-block</td>
<td align="left">打印时应用display:block到元素</td>
</tr>
<tr>
<td align="left">.d-print-inline</td>
<td align="left">打印时应用display:内联到元素</td>
</tr>
<tr>
<td align="left">.d-print-inline-block</td>
<td align="left">打印时应用display:inline-block到元素</td>
</tr>
<tr>
<td align="left">.d-print-none</td>
<td align="left">打印时，将元素display:none应用于元素</td>
</tr>
</tbody></table>
<h4 id="5-2-6-内嵌-embed"><a href="#5-2-6-内嵌-embed" class="headerlink" title="5.2.6 内嵌 | embed"></a>5.2.6 内嵌 | embed</h4><p><strong>内嵌 | Embeds</strong></p>
<p>通过创建可在任何设备上缩放的固有比率，根据父级的宽度创建响应式视频或幻灯片嵌入。</p>
<p><strong>关于</strong></p>
<p>规则被直接施加到<code>，</code>，<code>和</code>元件；<code>.embed-responsive-item</code>如果要为其他属性的样式进行匹配，可以使用明确的后代类。</p>
<p><strong>专家提示！</strong>你不需要包含<code>frameborder=&quot;0&quot;</code>在你的``s中，因为我们会为你覆盖。</p>
<p><strong>示例</strong></p>
<p>将任何嵌入内容嵌入到具有纵横比``的父元素中<code>.embed-responsive</code>。<code>.embed-responsive-item</code>并非严格要求，但鼓励使用。</p>
<p><a href="https://getbootstrap.com/docs/4.0/utilities/embed/#example" target="_blank" rel="noopener">打开getbootstrap.com上的示例</a></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"embed-responsive embed-responsive-16by9"</span>&gt;</span><br><span class="line">  &lt;iframe <span class="class"><span class="keyword">class</span></span>=<span class="string">"embed-responsive-item"</span> src=<span class="string">"https://www.youtube.com/embed/zpOULjyy-n8?rel=0"</span> allowfullscreen&gt;&lt;<span class="regexp">/iframe&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br></pre></td></tr></table></figure>

<p><strong>纵横比</strong></p>
<p>宽高比可以使用修饰符类自定义。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;!-- <span class="number">21</span>:<span class="number">9</span> aspect ratio --&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"embed-responsive embed-responsive-21by9"</span>&gt;</span><br><span class="line">  &lt;iframe <span class="class"><span class="keyword">class</span></span>=<span class="string">"embed-responsive-item"</span> src=<span class="string">"..."</span>&gt;&lt;<span class="regexp">/iframe&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- <span class="number">16</span>:<span class="number">9</span> aspect ratio --&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"embed-responsive embed-responsive-16by9"</span>&gt;</span><br><span class="line">  &lt;iframe <span class="class"><span class="keyword">class</span></span>=<span class="string">"embed-responsive-item"</span> src=<span class="string">"..."</span>&gt;&lt;<span class="regexp">/iframe&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- <span class="number">4</span>:<span class="number">3</span> aspect ratio --&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"embed-responsive embed-responsive-4by3"</span>&gt;</span><br><span class="line">  &lt;iframe <span class="class"><span class="keyword">class</span></span>=<span class="string">"embed-responsive-item"</span> src=<span class="string">"..."</span>&gt;&lt;<span class="regexp">/iframe&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- <span class="number">1</span>:<span class="number">1</span> aspect ratio --&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"embed-responsive embed-responsive-1by1"</span>&gt;</span><br><span class="line">  &lt;iframe <span class="class"><span class="keyword">class</span></span>=<span class="string">"embed-responsive-item"</span> src=<span class="string">"..."</span>&gt;&lt;<span class="regexp">/iframe&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br></pre></td></tr></table></figure>

<h4 id="5-2-7-浮动-Float"><a href="#5-2-7-浮动-Float" class="headerlink" title="5.2.7 浮动 | Float"></a>5.2.7 浮动 | Float</h4><p>使用我们的响应式浮动实用程序在任何断点上切换任何元素上的浮点数。</p>
<p><strong>概述</strong></p>
<p>这些实用程序类使用<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/float" target="_blank" rel="noopener">CSS <code>float</code>属性</a>根据当前视口大小将元素浮动到左侧或右侧，或禁用浮动。<code>!important</code>包含在内以避免特殊性问题。这些使用与我们的网格系统相同的视口断点。</p>
<p><strong>类别</strong></p>
<p>用类切换浮点数：</p>
<p><a href="https://getbootstrap.com/docs/4.0/utilities/float/#classes" target="_blank" rel="noopener">打开getbootstrap.com上的示例</a></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"float-left"</span>&gt;Float left on all viewport sizes&lt;<span class="regexp">/div&gt;&lt;br&gt;</span></span><br><span class="line"><span class="regexp">&lt;div class="float-right"&gt;Float right on all viewport sizes&lt;/</span>div&gt;<span class="xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"float-none"</span>&gt;</span>Don't float on all viewport sizes<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p><strong>混入</strong></p>
<p>或者是Sass Mixin：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">.element &#123;</span><br><span class="line">  @include float-left;</span><br><span class="line">&#125;</span><br><span class="line">.another-element &#123;</span><br><span class="line">  @include float-right;</span><br><span class="line">&#125;</span><br><span class="line">.one-more &#123;</span><br><span class="line">  @include float-none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>响应性</strong></p>
<p>响应性的变化也存在于每一个<code>float</code>值中。</p>
<p><a href="https://getbootstrap.com/docs/4.0/utilities/float/#responsive" target="_blank" rel="noopener">打开getbootstrap.com上的示例</a></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"float-sm-left"</span>&gt;Float left on viewports sized SM (small) or wider&lt;<span class="regexp">/div&gt;&lt;br&gt;</span></span><br><span class="line"><span class="regexp">&lt;div class="float-md-left"&gt;Float left on viewports sized MD (medium) or wider&lt;/</span>div&gt;<span class="xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line">&lt;div class="float-lg-left"&gt;Float left on viewports sized LG (large) or wider&lt;/div&gt;&lt;br&gt;</span><br><span class="line">&lt;div class="float-xl-left"&gt;Float left on viewports sized XL (extra-large) or wider&lt;/div&gt;&lt;br&gt;</span><br></pre></td></tr></table></figure>

<p>这里有所有的支持类。</p>
<ul>
<li><p><code>.float-left</code></p>
</li>
<li><p><code>.float-right</code></p>
</li>
<li><p><code>.float-none</code></p>
</li>
<li><p><code>.float-sm-left</code></p>
</li>
<li><p><code>.float-sm-right</code></p>
</li>
<li><p><code>.float-sm-none</code></p>
</li>
<li><p><code>.float-md-left</code></p>
</li>
<li><p><code>.float-md-right</code></p>
</li>
<li><p><code>.float-md-none</code></p>
</li>
<li><p><code>.float-lg-left</code></p>
</li>
<li><p><code>.float-lg-right</code></p>
</li>
<li><p><code>.float-lg-none</code></p>
</li>
<li><p><code>.float-xl-left</code></p>
</li>
<li><p><code>.float-xl-right</code></p>
</li>
<li><p><code>.float-xl-none</code></p>
</li>
</ul>
<h4 id="5-2-8-图像替换-Image-replacement"><a href="#5-2-8-图像替换-Image-replacement" class="headerlink" title="5.2.8 图像替换 | Image replacement"></a>5.2.8 图像替换 | Image replacement</h4><p>利用<code>.text-hide</code>类或mixin帮助用背景图像替换元素的文本内容。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;h1 <span class="class"><span class="keyword">class</span></span>=<span class="string">"text-hide"</span> style=<span class="string">"background-image: url('/assets/brand/bootstrap-solid.svg'); width: 50px; height: 50px;"</span>&gt;Bootstrap&lt;<span class="regexp">/h1&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="5-2-9-位置-Position"><a href="#5-2-9-位置-Position" class="headerlink" title="5.2.9 位置 | Position"></a>5.2.9 位置 | Position</h4><p>使用这些速记工具快速配置元素的位置。</p>
<p><strong>共同的价值</strong></p>
<p>快速定位类可用，但它们没有响应。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"position-static"</span>&gt;...&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;div class="position-relative"&gt;...&lt;/</span>div&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"position-absolute"</span>&gt;...&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;div class="position-fixed"&gt;...&lt;/</span>div&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"position-sticky"</span>&gt;...&lt;<span class="regexp">/div&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>固定顶部</strong></p>
<p>从边到边放置一个元素在视口的顶部。确保你了解项目中固定职位的影响；您可能需要添加aditional CSS。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"fixed-top"</span>&gt;...&lt;<span class="regexp">/div&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>固定底部</strong></p>
<p>将元素放置在视口的底部，从边到边。确保你了解项目中固定职位的影响；您可能需要添加aditional CSS。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"fixed-bottom"</span>&gt;...&lt;<span class="regexp">/div&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>粘顶</strong></p>
<p>将元素放置在视口的顶部，从边到边，但只能在滚过它之后进行。<code>.sticky-top</code>实用程序使用CSS <code>position: sticky</code>，这在所有浏览器中都不完全支持。</p>
<p><strong>Microsoft Edge和IE11将呈现<code>position: sticky</code>为\</strong><code>position: relative</code><strong>。</strong>因此，我们将这些样式封装在<code>@supports</code>查询中，将粘滞性限制为只能正确呈现它的浏览器。  </p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"sticky-top"</span>&gt;...&lt;<span class="regexp">/div&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="5-2-8-荧幕阅读器-Screenreaders"><a href="#5-2-8-荧幕阅读器-Screenreaders" class="headerlink" title="5.2.8 荧幕阅读器 | Screenreaders"></a>5.2.8 荧幕阅读器 | Screenreaders</h4><p>使用屏幕阅读器实用程序隐藏除屏幕阅读器以外的所有设备上的元素</p>
<p>隐藏所有设备的元素<strong>，除了屏幕阅读器</strong>使用<code>.sr-only</code>。<code>.sr-only</code>与<code>.sr-only-focusable</code>焦点合并时再次显示元素（例如，通过键盘用户）。也可以用作mixin。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;a <span class="class"><span class="keyword">class</span></span>=<span class="string">"sr-only sr-only-focusable"</span> href=<span class="string">"#content"</span>&gt;Skip to main content&lt;<span class="regexp">/a&gt;</span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/ Usage as a mixin</span></span><br><span class="line"><span class="regexp">.skip-navigation &#123;</span></span><br><span class="line"><span class="regexp">  @include sr-only;</span></span><br><span class="line"><span class="regexp">  @include sr-only-focusable;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br></pre></td></tr></table></figure>

<h4 id="5-2-9-尺寸"><a href="#5-2-9-尺寸" class="headerlink" title="5.2.9 尺寸"></a>5.2.9 尺寸</h4><p>使用我们的宽度和高度实用程序轻松制作宽或高（相对于其父项）的元素。</p>
<p>宽度和高度实用程序从<code>$sizes</code>Sass地图中生成<code>_variables.scss</code>。包括支持<code>25%</code>，<code>50%</code>，<code>75%</code>，和<code>100%</code>默认。根据需要在这里生成不同的实用程序，修改这些值。</p>
<p><a href="https://getbootstrap.com/docs/4.0/utilities/sizing/#content" target="_blank" rel="noopener">打开getbootstrap.com上的示例</a></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"w-25 p-3"</span> style=<span class="string">"background-color: #eee;"</span>&gt;Width <span class="number">25</span>%&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;div class="w-50 p-3" style="background-color: #eee;"&gt;Width 50%&lt;/</span>div&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"w-75 p-3"</span> style=<span class="string">"background-color: #eee;"</span>&gt;Width <span class="number">75</span>%&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;div class="w-100 p-3" style="background-color: #eee;"&gt;Width 100%&lt;/</span>div&gt;</span><br></pre></td></tr></table></figure>

<p><a href="https://getbootstrap.com/docs/4.0/utilities/sizing/#content" target="_blank" rel="noopener">打开getbootstrap.com上的示例</a></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;div style=<span class="string">"height: 100px; background-color: rgba(255,0,0,0.1);"</span>&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"h-25 d-inline-block"</span> style=<span class="string">"width: 120px; background-color: rgba(0,0,255,.1)"</span>&gt;Height <span class="number">25</span>%&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">  &lt;div class="h-50 d-inline-block" style="width: 120px; background-color: rgba(0,0,255,.1)"&gt;Height 50%&lt;/</span>div&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"h-75 d-inline-block"</span> style=<span class="string">"width: 120px; background-color: rgba(0,0,255,.1)"</span>&gt;Height <span class="number">75</span>%&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">  &lt;div class="h-100 d-inline-block" style="width: 120px; background-color: rgba(0,0,255,.1)"&gt;Height 100%&lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br></pre></td></tr></table></figure>

<p>您也可以根据需要使用<code>max-width: 100%;</code>和使用<code>max-height: 100%;</code>实用程序。</p>
<p><a href="https://getbootstrap.com/docs/4.0/utilities/sizing/#content" target="_blank" rel="noopener">打开getbootstrap.com上的示例</a></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;img <span class="class"><span class="keyword">class</span></span>=<span class="string">"mw-100"</span> src=<span class="string">"..."</span> alt=<span class="string">"Max-width 100%"</span>&gt;</span><br></pre></td></tr></table></figure>

<p><a href="https://getbootstrap.com/docs/4.0/utilities/sizing/#content" target="_blank" rel="noopener">打开getbootstrap.com上的示例</a></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;div style=<span class="string">"height: 100px; background-color: rgba(255,0,0,0.1);"</span>&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"mh-100"</span> style=<span class="string">"width: 100px; height: 200px; background-color: rgba(0,0,255,0.1);"</span>&gt;Max-height <span class="number">100</span>%&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br></pre></td></tr></table></figure>

<h4 id="5-2-10-间隔-Spacing"><a href="#5-2-10-间隔-Spacing" class="headerlink" title="5.2.10 间隔|Spacing"></a>5.2.10 间隔|Spacing</h4><p>Bootstrap包含各种速记响应边距和填充实用程序类，以修改元素的外观。</p>
<p><strong>表示法</strong></p>
<p>适用于所有断点，从间距公用事业<code>xs</code>到<code>xl</code>，在他们没有断点的缩写。这是因为这些类是从上到下应用的<code>min-width: 0</code>，因此不受媒体查询的约束。然而，其余的断点确实包含断点缩写。</p>
<p>类别是使用的格式命名<code>{property}{sides}-{size}</code>为<code>xs</code>和<code>{property}{sides}-{breakpoint}-{size}</code>为<code>sm</code>，<code>md</code>，<code>lg</code>，和<code>xl</code>。</p>
<p>当<em>属性</em>是以下之一：</p>
<ul>
<li><p><code>m</code>-用于设置<code>margin</code></p>
</li>
<li><p><code>p</code>-用于设置<code>padding</code></p>
</li>
</ul>
<p>当<em>双方</em>是一个：</p>
<ul>
<li><p><code>t</code>-用于设置<code>margin-top</code>或<code>padding-top</code></p>
</li>
<li><p><code>b</code>-用于设置<code>margin-bottom</code>或<code>padding-bottom</code></p>
</li>
<li><p><code>l</code>-用于设置<code>margin-left</code>或<code>padding-left</code></p>
</li>
<li><p><code>r</code>-用于设置<code>margin-right</code>或<code>padding-right</code></p>
</li>
<li><p><code>x</code>-对于设置两者的类<code>*-left</code>和<code>*-right</code></p>
</li>
<li><p><code>y</code>-对于设置两者的类<code>*-top</code>和<code>*-bottom</code></p>
</li>
<li><p>为设置<code>margin</code>或<code>padding</code>元素的所有四个方面</p>
</li>
</ul>
<p>其中<em>大小</em>是以下之一：</p>
<ul>
<li><p><code>0</code>- 用于消除<code>margin</code>或<code>padding</code>通过设置的类<code>0</code> </p>
</li>
<li><p><code>1</code>- （默认情况下）的类时，设置<code>margin</code>或<code>padding</code>以<code>$spacer * .25</code> </p>
</li>
<li><p><code>2</code>- （默认情况下）的类时，设置<code>margin</code>或<code>padding</code>以<code>$spacer * .5</code> </p>
</li>
<li><p><code>3</code>- （默认情况下）的类时，设置<code>margin</code>或<code>padding</code>以<code>$spacer</code> </p>
</li>
<li><p><code>4</code>- （默认情况下）的类时，设置<code>margin</code>或<code>padding</code>以<code>$spacer * 1.5</code> </p>
</li>
<li><p><code>5</code>- （默认情况下）的类时，设置<code>margin</code>或<code>padding</code>以<code>$spacer * 3</code> </p>
</li>
<li><p><code>auto</code>- 用于设置<code>margin</code>为自动的类</p>
</li>
</ul>
<p>（您可以通过向<code>$spacers</code>Sass地图变量添加条目来添加更多尺寸。）</p>
<p><strong>实例</strong></p>
<p>以下是这些类的一些有代表性的例子：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">.mt<span class="number">-0</span> &#123;</span><br><span class="line">  margin-top: <span class="number">0</span> !important;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.ml<span class="number">-1</span> &#123;</span><br><span class="line">  margin-left: ($spacer * <span class="number">.25</span>) !important;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.px<span class="number">-2</span> &#123;</span><br><span class="line">  padding-left: ($spacer * <span class="number">.5</span>) !important;</span><br><span class="line">  padding-right: ($spacer * <span class="number">.5</span>) !important;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.p<span class="number">-3</span> &#123;</span><br><span class="line">  padding: $spacer !important;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>水平居中</strong></p>
<p>此外，Bootstrap还包含一个<code>.mx-auto</code>用于将固定宽度块级别内容水平居中的类，即具有<code>display: block</code>和<code>width</code>设置水平边距的内容<code>auto</code>。</p>
<p><a href="https://getbootstrap.com/docs/4.0/utilities/spacing/#horizontal-centering" target="_blank" rel="noopener">打开getbootstrap.com上的示例</a></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"mx-auto"</span> style=<span class="string">"width: 200px;"</span>&gt;</span><br><span class="line">  Centered element</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="5-2-11-文本-Text"><a href="#5-2-11-文本-Text" class="headerlink" title="5.2.11 文本 | Text"></a>5.2.11 文本 | Text</h4><p>常见文本工具的文档和示例，以控制对齐，包装，重量等等。</p>
<p><strong>文本对齐</strong></p>
<p>轻松地将文本重新对齐到具有文本对齐类的组件。</p>
<p><a href="https://getbootstrap.com/docs/4.0/utilities/text/#text-alignment" target="_blank" rel="noopener">打开getbootstrap.com上的示例</a></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">"text-justify"</span>&gt;Ambitioni dedisse scripsisse iudicaretur. Cras mattis iudicium purus sit amet fermentum. Donec sed odio operae, eu vulputate felis rhoncus. Praeterea iter est quasdam res quas ex communi. At nos hinc posthac, sitientis piros Afros. Petierunt uti sibi concilium totius Galliae <span class="keyword">in</span> diem certam indicere. Cras mattis iudicium purus sit amet fermentum.&lt;<span class="regexp">/p&gt;</span></span><br></pre></td></tr></table></figure>

<p>对于左对齐，右对齐和中心对齐，可以使用与网格系统使用相同视口宽度断点的响应类。</p>
<p><a href="https://getbootstrap.com/docs/4.0/utilities/text/#text-alignment" target="_blank" rel="noopener">打开getbootstrap.com上的示例</a></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">"text-left"</span>&gt;Left aligned text on all viewport sizes.&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">&lt;p class="text-center"&gt;Center aligned text on all viewport sizes.&lt;/</span>p&gt;</span><br><span class="line">&lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">"text-right"</span>&gt;Right aligned text on all viewport sizes.&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;p class="text-sm-left"&gt;Left aligned text on viewports sized SM (small) or wider.&lt;/</span>p&gt;</span><br><span class="line">&lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">"text-md-left"</span>&gt;Left aligned text on viewports sized MD (medium) or wider.&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">&lt;p class="text-lg-left"&gt;Left aligned text on viewports sized LG (large) or wider.&lt;/</span>p&gt;</span><br><span class="line">&lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">"text-xl-left"</span>&gt;Left aligned text on viewports sized XL (extra-large) or wider.&lt;<span class="regexp">/p&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>文本换行和溢出</strong></p>
<p>防止文本与<code>.text-nowrap</code>类一起打包。</p>
<p><a href="https://getbootstrap.com/docs/4.0/utilities/text/#text-wrapping-and-overflow" target="_blank" rel="noopener">打开getbootstrap.com上的示例</a></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"row"</span>&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-1 text-nowrap"</span>&gt;</span><br><span class="line">    Curabitur blandit tempus ardua ridiculus sed magna.</span><br><span class="line">  &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">  &lt;div class="col-11"&gt;</span></span><br><span class="line"><span class="regexp">    &lt;img src="..." alt="An image to show the text doesn't wrap"&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br></pre></td></tr></table></figure>

<p>对于更长的内容，您可以添加一个<code>.text-truncate</code>类以省略号截断文本。<strong>需要</strong><code>**display: inline-block**</code><strong>或</strong><code>**display: block**</code><strong><em>\</em>.**</strong>。</p>
<p><a href="https://getbootstrap.com/docs/4.0/utilities/text/#text-wrapping-and-overflow" target="_blank" rel="noopener">打开getbootstrap.com上的示例</a></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;!-- Block level --&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"row"</span>&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-2 text-truncate"</span>&gt;</span><br><span class="line">    Praeterea iter est quasdam res quas ex communi.</span><br><span class="line">  &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- Inline level --&gt;</span><br><span class="line">&lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"d-inline-block text-truncate"</span> style=<span class="string">"max-width: 150px;"</span>&gt;</span><br><span class="line">  Praeterea iter est quasdam res quas ex communi.</span><br><span class="line">&lt;<span class="regexp">/span&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>文本转换</strong></p>
<p>使用文本大写类转换组件中的文本。</p>
<p><a href="https://getbootstrap.com/docs/4.0/utilities/text/#text-transform" target="_blank" rel="noopener">打开getbootstrap.com上的示例</a></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">"text-lowercase"</span>&gt;Lowercased text.&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">&lt;p class="text-uppercase"&gt;Uppercased text.&lt;/</span>p&gt;</span><br><span class="line">&lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">"text-capitalize"</span>&gt;CapiTaliZed text.&lt;<span class="regexp">/p&gt;</span></span><br></pre></td></tr></table></figure>

<p>请注意，<code>text-capitalize</code>只更改每个单词的第一个字母，使其他字母的大小写不受影响。</p>
<p><strong>字体粗细和斜体</strong></p>
<p>快速更改文字的粗细或斜体文字。</p>
<p><a href="https://getbootstrap.com/docs/4.0/utilities/text/#font-weight-and-italics" target="_blank" rel="noopener">打开getbootstrap.com上的示例</a></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">"font-weight-bold"</span>&gt;Bold text.&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">&lt;p class="font-weight-normal"&gt;Normal weight text.&lt;/</span>p&gt;</span><br><span class="line">&lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">"font-weight-light"</span>&gt;Light weight text.&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">&lt;p class="font-italic"&gt;Italic text.&lt;/</span>p&gt;</span><br></pre></td></tr></table></figure>

<h4 id="5-2-12-垂直对齐-Vertical-alignment"><a href="#5-2-12-垂直对齐-Vertical-alignment" class="headerlink" title="5.2.12 垂直对齐 | Vertical alignment"></a>5.2.12 垂直对齐 | Vertical alignment</h4><p>轻松更改内联，内联块，内嵌表格和表格单元格元素的垂直对齐方式。</p>
<p>用<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align" target="_blank" rel="noopener"><code>vertical-alignment</code></a>实用程序更改元素的对齐方式。请注意，垂直对齐仅影响内联，内联块，内联表和表格单元格元素。</p>
<p>选择<code>.align-baseline</code>，<code>.align-top</code>，<code>.align-middle</code>，<code>.align-bottom</code>，<code>.align-text-bottom</code>，和<code>.align-text-top</code>。</p>
<p>内联元素：</p>
<p><a href="https://getbootstrap.com/docs/4.0/utilities/vertical-align/#content" target="_blank" rel="noopener">打开getbootstrap.com上的示例</a></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"align-baseline"</span>&gt;baseline&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">&lt;span class="align-top"&gt;top&lt;/</span>span&gt;</span><br><span class="line">&lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"align-middle"</span>&gt;middle&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">&lt;span class="align-bottom"&gt;bottom&lt;/</span>span&gt;</span><br><span class="line">&lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"align-text-top"</span>&gt;text-top&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">&lt;span class="align-text-bottom"&gt;text-bottom&lt;/</span>span&gt;</span><br></pre></td></tr></table></figure>

<p>使用表格单元格：</p>
<p><a href="https://getbootstrap.com/docs/4.0/utilities/vertical-align/#content" target="_blank" rel="noopener">打开getbootstrap.com上的示例</a></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;table style=<span class="string">"height: 100px;"</span>&gt;</span><br><span class="line">  &lt;tbody&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">      &lt;td <span class="class"><span class="keyword">class</span></span>=<span class="string">"align-baseline"</span>&gt;baseline&lt;<span class="regexp">/td&gt;</span></span><br><span class="line"><span class="regexp">      &lt;td class="align-top"&gt;top&lt;/</span>td&gt;</span><br><span class="line">      &lt;td <span class="class"><span class="keyword">class</span></span>=<span class="string">"align-middle"</span>&gt;middle&lt;<span class="regexp">/td&gt;</span></span><br><span class="line"><span class="regexp">      &lt;td class="align-bottom"&gt;bottom&lt;/</span>td&gt;</span><br><span class="line">      &lt;td <span class="class"><span class="keyword">class</span></span>=<span class="string">"align-text-top"</span>&gt;text-top&lt;<span class="regexp">/td&gt;</span></span><br><span class="line"><span class="regexp">      &lt;td class="align-text-bottom"&gt;text-bottom&lt;/</span>td&gt;</span><br><span class="line">    &lt;<span class="regexp">/tr&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>tbody&gt;</span><br><span class="line">&lt;<span class="regexp">/table&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="5-2-13-可见性"><a href="#5-2-13-可见性" class="headerlink" title="5.2.13 可见性"></a>5.2.13 可见性</h4><p>控制具有可见性实用程序的元素的可见性，而不修改显示。</p>
<p><code>visibility</code>使用我们的可见性实用程序设置元素。它们根本不会修改<code>display</code>值，并有助于隐藏大多数用户的内容，但仍然保留屏幕阅读器的内容。</p>
<p>根据需要适用<code>.visible</code>或<code>.invisible</code>。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"visible"</span>&gt;...&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;div class="invisible"&gt;...&lt;/</span>div&gt;</span><br><span class="line"><span class="comment">// Class</span></span><br><span class="line">.visible &#123;</span><br><span class="line">  visibility: visible;</span><br><span class="line">&#125;</span><br><span class="line">.invisible &#123;</span><br><span class="line">  visibility: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Usage as a mixin</span></span><br><span class="line">.element &#123;</span><br><span class="line">  @include invisible(visible);</span><br><span class="line">&#125;</span><br><span class="line">.element &#123;</span><br><span class="line">  @include invisible(hidden);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
</search>
